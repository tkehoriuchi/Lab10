

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Apr 02 07:57:11 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    77                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    78  0000                     
    79                           ; Version 2.10
    80                           ; Generated 31/07/2019 GMT
    81                           ; 
    82                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC18F26K22 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     
   114 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   115  0000                     
   116 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   117  0000                     
   118 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   119  0000                     
   120                           	psect	idataCOMRAM
   121  002A7C                     __pidataCOMRAM:
   122                           	opt callstack 0
   123                           
   124                           ;initializer for myTMR0ISR@activeBufferpull
   125  002A7C  01                 	db	1
   126                           
   127                           ;initializer for myTMR0ISR@activeBuffersample
   128  002A7D  01                 	db	1
   129                           
   130                           	psect	idataBANK0
   131  002A7E                     __pidataBANK0:
   132                           	opt callstack 0
   133                           
   134                           ;initializer for _sampleRate
   135  002A7E  0640               	dw	1600
   136                           
   137                           	psect	mediumconst
   138  00F954                     __pmediumconst:
   139                           	opt callstack 0
   140  00F954  00                 	db	0
   141  00F955                     _sin:
   142                           	opt callstack 0
   143  00F955  80                 	db	128
   144  00F956  9F                 	db	159
   145  00F957  BB                 	db	187
   146  00F958  D5                 	db	213
   147  00F959  E9                 	db	233
   148  00F95A  F8                 	db	248
   149  00F95B  FF                 	db	255
   150  00F95C  FF                 	db	255
   151  00F95D  F8                 	db	248
   152  00F95E  E9                 	db	233
   153  00F95F  D5                 	db	213
   154  00F960  BB                 	db	187
   155  00F961  9F                 	db	159
   156  00F962  80                 	db	128
   157  00F963  61                 	db	97
   158  00F964  45                 	db	69
   159  00F965  2B                 	db	43
   160  00F966  17                 	db	23
   161  00F967  08                 	db	8
   162  00F968  01                 	db	1
   163  00F969  01                 	db	1
   164  00F96A  08                 	db	8
   165  00F96B  17                 	db	23
   166  00F96C  2B                 	db	43
   167  00F96D  45                 	db	69
   168  00F96E  61                 	db	97
   169  00F96F                     __end_of_sin:
   170                           	opt callstack 0
   171  00F96F                     _spi2_configuration:
   172                           	opt callstack 0
   173  00F96F  01                 	db	1
   174  00F970  40                 	db	64
   175  00F971  01                 	db	1
   176  00F972  00                 	db	0
   177  00F973                     __end_of_spi2_configuration:
   178                           	opt callstack 0
   179  0000                     _CCPTMRS0bits	set	3913
   180  0000                     _ANSELA	set	3896
   181  0000                     _ANSELB	set	3897
   182  0000                     _ANSELC	set	3898
   183  0000                     _ADRESL	set	4035
   184  0000                     _ADCON2	set	4032
   185  0000                     _ADCON1	set	4033
   186  0000                     _ADCON0	set	4034
   187  0000                     _PIR3bits	set	4004
   188  0000                     _SSP2BUF	set	3951
   189  0000                     _SSP2CON2	set	3947
   190  0000                     _SSP2CON1bits	set	3948
   191  0000                     _TRISBbits	set	3987
   192  0000                     _SSP2ADD	set	3950
   193  0000                     _SSP2CON1	set	3948
   194  0000                     _SSP2STAT	set	3949
   195  0000                     _RCONbits	set	4048
   196  0000                     _TXREG1	set	4013
   197  0000                     _RCREG1	set	4014
   198  0000                     _RCSTA1bits	set	4011
   199  0000                     _TXSTA1bits	set	4012
   200  0000                     _SPBRGH1	set	4016
   201  0000                     _SPBRG1	set	4015
   202  0000                     _TXSTA1	set	4012
   203  0000                     _RCSTA1	set	4011
   204  0000                     _BAUDCON1	set	4024
   205  0000                     _CCPR1L	set	4030
   206  0000                     _CCPR1H	set	4031
   207  0000                     _PSTR1CON	set	4025
   208  0000                     _PWM1CON	set	4023
   209  0000                     _ECCP1AS	set	4022
   210  0000                     _CCP1CON	set	4029
   211  0000                     _T2CONbits	set	4026
   212  0000                     _T2CON	set	4026
   213  0000                     _PIR1bits	set	3998
   214  0000                     _TMR2	set	4028
   215  0000                     _PR2	set	4027
   216  0000                     _T0CON	set	4053
   217  0000                     _TMR0L	set	4054
   218  0000                     _TMR0H	set	4055
   219  0000                     _T0CONbits	set	4053
   220  0000                     _INTCON2bits	set	4081
   221  0000                     _WPUB	set	3937
   222  0000                     _TRISC	set	3988
   223  0000                     _TRISB	set	3987
   224  0000                     _TRISA	set	3986
   225  0000                     _LATC	set	3979
   226  0000                     _LATB	set	3978
   227  0000                     _LATA	set	3977
   228  0000                     _OSCTUNE	set	3995
   229  0000                     _OSCCON2	set	4050
   230  0000                     _OSCCON	set	4051
   231  0000                     _ADCON0bits	set	4034
   232  0000                     _ADRESH	set	4036
   233  0000                     _INTCONbits	set	4082
   234  0000                     _LATBbits	set	3978
   235  0000                     _PLLRDY	set	32407
   236  00F973                     STR_54:
   237  00F973  50                 	db	80	;'P'
   238  00F974  72                 	db	114	;'r'
   239  00F975  65                 	db	101	;'e'
   240  00F976  73                 	db	115	;'s'
   241  00F977  73                 	db	115	;'s'
   242  00F978  20                 	db	32
   243  00F979  61                 	db	97	;'a'
   244  00F97A  6E                 	db	110	;'n'
   245  00F97B  79                 	db	121	;'y'
   246  00F97C  20                 	db	32
   247  00F97D  6B                 	db	107	;'k'
   248  00F97E  65                 	db	101	;'e'
   249  00F97F  79                 	db	121	;'y'
   250  00F980  20                 	db	32
   251  00F981  74                 	db	116	;'t'
   252  00F982  6F                 	db	111	;'o'
   253  00F983  20                 	db	32
   254  00F984  73                 	db	115	;'s'
   255  00F985  74                 	db	116	;'t'
   256  00F986  61                 	db	97	;'a'
   257  00F987  72                 	db	114	;'r'
   258  00F988  74                 	db	116	;'t'
   259  00F989  20                 	db	32
   260  00F98A  72                 	db	114	;'r'
   261  00F98B  65                 	db	101	;'e'
   262  00F98C  63                 	db	99	;'c'
   263  00F98D  6F                 	db	111	;'o'
   264  00F98E  72                 	db	114	;'r'
   265  00F98F  64                 	db	100	;'d'
   266  00F990  69                 	db	105	;'i'
   267  00F991  6E                 	db	110	;'n'
   268  00F992  67                 	db	103	;'g'
   269  00F993  20                 	db	32
   270  00F994  61                 	db	97	;'a'
   271  00F995  75                 	db	117	;'u'
   272  00F996  64                 	db	100	;'d'
   273  00F997  69                 	db	105	;'i'
   274  00F998  6F                 	db	111	;'o'
   275  00F999  20                 	db	32
   276  00F99A  61                 	db	97	;'a'
   277  00F99B  6E                 	db	110	;'n'
   278  00F99C  64                 	db	100	;'d'
   279  00F99D  20                 	db	32
   280  00F99E  70                 	db	112	;'p'
   281  00F99F  72                 	db	114	;'r'
   282  00F9A0  65                 	db	101	;'e'
   283  00F9A1  73                 	db	115	;'s'
   284  00F9A2  73                 	db	115	;'s'
   285  00F9A3  20                 	db	32
   286  00F9A4  61                 	db	97	;'a'
   287  00F9A5  6E                 	db	110	;'n'
   288  00F9A6  79                 	db	121	;'y'
   289  00F9A7  20                 	db	32
   290  00F9A8  6B                 	db	107	;'k'
   291  00F9A9  65                 	db	101	;'e'
   292  00F9AA  79                 	db	121	;'y'
   293  00F9AB  20                 	db	32
   294  00F9AC  74                 	db	116	;'t'
   295  00F9AD  6F                 	db	111	;'o'
   296  00F9AE  20                 	db	32
   297  00F9AF  73                 	db	115	;'s'
   298  00F9B0  74                 	db	116	;'t'
   299  00F9B1  6F                 	db	111	;'o'
   300  00F9B2  70                 	db	112	;'p'
   301  00F9B3  20                 	db	32
   302  00F9B4  72                 	db	114	;'r'
   303  00F9B5  65                 	db	101	;'e'
   304  00F9B6  63                 	db	99	;'c'
   305  00F9B7  6F                 	db	111	;'o'
   306  00F9B8  72                 	db	114	;'r'
   307  00F9B9  64                 	db	100	;'d'
   308  00F9BA  69                 	db	105	;'i'
   309  00F9BB  6E                 	db	110	;'n'
   310  00F9BC  67                 	db	103	;'g'
   311  00F9BD  2E                 	db	46
   312  00F9BE  0D                 	db	13
   313  00F9BF  0A                 	db	10
   314  00F9C0  00                 	db	0
   315  00F9C1                     STR_76:
   316  00F9C1  4C                 	db	76	;'L'
   317  00F9C2  6F                 	db	111	;'o'
   318  00F9C3  67                 	db	103	;'g'
   319  00F9C4  20                 	db	32
   320  00F9C5  66                 	db	102	;'f'
   321  00F9C6  69                 	db	105	;'i'
   322  00F9C7  6C                 	db	108	;'l'
   323  00F9C8  65                 	db	101	;'e'
   324  00F9C9  20                 	db	32
   325  00F9CA  6E                 	db	110	;'n'
   326  00F9CB  61                 	db	97	;'a'
   327  00F9CC  6D                 	db	109	;'m'
   328  00F9CD  65                 	db	101	;'e'
   329  00F9CE  3A                 	db	58	;':'
   330  00F9CF  20                 	db	32
   331  00F9D0  42                 	db	66	;'B'
   332  00F9D1  72                 	db	114	;'r'
   333  00F9D2  6F                 	db	111	;'o'
   334  00F9D3  77                 	db	119	;'w'
   335  00F9D4  73                 	db	115	;'s'
   336  00F9D5  65                 	db	101	;'e'
   337  00F9D6  20                 	db	32
   338  00F9D7  61                 	db	97	;'a'
   339  00F9D8  6E                 	db	110	;'n'
   340  00F9D9  64                 	db	100	;'d'
   341  00F9DA  20                 	db	32
   342  00F9DB  70                 	db	112	;'p'
   343  00F9DC  72                 	db	114	;'r'
   344  00F9DD  6F                 	db	111	;'o'
   345  00F9DE  76                 	db	118	;'v'
   346  00F9DF  69                 	db	105	;'i'
   347  00F9E0  64                 	db	100	;'d'
   348  00F9E1  65                 	db	101	;'e'
   349  00F9E2  20                 	db	32
   350  00F9E3  61                 	db	97	;'a'
   351  00F9E4  20                 	db	32
   352  00F9E5  2E                 	db	46
   353  00F9E6  63                 	db	99	;'c'
   354  00F9E7  73                 	db	115	;'s'
   355  00F9E8  76                 	db	118	;'v'
   356  00F9E9  20                 	db	32
   357  00F9EA  65                 	db	101	;'e'
   358  00F9EB  78                 	db	120	;'x'
   359  00F9EC  74                 	db	116	;'t'
   360  00F9ED  65                 	db	101	;'e'
   361  00F9EE  6E                 	db	110	;'n'
   362  00F9EF  73                 	db	115	;'s'
   363  00F9F0  69                 	db	105	;'i'
   364  00F9F1  6F                 	db	111	;'o'
   365  00F9F2  6E                 	db	110	;'n'
   366  00F9F3  20                 	db	32
   367  00F9F4  74                 	db	116	;'t'
   368  00F9F5  6F                 	db	111	;'o'
   369  00F9F6  20                 	db	32
   370  00F9F7  79                 	db	121	;'y'
   371  00F9F8  6F                 	db	111	;'o'
   372  00F9F9  75                 	db	117	;'u'
   373  00F9FA  72                 	db	114	;'r'
   374  00F9FB  20                 	db	32
   375  00F9FC  66                 	db	102	;'f'
   376  00F9FD  69                 	db	105	;'i'
   377  00F9FE  6C                 	db	108	;'l'
   378  00F9FF  65                 	db	101	;'e'
   379  00FA00  20                 	db	32
   380  00FA01  6E                 	db	110	;'n'
   381  00FA02  61                 	db	97	;'a'
   382  00FA03  6D                 	db	109	;'m'
   383  00FA04  65                 	db	101	;'e'
   384  00FA05  0D                 	db	13
   385  00FA06  0A                 	db	10
   386  00FA07  00                 	db	0
   387  00FA08                     STR_70:
   388  00FA08  54                 	db	84	;'T'
   389  00FA09  6F                 	db	111	;'o'
   390  00FA0A  20                 	db	32
   391  00FA0B  73                 	db	115	;'s'
   392  00FA0C  70                 	db	112	;'p'
   393  00FA0D  6F                 	db	111	;'o'
   394  00FA0E  6F                 	db	111	;'o'
   395  00FA0F  6C                 	db	108	;'l'
   396  00FA10  20                 	db	32
   397  00FA11  74                 	db	116	;'t'
   398  00FA12  65                 	db	101	;'e'
   399  00FA13  72                 	db	114	;'r'
   400  00FA14  6D                 	db	109	;'m'
   401  00FA15  69                 	db	105	;'i'
   402  00FA16  6E                 	db	110	;'n'
   403  00FA17  61                 	db	97	;'a'
   404  00FA18  6C                 	db	108	;'l'
   405  00FA19  20                 	db	32
   406  00FA1A  63                 	db	99	;'c'
   407  00FA1B  6F                 	db	111	;'o'
   408  00FA1C  6E                 	db	110	;'n'
   409  00FA1D  74                 	db	116	;'t'
   410  00FA1E  65                 	db	101	;'e'
   411  00FA1F  6E                 	db	110	;'n'
   412  00FA20  74                 	db	116	;'t'
   413  00FA21  73                 	db	115	;'s'
   414  00FA22  20                 	db	32
   415  00FA23  69                 	db	105	;'i'
   416  00FA24  6E                 	db	110	;'n'
   417  00FA25  74                 	db	116	;'t'
   418  00FA26  6F                 	db	111	;'o'
   419  00FA27  20                 	db	32
   420  00FA28  61                 	db	97	;'a'
   421  00FA29  20                 	db	32
   422  00FA2A  66                 	db	102	;'f'
   423  00FA2B  69                 	db	105	;'i'
   424  00FA2C  6C                 	db	108	;'l'
   425  00FA2D  65                 	db	101	;'e'
   426  00FA2E  20                 	db	32
   427  00FA2F  66                 	db	102	;'f'
   428  00FA30  6F                 	db	111	;'o'
   429  00FA31  6C                 	db	108	;'l'
   430  00FA32  6C                 	db	108	;'l'
   431  00FA33  6F                 	db	111	;'o'
   432  00FA34  77                 	db	119	;'w'
   433  00FA35  20                 	db	32
   434  00FA36  74                 	db	116	;'t'
   435  00FA37  68                 	db	104	;'h'
   436  00FA38  65                 	db	101	;'e'
   437  00FA39  73                 	db	115	;'s'
   438  00FA3A  65                 	db	101	;'e'
   439  00FA3B  20                 	db	32
   440  00FA3C  69                 	db	105	;'i'
   441  00FA3D  6E                 	db	110	;'n'
   442  00FA3E  73                 	db	115	;'s'
   443  00FA3F  74                 	db	116	;'t'
   444  00FA40  72                 	db	114	;'r'
   445  00FA41  75                 	db	117	;'u'
   446  00FA42  63                 	db	99	;'c'
   447  00FA43  74                 	db	116	;'t'
   448  00FA44  69                 	db	105	;'i'
   449  00FA45  6F                 	db	111	;'o'
   450  00FA46  6E                 	db	110	;'n'
   451  00FA47  73                 	db	115	;'s'
   452  00FA48  3A                 	db	58	;':'
   453  00FA49  0D                 	db	13
   454  00FA4A  0A                 	db	10
   455  00FA4B  00                 	db	0
   456  00FA4C                     STR_88:
   457  00FA4C  50                 	db	80	;'P'
   458  00FA4D  72                 	db	114	;'r'
   459  00FA4E  65                 	db	101	;'e'
   460  00FA4F  73                 	db	115	;'s'
   461  00FA50  73                 	db	115	;'s'
   462  00FA51  20                 	db	32
   463  00FA52  61                 	db	97	;'a'
   464  00FA53  6E                 	db	110	;'n'
   465  00FA54  79                 	db	121	;'y'
   466  00FA55  20                 	db	32
   467  00FA56  6B                 	db	107	;'k'
   468  00FA57  65                 	db	101	;'e'
   469  00FA58  79                 	db	121	;'y'
   470  00FA59  20                 	db	32
   471  00FA5A  74                 	db	116	;'t'
   472  00FA5B  6F                 	db	111	;'o'
   473  00FA5C  20                 	db	32
   474  00FA5D  72                 	db	114	;'r'
   475  00FA5E  65                 	db	101	;'e'
   476  00FA5F  70                 	db	112	;'p'
   477  00FA60  6C                 	db	108	;'l'
   478  00FA61  61                 	db	97	;'a'
   479  00FA62  79                 	db	121	;'y'
   480  00FA63  20                 	db	32
   481  00FA64  74                 	db	116	;'t'
   482  00FA65  68                 	db	104	;'h'
   483  00FA66  65                 	db	101	;'e'
   484  00FA67  20                 	db	32
   485  00FA68  61                 	db	97	;'a'
   486  00FA69  75                 	db	117	;'u'
   487  00FA6A  64                 	db	100	;'d'
   488  00FA6B  69                 	db	105	;'i'
   489  00FA6C  6F                 	db	111	;'o'
   490  00FA6D  20                 	db	32
   491  00FA6E  73                 	db	115	;'s'
   492  00FA6F  74                 	db	116	;'t'
   493  00FA70  6F                 	db	111	;'o'
   494  00FA71  72                 	db	114	;'r'
   495  00FA72  65                 	db	101	;'e'
   496  00FA73  64                 	db	100	;'d'
   497  00FA74  20                 	db	32
   498  00FA75  6F                 	db	111	;'o'
   499  00FA76  6E                 	db	110	;'n'
   500  00FA77  20                 	db	32
   501  00FA78  74                 	db	116	;'t'
   502  00FA79  68                 	db	104	;'h'
   503  00FA7A  65                 	db	101	;'e'
   504  00FA7B  20                 	db	32
   505  00FA7C  53                 	db	83	;'S'
   506  00FA7D  44                 	db	68	;'D'
   507  00FA7E  20                 	db	32
   508  00FA7F  63                 	db	99	;'c'
   509  00FA80  61                 	db	97	;'a'
   510  00FA81  72                 	db	114	;'r'
   511  00FA82  64                 	db	100	;'d'
   512  00FA83  0D                 	db	13
   513  00FA84  0A                 	db	10
   514  00FA85  00                 	db	0
   515  00FA86                     STR_72:
   516  00FA86  52                 	db	82	;'R'
   517  00FA87  69                 	db	105	;'i'
   518  00FA88  67                 	db	103	;'g'
   519  00FA89  68                 	db	104	;'h'
   520  00FA8A  74                 	db	116	;'t'
   521  00FA8B  20                 	db	32
   522  00FA8C  6D                 	db	109	;'m'
   523  00FA8D  6F                 	db	111	;'o'
   524  00FA8E  75                 	db	117	;'u'
   525  00FA8F  73                 	db	115	;'s'
   526  00FA90  65                 	db	101	;'e'
   527  00FA91  20                 	db	32
   528  00FA92  63                 	db	99	;'c'
   529  00FA93  6C                 	db	108	;'l'
   530  00FA94  69                 	db	105	;'i'
   531  00FA95  63                 	db	99	;'c'
   532  00FA96  6B                 	db	107	;'k'
   533  00FA97  20                 	db	32
   534  00FA98  6F                 	db	111	;'o'
   535  00FA99  6E                 	db	110	;'n'
   536  00FA9A  20                 	db	32
   537  00FA9B  74                 	db	116	;'t'
   538  00FA9C  68                 	db	104	;'h'
   539  00FA9D  65                 	db	101	;'e'
   540  00FA9E  20                 	db	32
   541  00FA9F  75                 	db	117	;'u'
   542  00FAA0  70                 	db	112	;'p'
   543  00FAA1  70                 	db	112	;'p'
   544  00FAA2  65                 	db	101	;'e'
   545  00FAA3  72                 	db	114	;'r'
   546  00FAA4  20                 	db	32
   547  00FAA5  6C                 	db	108	;'l'
   548  00FAA6  65                 	db	101	;'e'
   549  00FAA7  66                 	db	102	;'f'
   550  00FAA8  74                 	db	116	;'t'
   551  00FAA9  20                 	db	32
   552  00FAAA  6F                 	db	111	;'o'
   553  00FAAB  66                 	db	102	;'f'
   554  00FAAC  20                 	db	32
   555  00FAAD  74                 	db	116	;'t'
   556  00FAAE  68                 	db	104	;'h'
   557  00FAAF  65                 	db	101	;'e'
   558  00FAB0  20                 	db	32
   559  00FAB1  50                 	db	80	;'P'
   560  00FAB2  75                 	db	117	;'u'
   561  00FAB3  54                 	db	84	;'T'
   562  00FAB4  54                 	db	84	;'T'
   563  00FAB5  59                 	db	89	;'Y'
   564  00FAB6  20                 	db	32
   565  00FAB7  77                 	db	119	;'w'
   566  00FAB8  69                 	db	105	;'i'
   567  00FAB9  6E                 	db	110	;'n'
   568  00FABA  64                 	db	100	;'d'
   569  00FABB  6F                 	db	111	;'o'
   570  00FABC  77                 	db	119	;'w'
   571  00FABD  0D                 	db	13
   572  00FABE  0A                 	db	10
   573  00FABF  00                 	db	0
   574  00FAC0                     STR_69:
   575  00FAC0  59                 	db	89	;'Y'
   576  00FAC1  6F                 	db	111	;'o'
   577  00FAC2  75                 	db	117	;'u'
   578  00FAC3  20                 	db	32
   579  00FAC4  6D                 	db	109	;'m'
   580  00FAC5  61                 	db	97	;'a'
   581  00FAC6  79                 	db	121	;'y'
   582  00FAC7  20                 	db	32
   583  00FAC8  74                 	db	116	;'t'
   584  00FAC9  65                 	db	101	;'e'
   585  00FACA  72                 	db	114	;'r'
   586  00FACB  6D                 	db	109	;'m'
   587  00FACC  69                 	db	105	;'i'
   588  00FACD  6E                 	db	110	;'n'
   589  00FACE  61                 	db	97	;'a'
   590  00FACF  74                 	db	116	;'t'
   591  00FAD0  65                 	db	101	;'e'
   592  00FAD1  20                 	db	32
   593  00FAD2  73                 	db	115	;'s'
   594  00FAD3  70                 	db	112	;'p'
   595  00FAD4  6F                 	db	111	;'o'
   596  00FAD5  6F                 	db	111	;'o'
   597  00FAD6  6C                 	db	108	;'l'
   598  00FAD7  69                 	db	105	;'i'
   599  00FAD8  6E                 	db	110	;'n'
   600  00FAD9  67                 	db	103	;'g'
   601  00FADA  20                 	db	32
   602  00FADB  61                 	db	97	;'a'
   603  00FADC  74                 	db	116	;'t'
   604  00FADD  20                 	db	32
   605  00FADE  61                 	db	97	;'a'
   606  00FADF  6E                 	db	110	;'n'
   607  00FAE0  79                 	db	121	;'y'
   608  00FAE1  74                 	db	116	;'t'
   609  00FAE2  69                 	db	105	;'i'
   610  00FAE3  6D                 	db	109	;'m'
   611  00FAE4  65                 	db	101	;'e'
   612  00FAE5  20                 	db	32
   613  00FAE6  77                 	db	119	;'w'
   614  00FAE7  69                 	db	105	;'i'
   615  00FAE8  74                 	db	116	;'t'
   616  00FAE9  68                 	db	104	;'h'
   617  00FAEA  20                 	db	32
   618  00FAEB  61                 	db	97	;'a'
   619  00FAEC  20                 	db	32
   620  00FAED  6B                 	db	107	;'k'
   621  00FAEE  65                 	db	101	;'e'
   622  00FAEF  79                 	db	121	;'y'
   623  00FAF0  70                 	db	112	;'p'
   624  00FAF1  72                 	db	114	;'r'
   625  00FAF2  65                 	db	101	;'e'
   626  00FAF3  73                 	db	115	;'s'
   627  00FAF4  73                 	db	115	;'s'
   628  00FAF5  2E                 	db	46
   629  00FAF6  0D                 	db	13
   630  00FAF7  0A                 	db	10
   631  00FAF8  00                 	db	0
   632  00FAF9                     STR_21:
   633  00FAF9  6C                 	db	108	;'l'
   634  00FAFA  3A                 	db	58	;':'
   635  00FAFB  20                 	db	32
   636  00FAFC  77                 	db	119	;'w'
   637  00FAFD  72                 	db	114	;'r'
   638  00FAFE  69                 	db	105	;'i'
   639  00FAFF  74                 	db	116	;'t'
   640  00FB00  65                 	db	101	;'e'
   641  00FB01  20                 	db	32
   642  00FB02  61                 	db	97	;'a'
   643  00FB03  20                 	db	32
   644  00FB04  70                 	db	112	;'p'
   645  00FB05  65                 	db	101	;'e'
   646  00FB06  72                 	db	114	;'r'
   647  00FB07  66                 	db	102	;'f'
   648  00FB08  65                 	db	101	;'e'
   649  00FB09  63                 	db	99	;'c'
   650  00FB0A  74                 	db	116	;'t'
   651  00FB0B  20                 	db	32
   652  00FB0C  32                 	db	50	;'2'
   653  00FB0D  36                 	db	54	;'6'
   654  00FB0E  20                 	db	32
   655  00FB0F  76                 	db	118	;'v'
   656  00FB10  61                 	db	97	;'a'
   657  00FB11  6C                 	db	108	;'l'
   658  00FB12  75                 	db	117	;'u'
   659  00FB13  65                 	db	101	;'e'
   660  00FB14  20                 	db	32
   661  00FB15  73                 	db	115	;'s'
   662  00FB16  69                 	db	105	;'i'
   663  00FB17  6E                 	db	110	;'n'
   664  00FB18  65                 	db	101	;'e'
   665  00FB19  20                 	db	32
   666  00FB1A  77                 	db	119	;'w'
   667  00FB1B  61                 	db	97	;'a'
   668  00FB1C  76                 	db	118	;'v'
   669  00FB1D  65                 	db	101	;'e'
   670  00FB1E  20                 	db	32
   671  00FB1F  74                 	db	116	;'t'
   672  00FB20  6F                 	db	111	;'o'
   673  00FB21  20                 	db	32
   674  00FB22  74                 	db	116	;'t'
   675  00FB23  68                 	db	104	;'h'
   676  00FB24  65                 	db	101	;'e'
   677  00FB25  20                 	db	32
   678  00FB26  53                 	db	83	;'S'
   679  00FB27  44                 	db	68	;'D'
   680  00FB28  20                 	db	32
   681  00FB29  43                 	db	67	;'C'
   682  00FB2A  61                 	db	97	;'a'
   683  00FB2B  72                 	db	114	;'r'
   684  00FB2C  64                 	db	100	;'d'
   685  00FB2D  0D                 	db	13
   686  00FB2E  0A                 	db	10
   687  00FB2F  00                 	db	0
   688  00FB30                     STR_5:
   689  00FB30  0D                 	db	13
   690  00FB31  0A                 	db	10
   691  00FB32  2D                 	db	45
   692  00FB33  2D                 	db	45
   693  00FB34  2D                 	db	45
   694  00FB35  2D                 	db	45
   695  00FB36  2D                 	db	45
   696  00FB37  2D                 	db	45
   697  00FB38  2D                 	db	45
   698  00FB39  2D                 	db	45
   699  00FB3A  2D                 	db	45
   700  00FB3B  2D                 	db	45
   701  00FB3C  2D                 	db	45
   702  00FB3D  2D                 	db	45
   703  00FB3E  2D                 	db	45
   704  00FB3F  2D                 	db	45
   705  00FB40  2D                 	db	45
   706  00FB41  2D                 	db	45
   707  00FB42  2D                 	db	45
   708  00FB43  2D                 	db	45
   709  00FB44  2D                 	db	45
   710  00FB45  2D                 	db	45
   711  00FB46  2D                 	db	45
   712  00FB47  2D                 	db	45
   713  00FB48  2D                 	db	45
   714  00FB49  2D                 	db	45
   715  00FB4A  2D                 	db	45
   716  00FB4B  2D                 	db	45
   717  00FB4C  2D                 	db	45
   718  00FB4D  2D                 	db	45
   719  00FB4E  2D                 	db	45
   720  00FB4F  2D                 	db	45
   721  00FB50  2D                 	db	45
   722  00FB51  2D                 	db	45
   723  00FB52  2D                 	db	45
   724  00FB53  2D                 	db	45
   725  00FB54  2D                 	db	45
   726  00FB55  2D                 	db	45
   727  00FB56  2D                 	db	45
   728  00FB57  2D                 	db	45
   729  00FB58  2D                 	db	45
   730  00FB59  2D                 	db	45
   731  00FB5A  2D                 	db	45
   732  00FB5B  2D                 	db	45
   733  00FB5C  2D                 	db	45
   734  00FB5D  2D                 	db	45
   735  00FB5E  2D                 	db	45
   736  00FB5F  2D                 	db	45
   737  00FB60  2D                 	db	45
   738  00FB61  2D                 	db	45
   739  00FB62  2D                 	db	45
   740  00FB63  0D                 	db	13
   741  00FB64  0A                 	db	10
   742  00FB65  00                 	db	0
   743  00FB66                     STR_25:
   744  00FB66  2B                 	db	43
   745  00FB67  2F                 	db	47
   746  00FB68  2D                 	db	45
   747  00FB69  3A                 	db	58	;':'
   748  00FB6A  20                 	db	32
   749  00FB6B  49                 	db	73	;'I'
   750  00FB6C  6E                 	db	110	;'n'
   751  00FB6D  63                 	db	99	;'c'
   752  00FB6E  72                 	db	114	;'r'
   753  00FB6F  65                 	db	101	;'e'
   754  00FB70  61                 	db	97	;'a'
   755  00FB71  73                 	db	115	;'s'
   756  00FB72  65                 	db	101	;'e'
   757  00FB73  2F                 	db	47
   758  00FB74  44                 	db	68	;'D'
   759  00FB75  65                 	db	101	;'e'
   760  00FB76  63                 	db	99	;'c'
   761  00FB77  72                 	db	114	;'r'
   762  00FB78  65                 	db	101	;'e'
   763  00FB79  61                 	db	97	;'a'
   764  00FB7A  73                 	db	115	;'s'
   765  00FB7B  65                 	db	101	;'e'
   766  00FB7C  20                 	db	32
   767  00FB7D  74                 	db	116	;'t'
   768  00FB7E  68                 	db	104	;'h'
   769  00FB7F  65                 	db	101	;'e'
   770  00FB80  20                 	db	32
   771  00FB81  73                 	db	115	;'s'
   772  00FB82  61                 	db	97	;'a'
   773  00FB83  6D                 	db	109	;'m'
   774  00FB84  70                 	db	112	;'p'
   775  00FB85  6C                 	db	108	;'l'
   776  00FB86  65                 	db	101	;'e'
   777  00FB87  20                 	db	32
   778  00FB88  72                 	db	114	;'r'
   779  00FB89  61                 	db	97	;'a'
   780  00FB8A  74                 	db	116	;'t'
   781  00FB8B  65                 	db	101	;'e'
   782  00FB8C  20                 	db	32
   783  00FB8D  62                 	db	98	;'b'
   784  00FB8E  79                 	db	121	;'y'
   785  00FB8F  20                 	db	32
   786  00FB90  31                 	db	49	;'1'
   787  00FB91  30                 	db	48	;'0'
   788  00FB92  20                 	db	32
   789  00FB93  75                 	db	117	;'u'
   790  00FB94  73                 	db	115	;'s'
   791  00FB95  0D                 	db	13
   792  00FB96  0A                 	db	10
   793  00FB97  00                 	db	0
   794  00FB98                     STR_81:
   795  00FB98  54                 	db	84	;'T'
   796  00FB99  6F                 	db	111	;'o'
   797  00FB9A  20                 	db	32
   798  00FB9B  63                 	db	99	;'c'
   799  00FB9C  6C                 	db	108	;'l'
   800  00FB9D  6F                 	db	111	;'o'
   801  00FB9E  73                 	db	115	;'s'
   802  00FB9F  65                 	db	101	;'e'
   803  00FBA0  20                 	db	32
   804  00FBA1  74                 	db	116	;'t'
   805  00FBA2  68                 	db	104	;'h'
   806  00FBA3  65                 	db	101	;'e'
   807  00FBA4  20                 	db	32
   808  00FBA5  66                 	db	102	;'f'
   809  00FBA6  69                 	db	105	;'i'
   810  00FBA7  6C                 	db	108	;'l'
   811  00FBA8  65                 	db	101	;'e'
   812  00FBA9  20                 	db	32
   813  00FBAA  66                 	db	102	;'f'
   814  00FBAB  6F                 	db	111	;'o'
   815  00FBAC  6C                 	db	108	;'l'
   816  00FBAD  6C                 	db	108	;'l'
   817  00FBAE  6F                 	db	111	;'o'
   818  00FBAF  77                 	db	119	;'w'
   819  00FBB0  20                 	db	32
   820  00FBB1  74                 	db	116	;'t'
   821  00FBB2  68                 	db	104	;'h'
   822  00FBB3  65                 	db	101	;'e'
   823  00FBB4  73                 	db	115	;'s'
   824  00FBB5  65                 	db	101	;'e'
   825  00FBB6  20                 	db	32
   826  00FBB7  69                 	db	105	;'i'
   827  00FBB8  6E                 	db	110	;'n'
   828  00FBB9  73                 	db	115	;'s'
   829  00FBBA  74                 	db	116	;'t'
   830  00FBBB  72                 	db	114	;'r'
   831  00FBBC  75                 	db	117	;'u'
   832  00FBBD  63                 	db	99	;'c'
   833  00FBBE  74                 	db	116	;'t'
   834  00FBBF  69                 	db	105	;'i'
   835  00FBC0  6F                 	db	111	;'o'
   836  00FBC1  6E                 	db	110	;'n'
   837  00FBC2  73                 	db	115	;'s'
   838  00FBC3  3A                 	db	58	;':'
   839  00FBC4  0D                 	db	13
   840  00FBC5  0A                 	db	10
   841  00FBC6  00                 	db	0
   842  00FBC7                     STR_53:
   843  00FBC7  54                 	db	84	;'T'
   844  00FBC8  68                 	db	104	;'h'
   845  00FBC9  65                 	db	101	;'e'
   846  00FBCA  72                 	db	114	;'r'
   847  00FBCB  65                 	db	101	;'e'
   848  00FBCC  20                 	db	32
   849  00FBCD  77                 	db	119	;'w'
   850  00FBCE  65                 	db	101	;'e'
   851  00FBCF  72                 	db	114	;'r'
   852  00FBD0  65                 	db	101	;'e'
   853  00FBD1  20                 	db	32
   854  00FBD2  25                 	db	37
   855  00FBD3  64                 	db	100	;'d'
   856  00FBD4  20                 	db	32
   857  00FBD5  62                 	db	98	;'b'
   858  00FBD6  6C                 	db	108	;'l'
   859  00FBD7  6F                 	db	111	;'o'
   860  00FBD8  63                 	db	99	;'c'
   861  00FBD9  6B                 	db	107	;'k'
   862  00FBDA  73                 	db	115	;'s'
   863  00FBDB  20                 	db	32
   864  00FBDC  77                 	db	119	;'w'
   865  00FBDD  72                 	db	114	;'r'
   866  00FBDE  69                 	db	105	;'i'
   867  00FBDF  74                 	db	116	;'t'
   868  00FBE0  74                 	db	116	;'t'
   869  00FBE1  65                 	db	101	;'e'
   870  00FBE2  6E                 	db	110	;'n'
   871  00FBE3  20                 	db	32
   872  00FBE4  74                 	db	116	;'t'
   873  00FBE5  6F                 	db	111	;'o'
   874  00FBE6  20                 	db	32
   875  00FBE7  74                 	db	116	;'t'
   876  00FBE8  68                 	db	104	;'h'
   877  00FBE9  65                 	db	101	;'e'
   878  00FBEA  20                 	db	32
   879  00FBEB  53                 	db	83	;'S'
   880  00FBEC  44                 	db	68	;'D'
   881  00FBED  20                 	db	32
   882  00FBEE  63                 	db	99	;'c'
   883  00FBEF  61                 	db	97	;'a'
   884  00FBF0  72                 	db	114	;'r'
   885  00FBF1  64                 	db	100	;'d'
   886  00FBF2  0D                 	db	13
   887  00FBF3  0A                 	db	10
   888  00FBF4  00                 	db	0
   889  00FBF5                     STR_27:
   890  00FBF5  50                 	db	80	;'P'
   891  00FBF6  3A                 	db	58	;':'
   892  00FBF7  20                 	db	32
   893  00FBF8  50                 	db	80	;'P'
   894  00FBF9  6C                 	db	108	;'l'
   895  00FBFA  61                 	db	97	;'a'
   896  00FBFB  79                 	db	121	;'y'
   897  00FBFC  20                 	db	32
   898  00FBFD  66                 	db	102	;'f'
   899  00FBFE  72                 	db	114	;'r'
   900  00FBFF  6F                 	db	111	;'o'
   901  00FC00  6D                 	db	109	;'m'
   902  00FC01  20                 	db	32
   903  00FC02  53                 	db	83	;'S'
   904  00FC03  44                 	db	68	;'D'
   905  00FC04  20                 	db	32
   906  00FC05  63                 	db	99	;'c'
   907  00FC06  61                 	db	97	;'a'
   908  00FC07  72                 	db	114	;'r'
   909  00FC08  64                 	db	100	;'d'
   910  00FC09  20                 	db	32
   911  00FC0A  74                 	db	116	;'t'
   912  00FC0B  6F                 	db	111	;'o'
   913  00FC0C  20                 	db	32
   914  00FC0D  50                 	db	80	;'P'
   915  00FC0E  57                 	db	87	;'W'
   916  00FC0F  4D                 	db	77	;'M'
   917  00FC10  20                 	db	32
   918  00FC11  2D                 	db	45
   919  00FC12  3E                 	db	62	;'>'
   920  00FC13  20                 	db	32
   921  00FC14  4C                 	db	76	;'L'
   922  00FC15  50                 	db	80	;'P'
   923  00FC16  46                 	db	70	;'F'
   924  00FC17  20                 	db	32
   925  00FC18  2D                 	db	45
   926  00FC19  3E                 	db	62	;'>'
   927  00FC1A  20                 	db	32
   928  00FC1B  41                 	db	65	;'A'
   929  00FC1C  75                 	db	117	;'u'
   930  00FC1D  64                 	db	100	;'d'
   931  00FC1E  69                 	db	105	;'i'
   932  00FC1F  6F                 	db	111	;'o'
   933  00FC20  0D                 	db	13
   934  00FC21  0A                 	db	10
   935  00FC22  00                 	db	0
   936  00FC23                     STR_75:
   937  00FC23  53                 	db	83	;'S'
   938  00FC24  65                 	db	101	;'e'
   939  00FC25  6C                 	db	108	;'l'
   940  00FC26  65                 	db	101	;'e'
   941  00FC27  63                 	db	99	;'c'
   942  00FC28  74                 	db	116	;'t'
   943  00FC29  3A                 	db	58	;':'
   944  00FC2A  09                 	db	9
   945  00FC2B  53                 	db	83	;'S'
   946  00FC2C  65                 	db	101	;'e'
   947  00FC2D  73                 	db	115	;'s'
   948  00FC2E  73                 	db	115	;'s'
   949  00FC2F  69                 	db	105	;'i'
   950  00FC30  6F                 	db	111	;'o'
   951  00FC31  6E                 	db	110	;'n'
   952  00FC32  20                 	db	32
   953  00FC33  6C                 	db	108	;'l'
   954  00FC34  6F                 	db	111	;'o'
   955  00FC35  67                 	db	103	;'g'
   956  00FC36  67                 	db	103	;'g'
   957  00FC37  69                 	db	105	;'i'
   958  00FC38  6E                 	db	110	;'n'
   959  00FC39  67                 	db	103	;'g'
   960  00FC3A  3A                 	db	58	;':'
   961  00FC3B  20                 	db	32
   962  00FC3C  41                 	db	65	;'A'
   963  00FC3D  6C                 	db	108	;'l'
   964  00FC3E  6C                 	db	108	;'l'
   965  00FC3F  20                 	db	32
   966  00FC40  73                 	db	115	;'s'
   967  00FC41  65                 	db	101	;'e'
   968  00FC42  73                 	db	115	;'s'
   969  00FC43  73                 	db	115	;'s'
   970  00FC44  69                 	db	105	;'i'
   971  00FC45  6F                 	db	111	;'o'
   972  00FC46  6E                 	db	110	;'n'
   973  00FC47  20                 	db	32
   974  00FC48  6F                 	db	111	;'o'
   975  00FC49  75                 	db	117	;'u'
   976  00FC4A  74                 	db	116	;'t'
   977  00FC4B  70                 	db	112	;'p'
   978  00FC4C  75                 	db	117	;'u'
   979  00FC4D  74                 	db	116	;'t'
   980  00FC4E  0D                 	db	13
   981  00FC4F  0A                 	db	10
   982  00FC50  00                 	db	0
   983  00FC51                     STR_20:
   984  00FC51  72                 	db	114	;'r'
   985  00FC52  3A                 	db	58	;':'
   986  00FC53  20                 	db	32
   987  00FC54  72                 	db	114	;'r'
   988  00FC55  65                 	db	101	;'e'
   989  00FC56  61                 	db	97	;'a'
   990  00FC57  64                 	db	100	;'d'
   991  00FC58  20                 	db	32
   992  00FC59  61                 	db	97	;'a'
   993  00FC5A  20                 	db	32
   994  00FC5B  62                 	db	98	;'b'
   995  00FC5C  6C                 	db	108	;'l'
   996  00FC5D  6F                 	db	111	;'o'
   997  00FC5E  63                 	db	99	;'c'
   998  00FC5F  6B                 	db	107	;'k'
   999  00FC60  20                 	db	32
  1000  00FC61  6F                 	db	111	;'o'
  1001  00FC62  66                 	db	102	;'f'
  1002  00FC63  20                 	db	32
  1003  00FC64  25                 	db	37
  1004  00FC65  64                 	db	100	;'d'
  1005  00FC66  20                 	db	32
  1006  00FC67  62                 	db	98	;'b'
  1007  00FC68  79                 	db	121	;'y'
  1008  00FC69  74                 	db	116	;'t'
  1009  00FC6A  65                 	db	101	;'e'
  1010  00FC6B  73                 	db	115	;'s'
  1011  00FC6C  20                 	db	32
  1012  00FC6D  66                 	db	102	;'f'
  1013  00FC6E  72                 	db	114	;'r'
  1014  00FC6F  6F                 	db	111	;'o'
  1015  00FC70  6D                 	db	109	;'m'
  1016  00FC71  20                 	db	32
  1017  00FC72  53                 	db	83	;'S'
  1018  00FC73  44                 	db	68	;'D'
  1019  00FC74  20                 	db	32
  1020  00FC75  63                 	db	99	;'c'
  1021  00FC76  61                 	db	97	;'a'
  1022  00FC77  72                 	db	114	;'r'
  1023  00FC78  64                 	db	100	;'d'
  1024  00FC79  0D                 	db	13
  1025  00FC7A  0A                 	db	10
  1026  00FC7B  00                 	db	0
  1027  00FC7C                     STR_32:
  1028  00FC7C  4D                 	db	77	;'M'
  1029  00FC7D  61                 	db	97	;'a'
  1030  00FC7E  6B                 	db	107	;'k'
  1031  00FC7F  65                 	db	101	;'e'
  1032  00FC80  20                 	db	32
  1033  00FC81  73                 	db	115	;'s'
  1034  00FC82  75                 	db	117	;'u'
  1035  00FC83  72                 	db	114	;'r'
  1036  00FC84  65                 	db	101	;'e'
  1037  00FC85  20                 	db	32
  1038  00FC86  53                 	db	83	;'S'
  1039  00FC87  44                 	db	68	;'D'
  1040  00FC88  20                 	db	32
  1041  00FC89  63                 	db	99	;'c'
  1042  00FC8A  61                 	db	97	;'a'
  1043  00FC8B  72                 	db	114	;'r'
  1044  00FC8C  64                 	db	100	;'d'
  1045  00FC8D  20                 	db	32
  1046  00FC8E  69                 	db	105	;'i'
  1047  00FC8F  73                 	db	115	;'s'
  1048  00FC90  20                 	db	32
  1049  00FC91  70                 	db	112	;'p'
  1050  00FC92  72                 	db	114	;'r'
  1051  00FC93  6F                 	db	111	;'o'
  1052  00FC94  70                 	db	112	;'p'
  1053  00FC95  65                 	db	101	;'e'
  1054  00FC96  72                 	db	114	;'r'
  1055  00FC97  6C                 	db	108	;'l'
  1056  00FC98  79                 	db	121	;'y'
  1057  00FC99  20                 	db	32
  1058  00FC9A  69                 	db	105	;'i'
  1059  00FC9B  6E                 	db	110	;'n'
  1060  00FC9C  73                 	db	115	;'s'
  1061  00FC9D  65                 	db	101	;'e'
  1062  00FC9E  72                 	db	114	;'r'
  1063  00FC9F  74                 	db	116	;'t'
  1064  00FCA0  65                 	db	101	;'e'
  1065  00FCA1  64                 	db	100	;'d'
  1066  00FCA2  2E                 	db	46
  1067  00FCA3  0D                 	db	13
  1068  00FCA4  0A                 	db	10
  1069  00FCA5  00                 	db	0
  1070  00FCA6                     STR_26:
  1071  00FCA6  57                 	db	87	;'W'
  1072  00FCA7  3A                 	db	58	;':'
  1073  00FCA8  20                 	db	32
  1074  00FCA9  57                 	db	87	;'W'
  1075  00FCAA  72                 	db	114	;'r'
  1076  00FCAB  69                 	db	105	;'i'
  1077  00FCAC  74                 	db	116	;'t'
  1078  00FCAD  65                 	db	101	;'e'
  1079  00FCAE  20                 	db	32
  1080  00FCAF  6D                 	db	109	;'m'
  1081  00FCB0  69                 	db	105	;'i'
  1082  00FCB1  63                 	db	99	;'c'
  1083  00FCB2  72                 	db	114	;'r'
  1084  00FCB3  6F                 	db	111	;'o'
  1085  00FCB4  70                 	db	112	;'p'
  1086  00FCB5  68                 	db	104	;'h'
  1087  00FCB6  6F                 	db	111	;'o'
  1088  00FCB7  6E                 	db	110	;'n'
  1089  00FCB8  65                 	db	101	;'e'
  1090  00FCB9  20                 	db	32
  1091  00FCBA  3D                 	db	61	;'='
  1092  00FCBB  3E                 	db	62	;'>'
  1093  00FCBC  20                 	db	32
  1094  00FCBD  53                 	db	83	;'S'
  1095  00FCBE  44                 	db	68	;'D'
  1096  00FCBF  20                 	db	32
  1097  00FCC0  63                 	db	99	;'c'
  1098  00FCC1  61                 	db	97	;'a'
  1099  00FCC2  72                 	db	114	;'r'
  1100  00FCC3  64                 	db	100	;'d'
  1101  00FCC4  20                 	db	32
  1102  00FCC5  61                 	db	97	;'a'
  1103  00FCC6  74                 	db	116	;'t'
  1104  00FCC7  20                 	db	32
  1105  00FCC8  25                 	db	37
  1106  00FCC9  64                 	db	100	;'d'
  1107  00FCCA  20                 	db	32
  1108  00FCCB  75                 	db	117	;'u'
  1109  00FCCC  73                 	db	115	;'s'
  1110  00FCCD  0D                 	db	13
  1111  00FCCE  0A                 	db	10
  1112  00FCCF  00                 	db	0
  1113  00FCD0                     STR_19:
  1114  00FCD0  61                 	db	97	;'a'
  1115  00FCD1  2F                 	db	47
  1116  00FCD2  41                 	db	65	;'A'
  1117  00FCD3  20                 	db	32
  1118  00FCD4  64                 	db	100	;'d'
  1119  00FCD5  65                 	db	101	;'e'
  1120  00FCD6  63                 	db	99	;'c'
  1121  00FCD7  72                 	db	114	;'r'
  1122  00FCD8  65                 	db	101	;'e'
  1123  00FCD9  61                 	db	97	;'a'
  1124  00FCDA  73                 	db	115	;'s'
  1125  00FCDB  65                 	db	101	;'e'
  1126  00FCDC  2F                 	db	47
  1127  00FCDD  69                 	db	105	;'i'
  1128  00FCDE  6E                 	db	110	;'n'
  1129  00FCDF  63                 	db	99	;'c'
  1130  00FCE0  72                 	db	114	;'r'
  1131  00FCE1  65                 	db	101	;'e'
  1132  00FCE2  61                 	db	97	;'a'
  1133  00FCE3  73                 	db	115	;'s'
  1134  00FCE4  65                 	db	101	;'e'
  1135  00FCE5  20                 	db	32
  1136  00FCE6  72                 	db	114	;'r'
  1137  00FCE7  65                 	db	101	;'e'
  1138  00FCE8  61                 	db	97	;'a'
  1139  00FCE9  64                 	db	100	;'d'
  1140  00FCEA  20                 	db	32
  1141  00FCEB  61                 	db	97	;'a'
  1142  00FCEC  64                 	db	100	;'d'
  1143  00FCED  64                 	db	100	;'d'
  1144  00FCEE  72                 	db	114	;'r'
  1145  00FCEF  65                 	db	101	;'e'
  1146  00FCF0  73                 	db	115	;'s'
  1147  00FCF1  73                 	db	115	;'s'
  1148  00FCF2  0D                 	db	13
  1149  00FCF3  0A                 	db	10
  1150  00FCF4  00                 	db	0
  1151  00FCF5                     STR_100:
  1152  00FCF5  53                 	db	83	;'S'
  1153  00FCF6  75                 	db	117	;'u'
  1154  00FCF7  63                 	db	99	;'c'
  1155  00FCF8  63                 	db	99	;'c'
  1156  00FCF9  65                 	db	101	;'e'
  1157  00FCFA  73                 	db	115	;'s'
  1158  00FCFB  73                 	db	115	;'s'
  1159  00FCFC  66                 	db	102	;'f'
  1160  00FCFD  75                 	db	117	;'u'
  1161  00FCFE  6C                 	db	108	;'l'
  1162  00FCFF  6C                 	db	108	;'l'
  1163  00FD00  79                 	db	121	;'y'
  1164  00FD01  20                 	db	32
  1165  00FD02  49                 	db	73	;'I'
  1166  00FD03  6E                 	db	110	;'n'
  1167  00FD04  69                 	db	105	;'i'
  1168  00FD05  74                 	db	116	;'t'
  1169  00FD06  69                 	db	105	;'i'
  1170  00FD07  61                 	db	97	;'a'
  1171  00FD08  6C                 	db	108	;'l'
  1172  00FD09  69                 	db	105	;'i'
  1173  00FD0A  7A                 	db	122	;'z'
  1174  00FD0B  65                 	db	101	;'e'
  1175  00FD0C  64                 	db	100	;'d'
  1176  00FD0D  20                 	db	32
  1177  00FD0E  53                 	db	83	;'S'
  1178  00FD0F  44                 	db	68	;'D'
  1179  00FD10  20                 	db	32
  1180  00FD11  43                 	db	67	;'C'
  1181  00FD12  61                 	db	97	;'a'
  1182  00FD13  72                 	db	114	;'r'
  1183  00FD14  64                 	db	100	;'d'
  1184  00FD15  0D                 	db	13
  1185  00FD16  0A                 	db	10
  1186  00FD17  00                 	db	0
  1187  00FD18                     STR_80:
  1188  00FD18  53                 	db	83	;'S'
  1189  00FD19  70                 	db	112	;'p'
  1190  00FD1A  6F                 	db	111	;'o'
  1191  00FD1B  6F                 	db	111	;'o'
  1192  00FD1C  6C                 	db	108	;'l'
  1193  00FD1D  65                 	db	101	;'e'
  1194  00FD1E  64                 	db	100	;'d'
  1195  00FD1F  20                 	db	32
  1196  00FD20  25                 	db	37
  1197  00FD21  64                 	db	100	;'d'
  1198  00FD22  20                 	db	32
  1199  00FD23  6F                 	db	111	;'o'
  1200  00FD24  75                 	db	117	;'u'
  1201  00FD25  74                 	db	116	;'t'
  1202  00FD26  20                 	db	32
  1203  00FD27  6F                 	db	111	;'o'
  1204  00FD28  66                 	db	102	;'f'
  1205  00FD29  20                 	db	32
  1206  00FD2A  74                 	db	116	;'t'
  1207  00FD2B  68                 	db	104	;'h'
  1208  00FD2C  65                 	db	101	;'e'
  1209  00FD2D  20                 	db	32
  1210  00FD2E  25                 	db	37
  1211  00FD2F  64                 	db	100	;'d'
  1212  00FD30  20                 	db	32
  1213  00FD31  62                 	db	98	;'b'
  1214  00FD32  6C                 	db	108	;'l'
  1215  00FD33  6F                 	db	111	;'o'
  1216  00FD34  63                 	db	99	;'c'
  1217  00FD35  6B                 	db	107	;'k'
  1218  00FD36  73                 	db	115	;'s'
  1219  00FD37  2E                 	db	46
  1220  00FD38  0D                 	db	13
  1221  00FD39  0A                 	db	10
  1222  00FD3A  00                 	db	0
  1223  00FD3B                     STR_23:
  1224  00FD3B  73                 	db	115	;'s'
  1225  00FD3C  3A                 	db	58	;':'
  1226  00FD3D  20                 	db	32
  1227  00FD3E  73                 	db	115	;'s'
  1228  00FD3F  70                 	db	112	;'p'
  1229  00FD40  6F                 	db	111	;'o'
  1230  00FD41  6F                 	db	111	;'o'
  1231  00FD42  6C                 	db	108	;'l'
  1232  00FD43  20                 	db	32
  1233  00FD44  6D                 	db	109	;'m'
  1234  00FD45  65                 	db	101	;'e'
  1235  00FD46  6D                 	db	109	;'m'
  1236  00FD47  6F                 	db	111	;'o'
  1237  00FD48  72                 	db	114	;'r'
  1238  00FD49  79                 	db	121	;'y'
  1239  00FD4A  20                 	db	32
  1240  00FD4B  74                 	db	116	;'t'
  1241  00FD4C  6F                 	db	111	;'o'
  1242  00FD4D  20                 	db	32
  1243  00FD4E  61                 	db	97	;'a'
  1244  00FD4F  20                 	db	32
  1245  00FD50  63                 	db	99	;'c'
  1246  00FD51  73                 	db	115	;'s'
  1247  00FD52  76                 	db	118	;'v'
  1248  00FD53  20                 	db	32
  1249  00FD54  66                 	db	102	;'f'
  1250  00FD55  69                 	db	105	;'i'
  1251  00FD56  6C                 	db	108	;'l'
  1252  00FD57  65                 	db	101	;'e'
  1253  00FD58  0D                 	db	13
  1254  00FD59  0A                 	db	10
  1255  00FD5A  00                 	db	0
  1256  00FD5B                     STR_3:
  1257  00FD5B  41                 	db	65	;'A'
  1258  00FD5C  75                 	db	117	;'u'
  1259  00FD5D  64                 	db	100	;'d'
  1260  00FD5E  69                 	db	105	;'i'
  1261  00FD5F  6F                 	db	111	;'o'
  1262  00FD60  20                 	db	32
  1263  00FD61  52                 	db	82	;'R'
  1264  00FD62  65                 	db	101	;'e'
  1265  00FD63  63                 	db	99	;'c'
  1266  00FD64  6F                 	db	111	;'o'
  1267  00FD65  72                 	db	114	;'r'
  1268  00FD66  64                 	db	100	;'d'
  1269  00FD67  69                 	db	105	;'i'
  1270  00FD68  6E                 	db	110	;'n'
  1271  00FD69  67                 	db	103	;'g'
  1272  00FD6A  20                 	db	32
  1273  00FD6B  61                 	db	97	;'a'
  1274  00FD6C  6E                 	db	110	;'n'
  1275  00FD6D  64                 	db	100	;'d'
  1276  00FD6E  20                 	db	32
  1277  00FD6F  50                 	db	80	;'P'
  1278  00FD70  6C                 	db	108	;'l'
  1279  00FD71  61                 	db	97	;'a'
  1280  00FD72  79                 	db	121	;'y'
  1281  00FD73  62                 	db	98	;'b'
  1282  00FD74  61                 	db	97	;'a'
  1283  00FD75  63                 	db	99	;'c'
  1284  00FD76  6B                 	db	107	;'k'
  1285  00FD77  0D                 	db	13
  1286  00FD78  0A                 	db	10
  1287  00FD79  00                 	db	0
  1288  00FD7A                     STR_101:
  1289  00FD7A  45                 	db	69	;'E'
  1290  00FD7B  72                 	db	114	;'r'
  1291  00FD7C  72                 	db	114	;'r'
  1292  00FD7D  6F                 	db	111	;'o'
  1293  00FD7E  72                 	db	114	;'r'
  1294  00FD7F  20                 	db	32
  1295  00FD80  49                 	db	73	;'I'
  1296  00FD81  6E                 	db	110	;'n'
  1297  00FD82  69                 	db	105	;'i'
  1298  00FD83  74                 	db	116	;'t'
  1299  00FD84  69                 	db	105	;'i'
  1300  00FD85  61                 	db	97	;'a'
  1301  00FD86  6C                 	db	108	;'l'
  1302  00FD87  69                 	db	105	;'i'
  1303  00FD88  7A                 	db	122	;'z'
  1304  00FD89  69                 	db	105	;'i'
  1305  00FD8A  6E                 	db	110	;'n'
  1306  00FD8B  67                 	db	103	;'g'
  1307  00FD8C  20                 	db	32
  1308  00FD8D  53                 	db	83	;'S'
  1309  00FD8E  44                 	db	68	;'D'
  1310  00FD8F  20                 	db	32
  1311  00FD90  43                 	db	67	;'C'
  1312  00FD91  61                 	db	97	;'a'
  1313  00FD92  72                 	db	114	;'r'
  1314  00FD93  64                 	db	100	;'d'
  1315  00FD94  0D                 	db	13
  1316  00FD95  0A                 	db	10
  1317  00FD96  00                 	db	0
  1318  00FD97                     STR_73:
  1319  00FD97  53                 	db	83	;'S'
  1320  00FD98  65                 	db	101	;'e'
  1321  00FD99  6C                 	db	108	;'l'
  1322  00FD9A  65                 	db	101	;'e'
  1323  00FD9B  63                 	db	99	;'c'
  1324  00FD9C  74                 	db	116	;'t'
  1325  00FD9D  3A                 	db	58	;':'
  1326  00FD9E  09                 	db	9
  1327  00FD9F  43                 	db	67	;'C'
  1328  00FDA0  68                 	db	104	;'h'
  1329  00FDA1  61                 	db	97	;'a'
  1330  00FDA2  6E                 	db	110	;'n'
  1331  00FDA3  67                 	db	103	;'g'
  1332  00FDA4  65                 	db	101	;'e'
  1333  00FDA5  20                 	db	32
  1334  00FDA6  73                 	db	115	;'s'
  1335  00FDA7  65                 	db	101	;'e'
  1336  00FDA8  74                 	db	116	;'t'
  1337  00FDA9  74                 	db	116	;'t'
  1338  00FDAA  69                 	db	105	;'i'
  1339  00FDAB  6E                 	db	110	;'n'
  1340  00FDAC  67                 	db	103	;'g'
  1341  00FDAD  73                 	db	115	;'s'
  1342  00FDAE  2E                 	db	46
  1343  00FDAF  2E                 	db	46
  1344  00FDB0  2E                 	db	46
  1345  00FDB1  0D                 	db	13
  1346  00FDB2  0A                 	db	10
  1347  00FDB3  00                 	db	0
  1348  00FDB4                     STR_33:
  1349  00FDB4  50                 	db	80	;'P'
  1350  00FDB5  72                 	db	114	;'r'
  1351  00FDB6  65                 	db	101	;'e'
  1352  00FDB7  73                 	db	115	;'s'
  1353  00FDB8  73                 	db	115	;'s'
  1354  00FDB9  20                 	db	32
  1355  00FDBA  61                 	db	97	;'a'
  1356  00FDBB  6E                 	db	110	;'n'
  1357  00FDBC  79                 	db	121	;'y'
  1358  00FDBD  20                 	db	32
  1359  00FDBE  6B                 	db	107	;'k'
  1360  00FDBF  65                 	db	101	;'e'
  1361  00FDC0  79                 	db	121	;'y'
  1362  00FDC1  20                 	db	32
  1363  00FDC2  74                 	db	116	;'t'
  1364  00FDC3  6F                 	db	111	;'o'
  1365  00FDC4  20                 	db	32
  1366  00FDC5  63                 	db	99	;'c'
  1367  00FDC6  6F                 	db	111	;'o'
  1368  00FDC7  6E                 	db	110	;'n'
  1369  00FDC8  74                 	db	116	;'t'
  1370  00FDC9  69                 	db	105	;'i'
  1371  00FDCA  6E                 	db	110	;'n'
  1372  00FDCB  75                 	db	117	;'u'
  1373  00FDCC  65                 	db	101	;'e'
  1374  00FDCD  2E                 	db	46
  1375  00FDCE  0D                 	db	13
  1376  00FDCF  0A                 	db	10
  1377  00FDD0  00                 	db	0
  1378  00FDD1  42                 	db	66	;'B'
  1379  00FDD2  6C                 	db	108	;'l'
  1380  00FDD3  6F                 	db	111	;'o'
  1381  00FDD4  63                 	db	99	;'c'
  1382  00FDD5  6B                 	db	107	;'k'
  1383  00FDD6  20                 	db	32
  1384  00FDD7  4C                 	db	76	;'L'
  1385  00FDD8  65                 	db	101	;'e'
  1386  00FDD9  6E                 	db	110	;'n'
  1387  00FDDA  67                 	db	103	;'g'
  1388  00FDDB  74                 	db	116	;'t'
  1389  00FDDC  68                 	db	104	;'h'
  1390  00FDDD  20                 	db	32
  1391  00FDDE  52                 	db	82	;'R'
  1392  00FDDF  65                 	db	101	;'e'
  1393  00FDE0  73                 	db	115	;'s'
  1394  00FDE1  70                 	db	112	;'p'
  1395  00FDE2  6F                 	db	111	;'o'
  1396  00FDE3  6E                 	db	110	;'n'
  1397  00FDE4  73                 	db	115	;'s'
  1398  00FDE5  65                 	db	101	;'e'
  1399  00FDE6  3A                 	db	58	;':'
  1400  00FDE7  20                 	db	32
  1401  00FDE8  25                 	db	37
  1402  00FDE9  78                 	db	120	;'x'
  1403  00FDEA  0D                 	db	13
  1404  00FDEB  0A                 	db	10
  1405  00FDEC  00                 	db	0
  1406  00FDED                     STR_102:
  1407  00FDED  43                 	db	67	;'C'
  1408  00FDEE  4D                 	db	77	;'M'
  1409  00FDEF  44                 	db	68	;'D'
  1410  00FDF0  30                 	db	48	;'0'
  1411  00FDF1  2C                 	db	44
  1412  00FDF2  20                 	db	32
  1413  00FDF3  52                 	db	82	;'R'
  1414  00FDF4  65                 	db	101	;'e'
  1415  00FDF5  73                 	db	115	;'s'
  1416  00FDF6  65                 	db	101	;'e'
  1417  00FDF7  74                 	db	116	;'t'
  1418  00FDF8  20                 	db	32
  1419  00FDF9  52                 	db	82	;'R'
  1420  00FDFA  65                 	db	101	;'e'
  1421  00FDFB  73                 	db	115	;'s'
  1422  00FDFC  70                 	db	112	;'p'
  1423  00FDFD  6F                 	db	111	;'o'
  1424  00FDFE  6E                 	db	110	;'n'
  1425  00FDFF  73                 	db	115	;'s'
  1426  00FE00  65                 	db	101	;'e'
  1427  00FE01  3A                 	db	58	;':'
  1428  00FE02  20                 	db	32
  1429  00FE03  25                 	db	37
  1430  00FE04  78                 	db	120	;'x'
  1431  00FE05  0D                 	db	13
  1432  00FE06  0A                 	db	10
  1433  00FE07  00                 	db	0
  1434  00FE08  43                 	db	67	;'C'
  1435  00FE09  4D                 	db	77	;'M'
  1436  00FE0A  44                 	db	68	;'D'
  1437  00FE0B  31                 	db	49	;'1'
  1438  00FE0C  2C                 	db	44
  1439  00FE0D  20                 	db	32
  1440  00FE0E  49                 	db	73	;'I'
  1441  00FE0F  6E                 	db	110	;'n'
  1442  00FE10  69                 	db	105	;'i'
  1443  00FE11  74                 	db	116	;'t'
  1444  00FE12  20                 	db	32
  1445  00FE13  52                 	db	82	;'R'
  1446  00FE14  65                 	db	101	;'e'
  1447  00FE15  73                 	db	115	;'s'
  1448  00FE16  70                 	db	112	;'p'
  1449  00FE17  6F                 	db	111	;'o'
  1450  00FE18  6E                 	db	110	;'n'
  1451  00FE19  73                 	db	115	;'s'
  1452  00FE1A  65                 	db	101	;'e'
  1453  00FE1B  3A                 	db	58	;':'
  1454  00FE1C  20                 	db	32
  1455  00FE1D  25                 	db	37
  1456  00FE1E  78                 	db	120	;'x'
  1457  00FE1F  0D                 	db	13
  1458  00FE20  0A                 	db	10
  1459  00FE21  00                 	db	0
  1460  00FE22                     STR_78:
  1461  00FE22  50                 	db	80	;'P'
  1462  00FE23  72                 	db	114	;'r'
  1463  00FE24  65                 	db	101	;'e'
  1464  00FE25  73                 	db	115	;'s'
  1465  00FE26  73                 	db	115	;'s'
  1466  00FE27  20                 	db	32
  1467  00FE28  61                 	db	97	;'a'
  1468  00FE29  6E                 	db	110	;'n'
  1469  00FE2A  79                 	db	121	;'y'
  1470  00FE2B  20                 	db	32
  1471  00FE2C  6B                 	db	107	;'k'
  1472  00FE2D  65                 	db	101	;'e'
  1473  00FE2E  79                 	db	121	;'y'
  1474  00FE2F  20                 	db	32
  1475  00FE30  74                 	db	116	;'t'
  1476  00FE31  6F                 	db	111	;'o'
  1477  00FE32  20                 	db	32
  1478  00FE33  73                 	db	115	;'s'
  1479  00FE34  74                 	db	116	;'t'
  1480  00FE35  61                 	db	97	;'a'
  1481  00FE36  72                 	db	114	;'r'
  1482  00FE37  74                 	db	116	;'t'
  1483  00FE38  0D                 	db	13
  1484  00FE39  0A                 	db	10
  1485  00FE3A  00                 	db	0
  1486  00FE3B                     STR_17:
  1487  00FE3B  69                 	db	105	;'i'
  1488  00FE3C  3A                 	db	58	;':'
  1489  00FE3D  20                 	db	32
  1490  00FE3E  49                 	db	73	;'I'
  1491  00FE3F  6E                 	db	110	;'n'
  1492  00FE40  69                 	db	105	;'i'
  1493  00FE41  74                 	db	116	;'t'
  1494  00FE42  69                 	db	105	;'i'
  1495  00FE43  61                 	db	97	;'a'
  1496  00FE44  6C                 	db	108	;'l'
  1497  00FE45  69                 	db	105	;'i'
  1498  00FE46  7A                 	db	122	;'z'
  1499  00FE47  65                 	db	101	;'e'
  1500  00FE48  20                 	db	32
  1501  00FE49  53                 	db	83	;'S'
  1502  00FE4A  44                 	db	68	;'D'
  1503  00FE4B  20                 	db	32
  1504  00FE4C  63                 	db	99	;'c'
  1505  00FE4D  61                 	db	97	;'a'
  1506  00FE4E  72                 	db	114	;'r'
  1507  00FE4F  64                 	db	100	;'d'
  1508  00FE50  0D                 	db	13
  1509  00FE51  0A                 	db	10
  1510  00FE52  00                 	db	0
  1511  00FE53                     STR_86:
  1512  00FE53  53                 	db	83	;'S'
  1513  00FE54  65                 	db	101	;'e'
  1514  00FE55  73                 	db	115	;'s'
  1515  00FE56  73                 	db	115	;'s'
  1516  00FE57  69                 	db	105	;'i'
  1517  00FE58  6F                 	db	111	;'o'
  1518  00FE59  6E                 	db	110	;'n'
  1519  00FE5A  20                 	db	32
  1520  00FE5B  6C                 	db	108	;'l'
  1521  00FE5C  6F                 	db	111	;'o'
  1522  00FE5D  67                 	db	103	;'g'
  1523  00FE5E  67                 	db	103	;'g'
  1524  00FE5F  69                 	db	105	;'i'
  1525  00FE60  6E                 	db	110	;'n'
  1526  00FE61  67                 	db	103	;'g'
  1527  00FE62  3A                 	db	58	;':'
  1528  00FE63  20                 	db	32
  1529  00FE64  4E                 	db	78	;'N'
  1530  00FE65  6F                 	db	111	;'o'
  1531  00FE66  6E                 	db	110	;'n'
  1532  00FE67  65                 	db	101	;'e'
  1533  00FE68  0D                 	db	13
  1534  00FE69  0A                 	db	10
  1535  00FE6A  00                 	db	0
  1536  00FE6B                     STR_15:
  1537  00FE6B  7A                 	db	122	;'z'
  1538  00FE6C  3A                 	db	58	;':'
  1539  00FE6D  20                 	db	32
  1540  00FE6E  43                 	db	67	;'C'
  1541  00FE6F  6C                 	db	108	;'l'
  1542  00FE70  65                 	db	101	;'e'
  1543  00FE71  61                 	db	97	;'a'
  1544  00FE72  72                 	db	114	;'r'
  1545  00FE73  20                 	db	32
  1546  00FE74  74                 	db	116	;'t'
  1547  00FE75  68                 	db	104	;'h'
  1548  00FE76  65                 	db	101	;'e'
  1549  00FE77  20                 	db	32
  1550  00FE78  74                 	db	116	;'t'
  1551  00FE79  65                 	db	101	;'e'
  1552  00FE7A  72                 	db	114	;'r'
  1553  00FE7B  6D                 	db	109	;'m'
  1554  00FE7C  69                 	db	105	;'i'
  1555  00FE7D  6E                 	db	110	;'n'
  1556  00FE7E  61                 	db	97	;'a'
  1557  00FE7F  6C                 	db	108	;'l'
  1558  00FE80  0D                 	db	13
  1559  00FE81  0A                 	db	10
  1560  00FE82  00                 	db	0
  1561  00FE83                     STR_99:
  1562  00FE83  41                 	db	65	;'A'
  1563  00FE84  43                 	db	67	;'C'
  1564  00FE85  4D                 	db	77	;'M'
  1565  00FE86  44                 	db	68	;'D'
  1566  00FE87  20                 	db	32
  1567  00FE88  34                 	db	52	;'4'
  1568  00FE89  31                 	db	49	;'1'
  1569  00FE8A  20                 	db	32
  1570  00FE8B  52                 	db	82	;'R'
  1571  00FE8C  65                 	db	101	;'e'
  1572  00FE8D  73                 	db	115	;'s'
  1573  00FE8E  70                 	db	112	;'p'
  1574  00FE8F  6F                 	db	111	;'o'
  1575  00FE90  6E                 	db	110	;'n'
  1576  00FE91  73                 	db	115	;'s'
  1577  00FE92  65                 	db	101	;'e'
  1578  00FE93  3A                 	db	58	;':'
  1579  00FE94  20                 	db	32
  1580  00FE95  25                 	db	37
  1581  00FE96  78                 	db	120	;'x'
  1582  00FE97  0D                 	db	13
  1583  00FE98  0A                 	db	10
  1584  00FE99  00                 	db	0
  1585  00FE9A                     STR_98:
  1586  00FE9A  43                 	db	67	;'C'
  1587  00FE9B  4D                 	db	77	;'M'
  1588  00FE9C  44                 	db	68	;'D'
  1589  00FE9D  20                 	db	32
  1590  00FE9E  35                 	db	53	;'5'
  1591  00FE9F  35                 	db	53	;'5'
  1592  00FEA0  20                 	db	32
  1593  00FEA1  52                 	db	82	;'R'
  1594  00FEA2  65                 	db	101	;'e'
  1595  00FEA3  73                 	db	115	;'s'
  1596  00FEA4  70                 	db	112	;'p'
  1597  00FEA5  6F                 	db	111	;'o'
  1598  00FEA6  6E                 	db	110	;'n'
  1599  00FEA7  73                 	db	115	;'s'
  1600  00FEA8  65                 	db	101	;'e'
  1601  00FEA9  3A                 	db	58	;':'
  1602  00FEAA  20                 	db	32
  1603  00FEAB  25                 	db	37
  1604  00FEAC  78                 	db	120	;'x'
  1605  00FEAD  0D                 	db	13
  1606  00FEAE  0A                 	db	10
  1607  00FEAF  00                 	db	0
  1608  00FEB0                     STR_97:
  1609  00FEB0  43                 	db	67	;'C'
  1610  00FEB1  4D                 	db	77	;'M'
  1611  00FEB2  44                 	db	68	;'D'
  1612  00FEB3  20                 	db	32
  1613  00FEB4  38                 	db	56	;'8'
  1614  00FEB5  20                 	db	32
  1615  00FEB6  52                 	db	82	;'R'
  1616  00FEB7  65                 	db	101	;'e'
  1617  00FEB8  73                 	db	115	;'s'
  1618  00FEB9  70                 	db	112	;'p'
  1619  00FEBA  6F                 	db	111	;'o'
  1620  00FEBB  6E                 	db	110	;'n'
  1621  00FEBC  73                 	db	115	;'s'
  1622  00FEBD  65                 	db	101	;'e'
  1623  00FEBE  3A                 	db	58	;':'
  1624  00FEBF  20                 	db	32
  1625  00FEC0  25                 	db	37
  1626  00FEC1  78                 	db	120	;'x'
  1627  00FEC2  0D                 	db	13
  1628  00FEC3  0A                 	db	10
  1629  00FEC4  00                 	db	0
  1630  00FEC5                     STR_14:
  1631  00FEC5  5A                 	db	90	;'Z'
  1632  00FEC6  3A                 	db	58	;':'
  1633  00FEC7  20                 	db	32
  1634  00FEC8  52                 	db	82	;'R'
  1635  00FEC9  65                 	db	101	;'e'
  1636  00FECA  73                 	db	115	;'s'
  1637  00FECB  65                 	db	101	;'e'
  1638  00FECC  74                 	db	116	;'t'
  1639  00FECD  20                 	db	32
  1640  00FECE  70                 	db	112	;'p'
  1641  00FECF  72                 	db	114	;'r'
  1642  00FED0  6F                 	db	111	;'o'
  1643  00FED1  63                 	db	99	;'c'
  1644  00FED2  65                 	db	101	;'e'
  1645  00FED3  73                 	db	115	;'s'
  1646  00FED4  73                 	db	115	;'s'
  1647  00FED5  6F                 	db	111	;'o'
  1648  00FED6  72                 	db	114	;'r'
  1649  00FED7  0D                 	db	13
  1650  00FED8  0A                 	db	10
  1651  00FED9  00                 	db	0
  1652  00FEDA                     STR_55:
  1653  00FEDA  52                 	db	82	;'R'
  1654  00FEDB  65                 	db	101	;'e'
  1655  00FEDC  63                 	db	99	;'c'
  1656  00FEDD  6F                 	db	111	;'o'
  1657  00FEDE  72                 	db	114	;'r'
  1658  00FEDF  64                 	db	100	;'d'
  1659  00FEE0  69                 	db	105	;'i'
  1660  00FEE1  6E                 	db	110	;'n'
  1661  00FEE2  67                 	db	103	;'g'
  1662  00FEE3  20                 	db	32
  1663  00FEE4  73                 	db	115	;'s'
  1664  00FEE5  74                 	db	116	;'t'
  1665  00FEE6  61                 	db	97	;'a'
  1666  00FEE7  72                 	db	114	;'r'
  1667  00FEE8  74                 	db	116	;'t'
  1668  00FEE9  65                 	db	101	;'e'
  1669  00FEEA  64                 	db	100	;'d'
  1670  00FEEB  0D                 	db	13
  1671  00FEEC  0A                 	db	10
  1672  00FEED  00                 	db	0
  1673  00FEEE                     STR_1:
  1674  00FEEE  44                 	db	68	;'D'
  1675  00FEEF  65                 	db	101	;'e'
  1676  00FEF0  76                 	db	118	;'v'
  1677  00FEF1  65                 	db	101	;'e'
  1678  00FEF2  6C                 	db	108	;'l'
  1679  00FEF3  6F                 	db	111	;'o'
  1680  00FEF4  70                 	db	112	;'p'
  1681  00FEF5  6D                 	db	109	;'m'
  1682  00FEF6  65                 	db	101	;'e'
  1683  00FEF7  6E                 	db	110	;'n'
  1684  00FEF8  74                 	db	116	;'t'
  1685  00FEF9  20                 	db	32
  1686  00FEFA  42                 	db	66	;'B'
  1687  00FEFB  6F                 	db	111	;'o'
  1688  00FEFC  61                 	db	97	;'a'
  1689  00FEFD  72                 	db	114	;'r'
  1690  00FEFE  64                 	db	100	;'d'
  1691  00FEFF  0D                 	db	13
  1692  00FF00  0A                 	db	10
  1693  00FF01  00                 	db	0
  1694  00FF02                     STR_6:
  1695  00FF02  53                 	db	83	;'S'
  1696  00FF03  44                 	db	68	;'D'
  1697  00FF04  20                 	db	32
  1698  00FF05  63                 	db	99	;'c'
  1699  00FF06  61                 	db	97	;'a'
  1700  00FF07  72                 	db	114	;'r'
  1701  00FF08  64                 	db	100	;'d'
  1702  00FF09  20                 	db	32
  1703  00FF0A  61                 	db	97	;'a'
  1704  00FF0B  64                 	db	100	;'d'
  1705  00FF0C  64                 	db	100	;'d'
  1706  00FF0D  72                 	db	114	;'r'
  1707  00FF0E  65                 	db	101	;'e'
  1708  00FF0F  73                 	db	115	;'s'
  1709  00FF10  73                 	db	115	;'s'
  1710  00FF11  3A                 	db	58	;':'
  1711  00FF12  20                 	db	32
  1712  00FF13  20                 	db	32
  1713  00FF14  00                 	db	0
  1714  00FF15                     STR_74:
  1715  00FF15  53                 	db	83	;'S'
  1716  00FF16  65                 	db	101	;'e'
  1717  00FF17  6C                 	db	108	;'l'
  1718  00FF18  65                 	db	101	;'e'
  1719  00FF19  63                 	db	99	;'c'
  1720  00FF1A  74                 	db	116	;'t'
  1721  00FF1B  3A                 	db	58	;':'
  1722  00FF1C  09                 	db	9
  1723  00FF1D  4C                 	db	76	;'L'
  1724  00FF1E  6F                 	db	111	;'o'
  1725  00FF1F  67                 	db	103	;'g'
  1726  00FF20  67                 	db	103	;'g'
  1727  00FF21  69                 	db	105	;'i'
  1728  00FF22  6E                 	db	110	;'n'
  1729  00FF23  67                 	db	103	;'g'
  1730  00FF24  0D                 	db	13
  1731  00FF25  0A                 	db	10
  1732  00FF26  00                 	db	0
  1733  00FF27                     STR_2:
  1734  00FF27  4C                 	db	76	;'L'
  1735  00FF28  61                 	db	97	;'a'
  1736  00FF29  62                 	db	98	;'b'
  1737  00FF2A  20                 	db	32
  1738  00FF2B  31                 	db	49	;'1'
  1739  00FF2C  30                 	db	48	;'0'
  1740  00FF2D  20                 	db	32
  1741  00FF2E  74                 	db	116	;'t'
  1742  00FF2F  65                 	db	101	;'e'
  1743  00FF30  72                 	db	114	;'r'
  1744  00FF31  6D                 	db	109	;'m'
  1745  00FF32  69                 	db	105	;'i'
  1746  00FF33  6E                 	db	110	;'n'
  1747  00FF34  61                 	db	97	;'a'
  1748  00FF35  6C                 	db	108	;'l'
  1749  00FF36  0D                 	db	13
  1750  00FF37  0A                 	db	10
  1751  00FF38  00                 	db	0
  1752  00FF39                     STR_92:
  1753  00FF39  55                 	db	85	;'U'
  1754  00FF3A  6E                 	db	110	;'n'
  1755  00FF3B  6B                 	db	107	;'k'
  1756  00FF3C  6E                 	db	110	;'n'
  1757  00FF3D  6F                 	db	111	;'o'
  1758  00FF3E  77                 	db	119	;'w'
  1759  00FF3F  6E                 	db	110	;'n'
  1760  00FF40  20                 	db	32
  1761  00FF41  6B                 	db	107	;'k'
  1762  00FF42  65                 	db	101	;'e'
  1763  00FF43  79                 	db	121	;'y'
  1764  00FF44  20                 	db	32
  1765  00FF45  25                 	db	37
  1766  00FF46  63                 	db	99	;'c'
  1767  00FF47  0D                 	db	13
  1768  00FF48  0A                 	db	10
  1769  00FF49  00                 	db	0
  1770  00FF4A                     STR_68:
  1771  00FF4A  44                 	db	68	;'D'
  1772  00FF4B  6F                 	db	111	;'o'
  1773  00FF4C  6E                 	db	110	;'n'
  1774  00FF4D  65                 	db	101	;'e'
  1775  00FF4E  20                 	db	32
  1776  00FF4F  72                 	db	114	;'r'
  1777  00FF50  65                 	db	101	;'e'
  1778  00FF51  63                 	db	99	;'c'
  1779  00FF52  6F                 	db	111	;'o'
  1780  00FF53  72                 	db	114	;'r'
  1781  00FF54  64                 	db	100	;'d'
  1782  00FF55  69                 	db	105	;'i'
  1783  00FF56  6E                 	db	110	;'n'
  1784  00FF57  67                 	db	103	;'g'
  1785  00FF58  0D                 	db	13
  1786  00FF59  0A                 	db	10
  1787  00FF5A  00                 	db	0
  1788  00FF5B                     STR_42:
  1789  00FF5B  20                 	db	32
  1790  00FF5C  20                 	db	32
  1791  00FF5D  20                 	db	32
  1792  00FF5E  20                 	db	32
  1793  00FF5F  41                 	db	65	;'A'
  1794  00FF60  64                 	db	100	;'d'
  1795  00FF61  64                 	db	100	;'d'
  1796  00FF62  72                 	db	114	;'r'
  1797  00FF63  65                 	db	101	;'e'
  1798  00FF64  73                 	db	115	;'s'
  1799  00FF65  73                 	db	115	;'s'
  1800  00FF66  3A                 	db	58	;':'
  1801  00FF67  20                 	db	32
  1802  00FF68  20                 	db	32
  1803  00FF69  20                 	db	32
  1804  00FF6A  20                 	db	32
  1805  00FF6B  00                 	db	0
  1806  00FF6C                     STR_77:
  1807  00FF6C  53                 	db	83	;'S'
  1808  00FF6D  65                 	db	101	;'e'
  1809  00FF6E  6C                 	db	108	;'l'
  1810  00FF6F  65                 	db	101	;'e'
  1811  00FF70  63                 	db	99	;'c'
  1812  00FF71  74                 	db	116	;'t'
  1813  00FF72  3A                 	db	58	;':'
  1814  00FF73  09                 	db	9
  1815  00FF74  41                 	db	65	;'A'
  1816  00FF75  70                 	db	112	;'p'
  1817  00FF76  70                 	db	112	;'p'
  1818  00FF77  6C                 	db	108	;'l'
  1819  00FF78  79                 	db	121	;'y'
  1820  00FF79  0D                 	db	13
  1821  00FF7A  0A                 	db	10
  1822  00FF7B  00                 	db	0
  1823  00FF7C                     STR_41:
  1824  00FF7C  52                 	db	82	;'R'
  1825  00FF7D  65                 	db	101	;'e'
  1826  00FF7E  61                 	db	97	;'a'
  1827  00FF7F  64                 	db	100	;'d'
  1828  00FF80  20                 	db	32
  1829  00FF81  62                 	db	98	;'b'
  1830  00FF82  6C                 	db	108	;'l'
  1831  00FF83  6F                 	db	111	;'o'
  1832  00FF84  63                 	db	99	;'c'
  1833  00FF85  6B                 	db	107	;'k'
  1834  00FF86  3A                 	db	58	;':'
  1835  00FF87  20                 	db	32
  1836  00FF88  0D                 	db	13
  1837  00FF89  0A                 	db	10
  1838  00FF8A  00                 	db	0
  1839  00FF8B                     STR_47:
  1840  00FF8B  57                 	db	87	;'W'
  1841  00FF8C  72                 	db	114	;'r'
  1842  00FF8D  69                 	db	105	;'i'
  1843  00FF8E  74                 	db	116	;'t'
  1844  00FF8F  65                 	db	101	;'e'
  1845  00FF90  20                 	db	32
  1846  00FF91  62                 	db	98	;'b'
  1847  00FF92  6C                 	db	108	;'l'
  1848  00FF93  6F                 	db	111	;'o'
  1849  00FF94  63                 	db	99	;'c'
  1850  00FF95  6B                 	db	107	;'k'
  1851  00FF96  3A                 	db	58	;':'
  1852  00FF97  0D                 	db	13
  1853  00FF98  0A                 	db	10
  1854  00FF99  00                 	db	0
  1855  00FF9A                     STR_12:
  1856  00FF9A  3F                 	db	63	;'?'
  1857  00FF9B  3A                 	db	58	;':'
  1858  00FF9C  20                 	db	32
  1859  00FF9D  68                 	db	104	;'h'
  1860  00FF9E  65                 	db	101	;'e'
  1861  00FF9F  6C                 	db	108	;'l'
  1862  00FFA0  70                 	db	112	;'p'
  1863  00FFA1  20                 	db	32
  1864  00FFA2  6D                 	db	109	;'m'
  1865  00FFA3  65                 	db	101	;'e'
  1866  00FFA4  6E                 	db	110	;'n'
  1867  00FFA5  75                 	db	117	;'u'
  1868  00FFA6  0D                 	db	13
  1869  00FFA7  0A                 	db	10
  1870  00FFA8  00                 	db	0
  1871  00FFA9                     STR_89:
  1872  00FFA9  4E                 	db	78	;'N'
  1873  00FFAA  4F                 	db	79	;'O'
  1874  00FFAB  54                 	db	84	;'T'
  1875  00FFAC  20                 	db	32
  1876  00FFAD  62                 	db	98	;'b'
  1877  00FFAE  61                 	db	97	;'a'
  1878  00FFAF  6E                 	db	110	;'n'
  1879  00FFB0  61                 	db	97	;'a'
  1880  00FFB1  6E                 	db	110	;'n'
  1881  00FFB2  61                 	db	97	;'a'
  1882  00FFB3  73                 	db	115	;'s'
  1883  00FFB4  0D                 	db	13
  1884  00FFB5  0A                 	db	10
  1885  00FFB6  00                 	db	0
  1886  00FFB7                     STR_34:
  1887  00FFB7  44                 	db	68	;'D'
  1888  00FFB8  65                 	db	101	;'e'
  1889  00FFB9  63                 	db	99	;'c'
  1890  00FFBA  72                 	db	114	;'r'
  1891  00FFBB  65                 	db	101	;'e'
  1892  00FFBC  61                 	db	97	;'a'
  1893  00FFBD  73                 	db	115	;'s'
  1894  00FFBE  65                 	db	101	;'e'
  1895  00FFBF  64                 	db	100	;'d'
  1896  00FFC0  20                 	db	32
  1897  00FFC1  00                 	db	0
  1898  00FFC2                     STR_35:
  1899  00FFC2  49                 	db	73	;'I'
  1900  00FFC3  6E                 	db	110	;'n'
  1901  00FFC4  63                 	db	99	;'c'
  1902  00FFC5  72                 	db	114	;'r'
  1903  00FFC6  65                 	db	101	;'e'
  1904  00FFC7  61                 	db	97	;'a'
  1905  00FFC8  73                 	db	115	;'s'
  1906  00FFC9  65                 	db	101	;'e'
  1907  00FFCA  64                 	db	100	;'d'
  1908  00FFCB  20                 	db	32
  1909  00FFCC  00                 	db	0
  1910  00FFCD                     STR_29:
  1911  00FFCD  6F                 	db	111	;'o'
  1912  00FFCE  3A                 	db	58	;':'
  1913  00FFCF  09                 	db	9
  1914  00FFD0  6F                 	db	111	;'o'
  1915  00FFD1  6B                 	db	107	;'k'
  1916  00FFD2  0D                 	db	13
  1917  00FFD3  0A                 	db	10
  1918  00FFD4  00                 	db	0
  1919  00FFD5                     STR_13:
  1920  00FFD5  6F                 	db	111	;'o'
  1921  00FFD6  3A                 	db	58	;':'
  1922  00FFD7  20                 	db	32
  1923  00FFD8  6B                 	db	107	;'k'
  1924  00FFD9  0D                 	db	13
  1925  00FFDA  0A                 	db	10
  1926  00FFDB  00                 	db	0
  1927  00FFDC                     STR_109:
  1928  00FFDC  25                 	db	37
  1929  00FFDD  30                 	db	48	;'0'
  1930  00FFDE  32                 	db	50	;'2'
  1931  00FFDF  78                 	db	120	;'x'
  1932  00FFE0  20                 	db	32
  1933  00FFE1  00                 	db	0
  1934  00FFE2                     STR_79:
  1935  00FFE2  25                 	db	37
  1936  00FFE3  64                 	db	100	;'d'
  1937  00FFE4  0D                 	db	13
  1938  00FFE5  0A                 	db	10
  1939  00FFE6  00                 	db	0
  1940  00FFE7                     STR_4:
  1941  00FFE7  0D                 	db	13
  1942  00FFE8  0A                 	db	10
  1943  00FFE9  3E                 	db	62	;'>'
  1944  00FFEA  20                 	db	32
  1945  00FFEB  00                 	db	0
  1946  00FFEC                     STR_7:
  1947  00FFEC  25                 	db	37
  1948  00FFED  30                 	db	48	;'0'
  1949  00FFEE  34                 	db	52	;'4'
  1950  00FFEF  78                 	db	120	;'x'
  1951  00FFF0  00                 	db	0
  1952  00FFF1                     STR_103:
  1953  00FFF1  0D                 	db	13
  1954  00FFF2  0A                 	db	10
  1955  00FFF3  0A                 	db	10
  1956  00FFF4  00                 	db	0
  1957  00FFF5                     STR_107:
  1958  00FFF5  25                 	db	37
  1959  00FFF6  63                 	db	99	;'c'
  1960  00FFF7  00                 	db	0
  1961  00FFF8                     STR_95:
  1962  00FFF8  25                 	db	37
  1963  00FFF9  78                 	db	120	;'x'
  1964  00FFFA  00                 	db	0
  1965  00FFFB                     STR_106:
  1966  00FFFB  2E                 	db	46
  1967  00FFFC  00                 	db	0
  1968  00FFFD                     STR_8:
  1969  00FFFD  3A                 	db	58	;':'
  1970  00FFFE  00                 	db	0
  1971  0000                     
  1972                           ; #config settings
  1973  00FFFF  00                 	db	0	; dummy byte at the end
  1974  0000                     
  1975                           	psect	cinit
  1976  0023D8                     __pcinit:
  1977                           	opt callstack 0
  1978  0023D8                     start_initialization:
  1979                           	opt callstack 0
  1980  0023D8                     __initialization:
  1981                           	opt callstack 0
  1982                           
  1983                           ; Initialize objects allocated to BANK0 (2 bytes)
  1984                           ; load TBLPTR registers with __pidataBANK0
  1985  0023D8  0E7E               	movlw	low __pidataBANK0
  1986  0023DA  6EF6               	movwf	tblptrl,c
  1987  0023DC  0E2A               	movlw	high __pidataBANK0
  1988  0023DE  6EF7               	movwf	tblptrh,c
  1989  0023E0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1990  0023E2  6EF8               	movwf	tblptru,c
  1991  0023E4  0009               	tblrd		*+	;fetch initializer
  1992  0023E6  CFF5 F0F5          	movff	tablat,__pdataBANK0
  1993  0023EA  0009               	tblrd		*+	;fetch initializer
  1994  0023EC  CFF5 F0F6          	movff	tablat,__pdataBANK0+1
  1995                           
  1996                           ; Initialize objects allocated to COMRAM (2 bytes)
  1997                           ; load TBLPTR registers with __pidataCOMRAM
  1998  0023F0  0E7C               	movlw	low __pidataCOMRAM
  1999  0023F2  6EF6               	movwf	tblptrl,c
  2000  0023F4  0E2A               	movlw	high __pidataCOMRAM
  2001  0023F6  6EF7               	movwf	tblptrh,c
  2002  0023F8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  2003  0023FA  6EF8               	movwf	tblptru,c
  2004  0023FC  0009               	tblrd		*+	;fetch initializer
  2005  0023FE  CFF5 F04D          	movff	tablat,__pdataCOMRAM
  2006  002402  0009               	tblrd		*+	;fetch initializer
  2007  002404  CFF5 F04E          	movff	tablat,__pdataCOMRAM+1
  2008                           
  2009                           ; Clear objects allocated to BIGRAM (1536 bytes)
  2010  002408  EE00  F0F7         	lfsr	0,__pbssBIGRAM
  2011  00240C  EE16 F000          	lfsr	1,1536
  2012  002410                     clear_0:
  2013  002410  6AEE               	clrf	postinc0,c
  2014  002412  50E5               	movf	postdec1,w,c
  2015  002414  50E1               	movf	fsr1l,w,c
  2016  002416  E1FC               	bnz	clear_0
  2017  002418  50E2               	movf	fsr1h,w,c
  2018  00241A  E1FA               	bnz	clear_0
  2019                           
  2020                           ; Clear objects allocated to BANK0 (50 bytes)
  2021  00241C  EE00  F0C3         	lfsr	0,__pbssBANK0
  2022  002420  0E32               	movlw	50
  2023  002422                     clear_1:
  2024  002422  6AEE               	clrf	postinc0,c
  2025  002424  06E8               	decf	wreg,f,c
  2026  002426  E1FD               	bnz	clear_1
  2027                           
  2028                           ; Clear objects allocated to COMRAM (14 bytes)
  2029  002428  EE00  F03F         	lfsr	0,__pbssCOMRAM
  2030  00242C  0E0E               	movlw	14
  2031  00242E                     clear_2:
  2032  00242E  6AEE               	clrf	postinc0,c
  2033  002430  06E8               	decf	wreg,f,c
  2034  002432  E1FD               	bnz	clear_2
  2035  002434                     end_of_initialization:
  2036                           	opt callstack 0
  2037  002434                     __end_of__initialization:
  2038                           	opt callstack 0
  2039  002434  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2040  002436  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2041  002438  0100               	movlb	0
  2042  00243A  EF29  F000         	goto	_main	;jump to C main() function
  2043                           
  2044                           	psect	bssCOMRAM
  2045  00003F                     __pbssCOMRAM:
  2046                           	opt callstack 0
  2047  00003F                     _width:
  2048                           	opt callstack 0
  2049  00003F                     	ds	2
  2050  000041                     _prec:
  2051                           	opt callstack 0
  2052  000041                     	ds	2
  2053  000043                     _flags:
  2054                           	opt callstack 0
  2055  000043                     	ds	2
  2056  000045                     _timer0ReloadVal:
  2057                           	opt callstack 0
  2058  000045                     	ds	2
  2059  000047                     myTMR0ISR@pullBufferIndex:
  2060                           	opt callstack 0
  2061  000047                     	ds	2
  2062  000049                     myTMR0ISR@sampleBufferIndex:
  2063                           	opt callstack 0
  2064  000049                     	ds	2
  2065  00004B                     _pullBuffer:
  2066                           	opt callstack 0
  2067  00004B                     	ds	1
  2068  00004C                     _fillBuffer:
  2069                           	opt callstack 0
  2070  00004C                     	ds	1
  2071                           
  2072                           	psect	dataCOMRAM
  2073  00004D                     __pdataCOMRAM:
  2074                           	opt callstack 0
  2075  00004D                     myTMR0ISR@activeBufferpull:
  2076                           	opt callstack 0
  2077  00004D                     	ds	1
  2078  00004E                     myTMR0ISR@activeBuffersample:
  2079                           	opt callstack 0
  2080  00004E                     	ds	1
  2081                           
  2082                           	psect	bssBANK0
  2083  0000C3                     __pbssBANK0:
  2084                           	opt callstack 0
  2085  0000C3                     _nout:
  2086                           	opt callstack 0
  2087  0000C3                     	ds	2
  2088  0000C5                     _ADC_InterruptHandler:
  2089                           	opt callstack 0
  2090  0000C5                     	ds	2
  2091  0000C7                     _EUSART1_ErrorHandler:
  2092                           	opt callstack 0
  2093  0000C7                     	ds	2
  2094  0000C9                     _EUSART1_OverrunErrorHandler:
  2095                           	opt callstack 0
  2096  0000C9                     	ds	2
  2097  0000CB                     _EUSART1_FramingErrorHandler:
  2098                           	opt callstack 0
  2099  0000CB                     	ds	2
  2100  0000CD                     _TMR0_InterruptHandler:
  2101                           	opt callstack 0
  2102  0000CD                     	ds	2
  2103  0000CF                     _eusart1RxLastError:
  2104                           	opt callstack 0
  2105  0000CF                     	ds	1
  2106  0000D0                     _collectSamples:
  2107                           	opt callstack 0
  2108  0000D0                     	ds	1
  2109  0000D1                     _blueBufferEmpty:
  2110                           	opt callstack 0
  2111  0000D1                     	ds	1
  2112  0000D2                     _redBufferEmpty:
  2113                           	opt callstack 0
  2114  0000D2                     	ds	1
  2115  0000D3                     _blueBufferFull:
  2116                           	opt callstack 0
  2117  0000D3                     	ds	1
  2118  0000D4                     _redBufferFull:
  2119                           	opt callstack 0
  2120  0000D4                     	ds	1
  2121  0000D5                     _dbuf:
  2122                           	opt callstack 0
  2123  0000D5                     	ds	32
  2124                           
  2125                           	psect	dataBANK0
  2126  0000F5                     __pdataBANK0:
  2127                           	opt callstack 0
  2128  0000F5                     _sampleRate:
  2129                           	opt callstack 0
  2130  0000F5                     	ds	2
  2131                           
  2132                           	psect	bssBIGRAM
  2133  0000F7                     __pbssBIGRAM:
  2134                           	opt callstack 0
  2135  0000F7                     _sdCardBufferBlue:
  2136                           	opt callstack 0
  2137  0000F7                     	ds	512
  2138  0002F7                     _sdCardBufferRed:
  2139                           	opt callstack 0
  2140  0002F7                     	ds	512
  2141  0004F7                     _sdCardBuffer:
  2142                           	opt callstack 0
  2143  0004F7                     	ds	512
  2144                           
  2145                           	psect	cstackBANK0
  2146  000060                     __pcstackBANK0:
  2147                           	opt callstack 0
  2148  000060                     ??_dtoa:
  2149  000060                     ??_xtoa:
  2150                           
  2151                           ; 1 bytes @ 0x0
  2152  000060                     	ds	8
  2153  000068                     _dtoa$1520:
  2154                           	opt callstack 0
  2155  000068                     _xtoa$1530:
  2156                           	opt callstack 0
  2157                           
  2158                           ; 2 bytes @ 0x8
  2159  000068                     	ds	2
  2160  00006A                     dtoa@p:
  2161                           	opt callstack 0
  2162  00006A                     _xtoa$1531:
  2163                           	opt callstack 0
  2164                           
  2165                           ; 2 bytes @ 0xA
  2166  00006A                     	ds	2
  2167  00006C                     dtoa@w:
  2168                           	opt callstack 0
  2169  00006C                     xtoa@p:
  2170                           	opt callstack 0
  2171                           
  2172                           ; 2 bytes @ 0xC
  2173  00006C                     	ds	2
  2174  00006E                     dtoa@s:
  2175                           	opt callstack 0
  2176  00006E                     xtoa@w:
  2177                           	opt callstack 0
  2178                           
  2179                           ; 2 bytes @ 0xE
  2180  00006E                     	ds	2
  2181  000070                     dtoa@n:
  2182                           	opt callstack 0
  2183  000070                     xtoa@n:
  2184                           	opt callstack 0
  2185                           
  2186                           ; 8 bytes @ 0x10
  2187  000070                     	ds	8
  2188  000078                     dtoa@i:
  2189                           	opt callstack 0
  2190  000078                     xtoa@i:
  2191                           	opt callstack 0
  2192                           
  2193                           ; 2 bytes @ 0x18
  2194  000078                     	ds	2
  2195  00007A                     xtoa@c:
  2196                           	opt callstack 0
  2197                           
  2198                           ; 2 bytes @ 0x1A
  2199  00007A                     	ds	2
  2200  00007C                     ??_vfpfcnvrt:
  2201                           
  2202                           ; 1 bytes @ 0x1C
  2203  00007C                     	ds	4
  2204  000080                     vfpfcnvrt@ll:
  2205                           	opt callstack 0
  2206                           
  2207                           ; 8 bytes @ 0x20
  2208  000080                     	ds	8
  2209  000088                     vfpfcnvrt@llu:
  2210                           	opt callstack 0
  2211                           
  2212                           ; 8 bytes @ 0x28
  2213  000088                     	ds	8
  2214  000090                     vfpfcnvrt@done:
  2215                           	opt callstack 0
  2216                           
  2217                           ; 2 bytes @ 0x30
  2218  000090                     	ds	2
  2219  000092                     _vfpfcnvrt$1545:
  2220                           	opt callstack 0
  2221                           
  2222                           ; 2 bytes @ 0x32
  2223  000092                     	ds	2
  2224  000094                     vfpfcnvrt@c:
  2225                           	opt callstack 0
  2226                           
  2227                           ; 1 bytes @ 0x34
  2228  000094                     	ds	1
  2229  000095                     ?_vfprintf:
  2230                           	opt callstack 0
  2231  000095                     vfprintf@fp:
  2232                           	opt callstack 0
  2233                           
  2234                           ; 2 bytes @ 0x35
  2235  000095                     	ds	2
  2236  000097                     vfprintf@fmt:
  2237                           	opt callstack 0
  2238                           
  2239                           ; 2 bytes @ 0x37
  2240  000097                     	ds	2
  2241  000099                     vfprintf@ap:
  2242                           	opt callstack 0
  2243                           
  2244                           ; 2 bytes @ 0x39
  2245  000099                     	ds	2
  2246  00009B                     vfprintf@cfmt:
  2247                           	opt callstack 0
  2248                           
  2249                           ; 2 bytes @ 0x3B
  2250  00009B                     	ds	2
  2251  00009D                     ?_printf:
  2252                           	opt callstack 0
  2253  00009D                     printf@fmt:
  2254                           	opt callstack 0
  2255                           
  2256                           ; 2 bytes @ 0x3D
  2257  00009D                     	ds	8
  2258  0000A5                     printf@ap:
  2259                           	opt callstack 0
  2260                           
  2261                           ; 2 bytes @ 0x45
  2262  0000A5                     	ds	2
  2263  0000A7                     SDCARD_SetIdle@verbose:
  2264                           	opt callstack 0
  2265  0000A7                     hexDumpBuffer@sdCardBuffer:
  2266                           	opt callstack 0
  2267                           
  2268                           ; 2 bytes @ 0x47
  2269  0000A7                     	ds	1
  2270  0000A8                     SDCARD_SetIdle@response:
  2271                           	opt callstack 0
  2272                           
  2273                           ; 1 bytes @ 0x48
  2274  0000A8                     	ds	1
  2275  0000A9                     ??_hexDumpBuffer:
  2276  0000A9                     SDCARD_SetIdle@i:
  2277                           	opt callstack 0
  2278                           
  2279                           ; 2 bytes @ 0x49
  2280  0000A9                     	ds	2
  2281  0000AB                     ??_SDCARD_HCInitialize:
  2282  0000AB                     hexDumpBuffer@j:
  2283                           	opt callstack 0
  2284                           
  2285                           ; 2 bytes @ 0x4B
  2286  0000AB                     	ds	1
  2287  0000AC                     SDCARD_HCInitialize@verbose:
  2288                           	opt callstack 0
  2289                           
  2290                           ; 1 bytes @ 0x4C
  2291  0000AC                     	ds	1
  2292  0000AD                     SDCARD_HCInitialize@i:
  2293                           	opt callstack 0
  2294  0000AD                     hexDumpBuffer@j_621:
  2295                           	opt callstack 0
  2296                           
  2297                           ; 2 bytes @ 0x4D
  2298  0000AD                     	ds	2
  2299  0000AF                     SDCARD_HCInitialize@response:
  2300                           	opt callstack 0
  2301  0000AF                     hexDumpBuffer@i:
  2302                           	opt callstack 0
  2303                           
  2304                           ; 2 bytes @ 0x4F
  2305  0000AF                     	ds	2
  2306  0000B1                     ??_main:
  2307                           
  2308                           ; 1 bytes @ 0x51
  2309  0000B1                     	ds	3
  2310  0000B4                     main@numBlocksSampled:
  2311                           	opt callstack 0
  2312                           
  2313                           ; 2 bytes @ 0x54
  2314  0000B4                     	ds	2
  2315  0000B6                     main@status:
  2316                           	opt callstack 0
  2317                           
  2318                           ; 1 bytes @ 0x56
  2319  0000B6                     	ds	1
  2320  0000B7                     main@recordedBlocks:
  2321                           	opt callstack 0
  2322                           
  2323                           ; 1 bytes @ 0x57
  2324  0000B7                     	ds	1
  2325  0000B8                     main@readBlocks:
  2326                           	opt callstack 0
  2327                           
  2328                           ; 1 bytes @ 0x58
  2329  0000B8                     	ds	1
  2330  0000B9                     main@blocksRead:
  2331                           	opt callstack 0
  2332                           
  2333                           ; 1 bytes @ 0x59
  2334  0000B9                     	ds	1
  2335  0000BA                     main@j:
  2336                           	opt callstack 0
  2337                           
  2338                           ; 2 bytes @ 0x5A
  2339  0000BA                     	ds	2
  2340  0000BC                     main@cmd:
  2341                           	opt callstack 0
  2342                           
  2343                           ; 1 bytes @ 0x5C
  2344  0000BC                     	ds	1
  2345  0000BD                     main@i:
  2346                           	opt callstack 0
  2347                           
  2348                           ; 2 bytes @ 0x5D
  2349  0000BD                     	ds	2
  2350  0000BF                     main@sdCardAddress:
  2351                           	opt callstack 0
  2352                           
  2353                           ; 4 bytes @ 0x5F
  2354  0000BF                     	ds	4
  2355                           
  2356                           	psect	cstackCOMRAM
  2357  000001                     __pcstackCOMRAM:
  2358                           	opt callstack 0
  2359  000001                     ?_TMR0_ReadTimer:
  2360                           	opt callstack 0
  2361  000001                     i2EPWM1_LoadDutyValue@dutyValue:
  2362                           	opt callstack 0
  2363                           
  2364                           ; 2 bytes @ 0x0
  2365  000001                     	ds	2
  2366  000003                     ??_TMR0_ReadTimer:
  2367  000003                     ??i2_EPWM1_LoadDutyValue:
  2368                           
  2369                           ; 1 bytes @ 0x2
  2370  000003                     	ds	2
  2371  000005                     TMR0_ReadTimer@readVal:
  2372                           	opt callstack 0
  2373                           
  2374                           ; 2 bytes @ 0x4
  2375  000005                     	ds	2
  2376  000007                     TMR0_ReadTimer@readValLow:
  2377                           	opt callstack 0
  2378                           
  2379                           ; 1 bytes @ 0x6
  2380  000007                     	ds	1
  2381  000008                     TMR0_ReadTimer@readValHigh:
  2382                           	opt callstack 0
  2383                           
  2384                           ; 1 bytes @ 0x7
  2385  000008                     	ds	1
  2386  000009                     i2TMR0_WriteTimer@timerVal:
  2387                           	opt callstack 0
  2388                           
  2389                           ; 2 bytes @ 0x8
  2390  000009                     	ds	2
  2391  00000B                     ??_myTMR0ISR:
  2392  00000B                     
  2393                           ; 1 bytes @ 0xA
  2394  00000B                     	ds	2
  2395  00000D                     ??_INTERRUPT_InterruptManager:
  2396                           
  2397                           ; 1 bytes @ 0xC
  2398  00000D                     	ds	4
  2399  000011                     ??_SPI2_Open:
  2400  000011                     ?_strlen:
  2401                           	opt callstack 0
  2402  000011                     ?_isupper:
  2403                           	opt callstack 0
  2404  000011                     ?_isalpha:
  2405                           	opt callstack 0
  2406  000011                     ?_isdigit:
  2407                           	opt callstack 0
  2408  000011                     ?_isspace:
  2409                           	opt callstack 0
  2410  000011                     ?_islower:
  2411                           	opt callstack 0
  2412  000011                     ?___wmul:
  2413                           	opt callstack 0
  2414  000011                     ?___aodiv:
  2415                           	opt callstack 0
  2416  000011                     ?___aomod:
  2417                           	opt callstack 0
  2418  000011                     EUSART1_Write@txData:
  2419                           	opt callstack 0
  2420  000011                     SPI2_ExchangeByte@data:
  2421                           	opt callstack 0
  2422  000011                     TMR0_WriteTimer@timerVal:
  2423                           	opt callstack 0
  2424  000011                     TMR0_SetInterruptHandler@InterruptHandler:
  2425                           	opt callstack 0
  2426  000011                     EPWM1_LoadDutyValue@dutyValue:
  2427                           	opt callstack 0
  2428  000011                     EUSART1_SetFramingErrorHandler@interruptHandler:
  2429                           	opt callstack 0
  2430  000011                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  2431                           	opt callstack 0
  2432  000011                     EUSART1_SetErrorHandler@interruptHandler:
  2433                           	opt callstack 0
  2434  000011                     ___wmul@multiplier:
  2435                           	opt callstack 0
  2436  000011                     isalpha@c:
  2437                           	opt callstack 0
  2438  000011                     isdigit@c:
  2439                           	opt callstack 0
  2440  000011                     isspace@c:
  2441                           	opt callstack 0
  2442  000011                     isupper@c:
  2443                           	opt callstack 0
  2444  000011                     strlen@s:
  2445                           	opt callstack 0
  2446  000011                     islower@c:
  2447                           	opt callstack 0
  2448  000011                     ___aodiv@dividend:
  2449                           	opt callstack 0
  2450  000011                     ___aomod@dividend:
  2451                           	opt callstack 0
  2452                           
  2453                           ; 8 bytes @ 0x10
  2454  000011                     	ds	1
  2455  000012                     SDCARD_PollWriteComplete@status:
  2456                           	opt callstack 0
  2457  000012                     putch@txData:
  2458                           	opt callstack 0
  2459  000012                     SPI2_Open@spi2UniqueConfiguration:
  2460                           	opt callstack 0
  2461  000012                     SDCARD_ReadBlock@addr:
  2462                           	opt callstack 0
  2463  000012                     SDCARD_WriteBlock@addr:
  2464                           	opt callstack 0
  2465                           
  2466                           ; 4 bytes @ 0x11
  2467  000012                     	ds	1
  2468  000013                     ??_EPWM1_LoadDutyValue:
  2469  000013                     ??_TMR0_Initialize:
  2470  000013                     ??_isupper:
  2471  000013                     ??_isalpha:
  2472  000013                     ??_isdigit:
  2473  000013                     ??_isspace:
  2474  000013                     ??_islower:
  2475  000013                     ___wmul@multiplicand:
  2476                           	opt callstack 0
  2477  000013                     fputc@c:
  2478                           	opt callstack 0
  2479  000013                     strlen@a:
  2480                           	opt callstack 0
  2481                           
  2482                           ; 2 bytes @ 0x12
  2483  000013                     	ds	2
  2484  000015                     ___wmul@product:
  2485                           	opt callstack 0
  2486  000015                     fputc@fp:
  2487                           	opt callstack 0
  2488                           
  2489                           ; 2 bytes @ 0x14
  2490  000015                     	ds	1
  2491  000016                     SDCARD_ReadBlock@sdCardBuffer:
  2492                           	opt callstack 0
  2493  000016                     SDCARD_WriteBlock@sdCardBuffer:
  2494                           	opt callstack 0
  2495                           
  2496                           ; 2 bytes @ 0x15
  2497  000016                     	ds	1
  2498  000017                     ??_fputc:
  2499  000017                     ?_toupper:
  2500                           	opt callstack 0
  2501  000017                     _isspace$2031:
  2502                           	opt callstack 0
  2503  000017                     toupper@c:
  2504                           	opt callstack 0
  2505                           
  2506                           ; 2 bytes @ 0x16
  2507  000017                     	ds	1
  2508  000018                     ?_atoi:
  2509                           	opt callstack 0
  2510  000018                     SDCARD_ReadBlock@i:
  2511                           	opt callstack 0
  2512  000018                     SDCARD_WriteBlock@i:
  2513                           	opt callstack 0
  2514  000018                     atoi@s:
  2515                           	opt callstack 0
  2516                           
  2517                           ; 2 bytes @ 0x17
  2518  000018                     	ds	1
  2519  000019                     ??_toupper:
  2520  000019                     ___aodiv@divisor:
  2521                           	opt callstack 0
  2522  000019                     ___aomod@divisor:
  2523                           	opt callstack 0
  2524                           
  2525                           ; 8 bytes @ 0x18
  2526  000019                     	ds	1
  2527  00001A                     ??_atoi:
  2528                           
  2529                           ; 1 bytes @ 0x19
  2530  00001A                     	ds	2
  2531  00001C                     fputs@s:
  2532                           	opt callstack 0
  2533                           
  2534                           ; 2 bytes @ 0x1B
  2535  00001C                     	ds	1
  2536  00001D                     _toupper$2096:
  2537                           	opt callstack 0
  2538                           
  2539                           ; 2 bytes @ 0x1C
  2540  00001D                     	ds	1
  2541  00001E                     atoi@neg:
  2542                           	opt callstack 0
  2543  00001E                     fputs@fp:
  2544                           	opt callstack 0
  2545                           
  2546                           ; 2 bytes @ 0x1D
  2547  00001E                     	ds	2
  2548  000020                     fputs@c:
  2549                           	opt callstack 0
  2550  000020                     _atoi$2004:
  2551                           	opt callstack 0
  2552                           
  2553                           ; 2 bytes @ 0x1F
  2554  000020                     	ds	1
  2555  000021                     ___aodiv@counter:
  2556                           	opt callstack 0
  2557  000021                     ___aomod@counter:
  2558                           	opt callstack 0
  2559  000021                     fputs@i:
  2560                           	opt callstack 0
  2561                           
  2562                           ; 2 bytes @ 0x20
  2563  000021                     	ds	1
  2564  000022                     ___aodiv@sign:
  2565                           	opt callstack 0
  2566  000022                     ___aomod@sign:
  2567                           	opt callstack 0
  2568  000022                     _atoi$2006:
  2569                           	opt callstack 0
  2570                           
  2571                           ; 2 bytes @ 0x21
  2572  000022                     	ds	1
  2573  000023                     ?_abs:
  2574                           	opt callstack 0
  2575  000023                     ?_pad:
  2576                           	opt callstack 0
  2577  000023                     pad@fp:
  2578                           	opt callstack 0
  2579  000023                     abs@a:
  2580                           	opt callstack 0
  2581  000023                     ___aodiv@quotient:
  2582                           	opt callstack 0
  2583                           
  2584                           ; 8 bytes @ 0x22
  2585  000023                     	ds	1
  2586  000024                     _atoi$2005:
  2587                           	opt callstack 0
  2588                           
  2589                           ; 1 bytes @ 0x23
  2590  000024                     	ds	1
  2591  000025                     ??_abs:
  2592  000025                     pad@buf:
  2593                           	opt callstack 0
  2594  000025                     atoi@n:
  2595                           	opt callstack 0
  2596                           
  2597                           ; 2 bytes @ 0x24
  2598  000025                     	ds	2
  2599  000027                     pad@p:
  2600                           	opt callstack 0
  2601                           
  2602                           ; 2 bytes @ 0x26
  2603  000027                     	ds	2
  2604  000029                     ??_pad:
  2605                           
  2606                           ; 1 bytes @ 0x28
  2607  000029                     	ds	1
  2608  00002A                     pad@i:
  2609                           	opt callstack 0
  2610                           
  2611                           ; 2 bytes @ 0x29
  2612  00002A                     	ds	2
  2613  00002C                     pad@w:
  2614                           	opt callstack 0
  2615                           
  2616                           ; 2 bytes @ 0x2B
  2617  00002C                     	ds	2
  2618  00002E                     ?_ctoa:
  2619                           	opt callstack 0
  2620  00002E                     ?_dtoa:
  2621                           	opt callstack 0
  2622  00002E                     ?_xtoa:
  2623                           	opt callstack 0
  2624  00002E                     ctoa@fp:
  2625                           	opt callstack 0
  2626  00002E                     dtoa@fp:
  2627                           	opt callstack 0
  2628  00002E                     xtoa@fp:
  2629                           	opt callstack 0
  2630                           
  2631                           ; 2 bytes @ 0x2D
  2632  00002E                     	ds	2
  2633  000030                     ctoa@c:
  2634                           	opt callstack 0
  2635  000030                     dtoa@d:
  2636                           	opt callstack 0
  2637  000030                     xtoa@d:
  2638                           	opt callstack 0
  2639                           
  2640                           ; 8 bytes @ 0x2F
  2641  000030                     	ds	1
  2642  000031                     ctoa@w:
  2643                           	opt callstack 0
  2644                           
  2645                           ; 2 bytes @ 0x30
  2646  000031                     	ds	7
  2647  000038                     xtoa@x:
  2648                           	opt callstack 0
  2649                           
  2650                           ; 1 bytes @ 0x37
  2651  000038                     	ds	1
  2652  000039                     ?_vfpfcnvrt:
  2653                           	opt callstack 0
  2654  000039                     vfpfcnvrt@fp:
  2655                           	opt callstack 0
  2656                           
  2657                           ; 2 bytes @ 0x38
  2658  000039                     	ds	2
  2659  00003B                     vfpfcnvrt@fmt:
  2660                           	opt callstack 0
  2661                           
  2662                           ; 2 bytes @ 0x3A
  2663  00003B                     	ds	2
  2664  00003D                     vfpfcnvrt@ap:
  2665                           	opt callstack 0
  2666                           
  2667                           ; 2 bytes @ 0x3C
  2668  00003D                     	ds	2
  2669  00003F                     
  2670                           ; 1 bytes @ 0x3E
  2671 ;;
  2672 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2673 ;;
  2674 ;; *************** function _main *****************
  2675 ;; Defined at:
  2676 ;;		line 49 in file "main.c"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;		None
  2679 ;; Auto vars:     Size  Location     Type
  2680 ;;  sdCardAddres    4   95[BANK0 ] unsigned long 
  2681 ;;  i               2   93[BANK0 ] unsigned short 
  2682 ;;  j               2   90[BANK0 ] unsigned short 
  2683 ;;  numBlocksSam    2   84[BANK0 ] unsigned short 
  2684 ;;  cmd             1   92[BANK0 ] unsigned char 
  2685 ;;  blocksRead      1   89[BANK0 ] unsigned char 
  2686 ;;  readBlocks      1   88[BANK0 ] unsigned char 
  2687 ;;  recordedBloc    1   87[BANK0 ] unsigned char 
  2688 ;;  status          1   86[BANK0 ] unsigned char 
  2689 ;;  letter          1    0        unsigned char 
  2690 ;; Return value:  Size  Location     Type
  2691 ;;                  1    wreg      void 
  2692 ;; Registers used:
  2693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2700 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2701 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2702 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2703 ;;Total ram usage:       18 bytes
  2704 ;; Hardware stack levels required when called:   15
  2705 ;; This function calls:
  2706 ;;		_EPWM1_LoadDutyValue
  2707 ;;		_EUSART1_Read
  2708 ;;		_EUSART1_is_rx_ready
  2709 ;;		_SDCARD_HCInitialize
  2710 ;;		_SDCARD_PollWriteComplete
  2711 ;;		_SDCARD_ReadBlock
  2712 ;;		_SDCARD_WriteBlock
  2713 ;;		_SPI2_Close
  2714 ;;		_SPI2_Open
  2715 ;;		_SYSTEM_Initialize
  2716 ;;		_TMR0_SetInterruptHandler
  2717 ;;		_TMR0_WriteTimer
  2718 ;;		_hexDumpBuffer
  2719 ;;		_printf
  2720 ;; This function is called by:
  2721 ;;		Startup code after reset
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           	psect	text0
  2726  000052                     __ptext0:
  2727                           	opt callstack 0
  2728  000052                     _main:
  2729                           	opt callstack 16
  2730  000052                     
  2731                           ;main.c: 50:     TMR0_WriteTimer(0x0000);;main.c: 51:     INTCONbits.TMR0IF = 0;;main.c:
      +                           52:     while (INTCONbits.TMR0IF == 0);;main.c: 53: ;main.c: 55: ;main.c: 56:     (INTC
      +                          ONbits.GIE = 1);;main.c: 57:     (INTCONbits.PEIE = 1);;main.c: 58: 
  2732  000052  0E00               	movlw	0
  2733  000054  0100               	movlb	0	; () banked
  2734  000056  6FBF               	movwf	main@sdCardAddress& (0+255),b
  2735  000058  0E00               	movlw	0
  2736  00005A  6FC0               	movwf	(main@sdCardAddress+1)& (0+255),b
  2737  00005C  0E00               	movlw	0
  2738  00005E  6FC1               	movwf	(main@sdCardAddress+2)& (0+255),b
  2739  000060  0E00               	movlw	0
  2740  000062  6FC2               	movwf	(main@sdCardAddress+3)& (0+255),b
  2741  000064                     
  2742                           ; BSR set to: 0
  2743                           ;main.c: 63: 
  2744  000064  EC86  F014         	call	_SYSTEM_Initialize	;wreg free
  2745  000068  888A               	bsf	138,4,c	;volatile
  2746  00006A                     
  2747                           ;main.c: 67:             cmd = EUSART1_Read();
  2748  00006A  0E00               	movlw	0
  2749  00006C  6E12               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  2750  00006E  0E00               	movlw	0
  2751  000070  6E11               	movwf	TMR0_WriteTimer@timerVal^0,c
  2752  000072  EC17  F015         	call	_TMR0_WriteTimer	;wreg free
  2753  000076                     
  2754                           ;main.c: 68:    switch (cmd) {
  2755  000076  94F2               	bcf	242,2,c	;volatile
  2756  000078                     l71:
  2757  000078  A4F2               	btfss	242,2,c	;volatile
  2758  00007A  EF41  F000         	goto	u4371
  2759  00007E  EF43  F000         	goto	u4370
  2760  000082                     u4371:
  2761  000082  EF3C  F000         	goto	l71
  2762  000086                     u4370:
  2763  000086                     
  2764                           ;main.c: 71: 
  2765  000086  0E5C               	movlw	low _myTMR0ISR
  2766  000088  6E11               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  2767  00008A  0E18               	movlw	high _myTMR0ISR
  2768  00008C  6E12               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  2769  00008E  EC1C  F015         	call	_TMR0_SetInterruptHandler	;wreg free
  2770  000092                     
  2771                           ;main.c: 73:    case '?':
  2772  000092  8EF2               	bsf	242,7,c	;volatile
  2773  000094                     
  2774                           ;main.c: 74:     printf("\r\n-------------------------------------------------\r\n");
  2775  000094  8CF2               	bsf	242,6,c	;volatile
  2776  000096                     
  2777                           ;main.c: 76:                 printf("%04x", sdCardAddress>>16); printf(":"); printf("%04
      +                          x", sdCardAddress&0X0000FFFF); printf("\r\n");
  2778  000096  0EEE               	movlw	low STR_1
  2779  000098  0100               	movlb	0	; () banked
  2780  00009A  6F9D               	movwf	printf@fmt& (0+255),b
  2781  00009C  0EFE               	movlw	high STR_1
  2782  00009E  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2783  0000A0  EC72  F014         	call	_printf	;wreg free
  2784  0000A4                     
  2785                           ;main.c: 77:                 printf("-------------------------------------------------\r
      +                          \n");
  2786  0000A4  0E27               	movlw	low STR_2
  2787  0000A6  0100               	movlb	0	; () banked
  2788  0000A8  6F9D               	movwf	printf@fmt& (0+255),b
  2789  0000AA  0EFF               	movlw	high STR_2
  2790  0000AC  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2791  0000AE  EC72  F014         	call	_printf	;wreg free
  2792  0000B2                     
  2793                           ;main.c: 78:                 printf("?: help menu\r\n");
  2794  0000B2  0E5B               	movlw	low STR_3
  2795  0000B4  0100               	movlb	0	; () banked
  2796  0000B6  6F9D               	movwf	printf@fmt& (0+255),b
  2797  0000B8  0EFD               	movlw	high STR_3
  2798  0000BA  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2799  0000BC  EC72  F014         	call	_printf	;wreg free
  2800  0000C0                     
  2801                           ;main.c: 79:     printf("o: k\r\n");
  2802  0000C0  0EE7               	movlw	low STR_4
  2803  0000C2  0100               	movlb	0	; () banked
  2804  0000C4  6F9D               	movwf	printf@fmt& (0+255),b
  2805  0000C6  0EFF               	movlw	high STR_4
  2806  0000C8  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2807  0000CA  EC72  F014         	call	_printf	;wreg free
  2808  0000CE                     l5250:
  2809                           
  2810                           ;main.c: 83:                 printf("i: Initialize SD card\r\n");
  2811  0000CE  ECFC  F014         	call	_EUSART1_is_rx_ready	;wreg free
  2812  0000D2  0900               	iorlw	0
  2813  0000D4  B4D8               	btfsc	status,2,c
  2814  0000D6  EF6F  F000         	goto	u4381
  2815  0000DA  EF71  F000         	goto	u4380
  2816  0000DE                     u4381:
  2817  0000DE  EF67  F000         	goto	l5250
  2818  0000E2                     u4380:
  2819  0000E2                     
  2820                           ;main.c: 84:                 printf("-------------------------------------------------\r
      +                          \n");
  2821  0000E2  EC5D  F014         	call	_EUSART1_Read	;wreg free
  2822  0000E6  0100               	movlb	0	; () banked
  2823  0000E8  6FBC               	movwf	main@cmd& (0+255),b
  2824                           
  2825                           ;main.c: 85:                 printf("a/A decrease/increase read address\r\n");
  2826  0000EA  EFA6  F005         	goto	l5516
  2827  0000EE                     l5254:
  2828                           
  2829                           ; BSR set to: 0
  2830                           ;main.c: 91:                 printf("+/-: Increase/Decrease the sample rate by 10 us\r\n
      +                          ");
  2831  0000EE  0E30               	movlw	low STR_5
  2832  0000F0  6F9D               	movwf	printf@fmt& (0+255),b
  2833  0000F2  0EFB               	movlw	high STR_5
  2834  0000F4  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2835  0000F6  EC72  F014         	call	_printf	;wreg free
  2836                           
  2837                           ;main.c: 92:                 printf("W: Write microphone => SD card at %d us\r\n", sampl
      +                          eRate);
  2838  0000FA  0E02               	movlw	low STR_6
  2839  0000FC  0100               	movlb	0	; () banked
  2840  0000FE  6F9D               	movwf	printf@fmt& (0+255),b
  2841  000100  0EFF               	movlw	high STR_6
  2842  000102  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2843  000104  EC72  F014         	call	_printf	;wreg free
  2844                           
  2845                           ;main.c: 93:                 printf("P: Play from SD card to PWM -> LPF -> Audio\r\n");
  2846  000108  0EEC               	movlw	low STR_7
  2847  00010A  0100               	movlb	0	; () banked
  2848  00010C  6F9D               	movwf	printf@fmt& (0+255),b
  2849  00010E  0EFF               	movlw	high STR_7
  2850  000110  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2851  000112  C0C1  F09F         	movff	main@sdCardAddress+2,?_printf+2
  2852  000116  C0C2  F0A0         	movff	main@sdCardAddress+3,?_printf+3
  2853  00011A  6BA1               	clrf	(?_printf+4)& (0+255),b
  2854  00011C  6BA2               	clrf	(?_printf+5)& (0+255),b
  2855  00011E  EC72  F014         	call	_printf	;wreg free
  2856  000122  0EFD               	movlw	low STR_8
  2857  000124  0100               	movlb	0	; () banked
  2858  000126  6F9D               	movwf	printf@fmt& (0+255),b
  2859  000128  0EFF               	movlw	high STR_8
  2860  00012A  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2861  00012C  EC72  F014         	call	_printf	;wreg free
  2862  000130  0EEC               	movlw	low STR_7
  2863  000132  0100               	movlb	0	; () banked
  2864  000134  6F9D               	movwf	printf@fmt& (0+255),b
  2865  000136  0EFF               	movlw	high STR_7
  2866  000138  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2867  00013A  0EFF               	movlw	255
  2868  00013C  15BF               	andwf	main@sdCardAddress& (0+255),w,b
  2869  00013E  6F9F               	movwf	(?_printf+2)& (0+255),b
  2870  000140  0EFF               	movlw	255
  2871  000142  15C0               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  2872  000144  6FA0               	movwf	(?_printf+3)& (0+255),b
  2873  000146  0E00               	movlw	0
  2874  000148  15C1               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  2875  00014A  6FA1               	movwf	(?_printf+4)& (0+255),b
  2876  00014C  0E00               	movlw	0
  2877  00014E  15C2               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  2878  000150  6FA2               	movwf	(?_printf+5)& (0+255),b
  2879  000152  EC72  F014         	call	_printf	;wreg free
  2880  000156  0E88               	movlw	low (STR_41+12)
  2881  000158  0100               	movlb	0	; () banked
  2882  00015A  6F9D               	movwf	printf@fmt& (0+255),b
  2883  00015C  0EFF               	movlw	high (STR_41+12)
  2884  00015E  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2885  000160  EC72  F014         	call	_printf	;wreg free
  2886                           
  2887                           ;main.c: 94:                 printf("-------------------------------------------------\r
      +                          \n");
  2888  000164  0E32               	movlw	low (STR_5+2)
  2889  000166  0100               	movlb	0	; () banked
  2890  000168  6F9D               	movwf	printf@fmt& (0+255),b
  2891  00016A  0EFB               	movlw	high (STR_5+2)
  2892  00016C  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2893  00016E  EC72  F014         	call	_printf	;wreg free
  2894                           
  2895                           ;main.c: 95:                 break;
  2896  000172  0E9A               	movlw	low STR_12
  2897  000174  0100               	movlb	0	; () banked
  2898  000176  6F9D               	movwf	printf@fmt& (0+255),b
  2899  000178  0EFF               	movlw	high STR_12
  2900  00017A  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2901  00017C  EC72  F014         	call	_printf	;wreg free
  2902                           
  2903                           ;main.c: 96: 
  2904  000180  0ED5               	movlw	low STR_13
  2905  000182  0100               	movlb	0	; () banked
  2906  000184  6F9D               	movwf	printf@fmt& (0+255),b
  2907  000186  0EFF               	movlw	high STR_13
  2908  000188  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2909  00018A  EC72  F014         	call	_printf	;wreg free
  2910                           
  2911                           ;main.c: 97: 
  2912  00018E  0EC5               	movlw	low STR_14
  2913  000190  0100               	movlb	0	; () banked
  2914  000192  6F9D               	movwf	printf@fmt& (0+255),b
  2915  000194  0EFE               	movlw	high STR_14
  2916  000196  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2917  000198  EC72  F014         	call	_printf	;wreg free
  2918                           
  2919                           ;main.c: 98: 
  2920  00019C  0E6B               	movlw	low STR_15
  2921  00019E  0100               	movlb	0	; () banked
  2922  0001A0  6F9D               	movwf	printf@fmt& (0+255),b
  2923  0001A2  0EFE               	movlw	high STR_15
  2924  0001A4  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2925  0001A6  EC72  F014         	call	_printf	;wreg free
  2926                           
  2927                           ;main.c: 99: 
  2928  0001AA  0E32               	movlw	low (STR_5+2)
  2929  0001AC  0100               	movlb	0	; () banked
  2930  0001AE  6F9D               	movwf	printf@fmt& (0+255),b
  2931  0001B0  0EFB               	movlw	high (STR_5+2)
  2932  0001B2  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2933  0001B4  EC72  F014         	call	_printf	;wreg free
  2934                           
  2935                           ;main.c: 100:    case 'o':
  2936  0001B8  0E3B               	movlw	low STR_17
  2937  0001BA  0100               	movlb	0	; () banked
  2938  0001BC  6F9D               	movwf	printf@fmt& (0+255),b
  2939  0001BE  0EFE               	movlw	high STR_17
  2940  0001C0  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2941  0001C2  EC72  F014         	call	_printf	;wreg free
  2942                           
  2943                           ;main.c: 101:     printf("o:	ok\r\n");
  2944  0001C6  0E32               	movlw	low (STR_5+2)
  2945  0001C8  0100               	movlb	0	; () banked
  2946  0001CA  6F9D               	movwf	printf@fmt& (0+255),b
  2947  0001CC  0EFB               	movlw	high (STR_5+2)
  2948  0001CE  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2949  0001D0  EC72  F014         	call	_printf	;wreg free
  2950                           
  2951                           ;main.c: 102:     break;
  2952  0001D4  0ED0               	movlw	low STR_19
  2953  0001D6  0100               	movlb	0	; () banked
  2954  0001D8  6F9D               	movwf	printf@fmt& (0+255),b
  2955  0001DA  0EFC               	movlw	high STR_19
  2956  0001DC  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2957  0001DE  EC72  F014         	call	_printf	;wreg free
  2958                           
  2959                           ;main.c: 103: 
  2960  0001E2  0E51               	movlw	low STR_20
  2961  0001E4  0100               	movlb	0	; () banked
  2962  0001E6  6F9D               	movwf	printf@fmt& (0+255),b
  2963  0001E8  0EFC               	movlw	high STR_20
  2964  0001EA  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2965  0001EC  0E02               	movlw	2
  2966  0001EE  6FA0               	movwf	(?_printf+3)& (0+255),b
  2967  0001F0  0E00               	movlw	0
  2968  0001F2  6F9F               	movwf	(?_printf+2)& (0+255),b
  2969  0001F4  EC72  F014         	call	_printf	;wreg free
  2970                           
  2971                           ;main.c: 104: 
  2972  0001F8  0EF9               	movlw	low STR_21
  2973  0001FA  0100               	movlb	0	; () banked
  2974  0001FC  6F9D               	movwf	printf@fmt& (0+255),b
  2975  0001FE  0EFA               	movlw	high STR_21
  2976  000200  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2977  000202  EC72  F014         	call	_printf	;wreg free
  2978                           
  2979                           ;main.c: 105: 
  2980  000206  0E32               	movlw	low (STR_5+2)
  2981  000208  0100               	movlb	0	; () banked
  2982  00020A  6F9D               	movwf	printf@fmt& (0+255),b
  2983  00020C  0EFB               	movlw	high (STR_5+2)
  2984  00020E  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2985  000210  EC72  F014         	call	_printf	;wreg free
  2986                           
  2987                           ;main.c: 106: 
  2988  000214  0E3B               	movlw	low STR_23
  2989  000216  0100               	movlb	0	; () banked
  2990  000218  6F9D               	movwf	printf@fmt& (0+255),b
  2991  00021A  0EFD               	movlw	high STR_23
  2992  00021C  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2993  00021E  EC72  F014         	call	_printf	;wreg free
  2994                           
  2995                           ;main.c: 107:             case 'Z':
  2996  000222  0E32               	movlw	low (STR_5+2)
  2997  000224  0100               	movlb	0	; () banked
  2998  000226  6F9D               	movwf	printf@fmt& (0+255),b
  2999  000228  0EFB               	movlw	high (STR_5+2)
  3000  00022A  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3001  00022C  EC72  F014         	call	_printf	;wreg free
  3002                           
  3003                           ;main.c: 108:                 for (i=0; i<40; i++) printf("\n");
  3004  000230  0E66               	movlw	low STR_25
  3005  000232  0100               	movlb	0	; () banked
  3006  000234  6F9D               	movwf	printf@fmt& (0+255),b
  3007  000236  0EFB               	movlw	high STR_25
  3008  000238  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3009  00023A  EC72  F014         	call	_printf	;wreg free
  3010                           
  3011                           ;main.c: 109:                 __asm("reset");
  3012  00023E  0EA6               	movlw	low STR_26
  3013  000240  0100               	movlb	0	; () banked
  3014  000242  6F9D               	movwf	printf@fmt& (0+255),b
  3015  000244  0EFC               	movlw	high STR_26
  3016  000246  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3017  000248  C0F5  F09F         	movff	_sampleRate,?_printf+2
  3018  00024C  C0F6  F0A0         	movff	_sampleRate+1,?_printf+3
  3019  000250  EC72  F014         	call	_printf	;wreg free
  3020                           
  3021                           ;main.c: 110:                 break;
  3022  000254  0EF5               	movlw	low STR_27
  3023  000256  0100               	movlb	0	; () banked
  3024  000258  6F9D               	movwf	printf@fmt& (0+255),b
  3025  00025A  0EFB               	movlw	high STR_27
  3026  00025C  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3027  00025E  EC72  F014         	call	_printf	;wreg free
  3028                           
  3029                           ;main.c: 111: 
  3030  000262  0E32               	movlw	low (STR_5+2)
  3031  000264  0100               	movlb	0	; () banked
  3032  000266  6F9D               	movwf	printf@fmt& (0+255),b
  3033  000268  0EFB               	movlw	high (STR_5+2)
  3034  00026A  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3035  00026C  EC72  F014         	call	_printf	;wreg free
  3036                           
  3037                           ;main.c: 112: 
  3038  000270  EF67  F000         	goto	l5250
  3039  000274                     l5256:
  3040                           
  3041                           ; BSR set to: 0
  3042                           ;main.c: 118: 
  3043  000274  0ECD               	movlw	low STR_29
  3044  000276  6F9D               	movwf	printf@fmt& (0+255),b
  3045  000278  0EFF               	movlw	high STR_29
  3046  00027A  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3047  00027C  EC72  F014         	call	_printf	;wreg free
  3048                           
  3049                           ;main.c: 119: 
  3050  000280  EF67  F000         	goto	l5250
  3051  000284                     l5258:
  3052                           
  3053                           ; BSR set to: 0
  3054                           ;main.c: 125:                 printf("Press any key to continue.\r\n");
  3055  000284  0E00               	movlw	0
  3056  000286  6FBE               	movwf	(main@i+1)& (0+255),b
  3057  000288  0E00               	movlw	0
  3058  00028A  6FBD               	movwf	main@i& (0+255),b
  3059  00028C                     l5264:
  3060                           
  3061                           ; BSR set to: 0
  3062  00028C  0EF3               	movlw	low (STR_103+2)
  3063  00028E  6F9D               	movwf	printf@fmt& (0+255),b
  3064  000290  0EFF               	movlw	high (STR_103+2)
  3065  000292  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3066  000294  EC72  F014         	call	_printf	;wreg free
  3067  000298  0100               	movlb	0	; () banked
  3068  00029A  4BBD               	infsnz	main@i& (0+255),f,b
  3069  00029C  2BBE               	incf	(main@i+1)& (0+255),f,b
  3070  00029E                     
  3071                           ; BSR set to: 0
  3072  00029E  51BE               	movf	(main@i+1)& (0+255),w,b
  3073  0002A0  E109               	bnz	u4390
  3074  0002A2  0E28               	movlw	40
  3075  0002A4  5DBD               	subwf	main@i& (0+255),w,b
  3076  0002A6  A0D8               	btfss	status,0,c
  3077  0002A8  EF58  F001         	goto	u4391
  3078  0002AC  EF5A  F001         	goto	u4390
  3079  0002B0                     u4391:
  3080  0002B0  EF46  F001         	goto	l5264
  3081  0002B4                     u4390:
  3082  0002B4                     
  3083                           ; BSR set to: 0
  3084  0002B4  00FF               	reset		;# 
  3085                           
  3086                           ;main.c: 127:                 SPI2_Open(SPI2_DEFAULT);
  3087  0002B6  EF67  F000         	goto	l5250
  3088  0002BA                     l5270:
  3089                           
  3090                           ; BSR set to: 0
  3091                           ;main.c: 133: 
  3092  0002BA  0E00               	movlw	0
  3093  0002BC  6FBE               	movwf	(main@i+1)& (0+255),b
  3094  0002BE  0E00               	movlw	0
  3095  0002C0  6FBD               	movwf	main@i& (0+255),b
  3096  0002C2                     l5276:
  3097                           
  3098                           ; BSR set to: 0
  3099  0002C2  0EF3               	movlw	low (STR_103+2)
  3100  0002C4  6F9D               	movwf	printf@fmt& (0+255),b
  3101  0002C6  0EFF               	movlw	high (STR_103+2)
  3102  0002C8  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3103  0002CA  EC72  F014         	call	_printf	;wreg free
  3104  0002CE  0100               	movlb	0	; () banked
  3105  0002D0  4BBD               	infsnz	main@i& (0+255),f,b
  3106  0002D2  2BBE               	incf	(main@i+1)& (0+255),f,b
  3107  0002D4                     
  3108                           ; BSR set to: 0
  3109  0002D4  51BE               	movf	(main@i+1)& (0+255),w,b
  3110  0002D6  E109               	bnz	u4400
  3111  0002D8  0E28               	movlw	40
  3112  0002DA  5DBD               	subwf	main@i& (0+255),w,b
  3113  0002DC  A0D8               	btfss	status,0,c
  3114  0002DE  EF73  F001         	goto	u4401
  3115  0002E2  EF75  F001         	goto	u4400
  3116  0002E6                     u4401:
  3117  0002E6  EF61  F001         	goto	l5276
  3118  0002EA                     u4400:
  3119  0002EA  EF67  F000         	goto	l5250
  3120  0002EE                     l5282:
  3121                           
  3122                           ; BSR set to: 0
  3123                           ;main.c: 141:                 } else{
  3124  0002EE  0E7C               	movlw	low STR_32
  3125  0002F0  6F9D               	movwf	printf@fmt& (0+255),b
  3126  0002F2  0EFC               	movlw	high STR_32
  3127  0002F4  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3128  0002F6  EC72  F014         	call	_printf	;wreg free
  3129                           
  3130                           ;main.c: 142:                     sdCardAddress += 512;
  3131  0002FA  0EB4               	movlw	low STR_33
  3132  0002FC  0100               	movlb	0	; () banked
  3133  0002FE  6F9D               	movwf	printf@fmt& (0+255),b
  3134  000300  0EFD               	movlw	high STR_33
  3135  000302  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3136  000304  EC72  F014         	call	_printf	;wreg free
  3137  000308                     
  3138                           ;main.c: 143:                     printf("Increased ");
  3139  000308  EC3C  F015         	call	_SPI2_Close	;wreg free
  3140  00030C                     
  3141                           ;main.c: 144:                 }
  3142  00030C  0E00               	movlw	0
  3143  00030E  EC6B  F010         	call	_SPI2_Open
  3144  000312                     l5288:
  3145  000312  ECFC  F014         	call	_EUSART1_is_rx_ready	;wreg free
  3146  000316  0900               	iorlw	0
  3147  000318  B4D8               	btfsc	status,2,c
  3148  00031A  EF91  F001         	goto	u4411
  3149  00031E  EF93  F001         	goto	u4410
  3150  000322                     u4411:
  3151  000322  EF89  F001         	goto	l5288
  3152  000326                     u4410:
  3153  000326                     
  3154                           ;main.c: 146:                 printf("%04x", sdCardAddress>>16); printf(":"); printf("%0
      +                          4x", sdCardAddress&0X0000FFFF); printf("\r\n");
  3155  000326  EC5D  F014         	call	_EUSART1_Read	;wreg free
  3156  00032A                     
  3157                           ;main.c: 147:                 break;
  3158  00032A  0E01               	movlw	1
  3159  00032C  EC95  F00E         	call	_SDCARD_HCInitialize
  3160                           
  3161                           ;main.c: 148: 
  3162  000330  EF67  F000         	goto	l5250
  3163  000334                     l5294:
  3164                           
  3165                           ; BSR set to: 0
  3166                           ;main.c: 155:                 printf("    Address:    ");
  3167  000334  0E61               	movlw	97
  3168  000336  19BC               	xorwf	main@cmd& (0+255),w,b
  3169  000338  A4D8               	btfss	status,2,c
  3170  00033A  EFA1  F001         	goto	u4421
  3171  00033E  EFA3  F001         	goto	u4420
  3172  000342                     u4421:
  3173  000342  EFB3  F001         	goto	l5300
  3174  000346                     u4420:
  3175  000346                     
  3176                           ; BSR set to: 0
  3177                           ;main.c: 156:                 printf("%04x", sdCardAddress>>16); printf(":"); printf("%0
      +                          4x", sdCardAddress&0X0000FFFF); printf("\r\n");
  3178  000346  0E00               	movlw	0
  3179  000348  5FBF               	subwf	main@sdCardAddress& (0+255),f,b
  3180  00034A  0E02               	movlw	2
  3181  00034C  5BC0               	subwfb	(main@sdCardAddress+1)& (0+255),f,b
  3182  00034E  0E00               	movlw	0
  3183  000350  5BC1               	subwfb	(main@sdCardAddress+2)& (0+255),f,b
  3184  000352  0E00               	movlw	0
  3185  000354  5BC2               	subwfb	(main@sdCardAddress+3)& (0+255),f,b
  3186  000356                     
  3187                           ; BSR set to: 0
  3188                           ;main.c: 157:                 hexDumpBuffer(sdCardBuffer);
  3189  000356  0EB7               	movlw	low STR_34
  3190  000358  6F9D               	movwf	printf@fmt& (0+255),b
  3191  00035A  0EFF               	movlw	high STR_34
  3192  00035C  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3193  00035E  EC72  F014         	call	_printf	;wreg free
  3194                           
  3195                           ;main.c: 158:                 break;
  3196  000362  EFC1  F001         	goto	l5304
  3197  000366                     l5300:
  3198                           
  3199                           ; BSR set to: 0
  3200                           ;main.c: 159: 
  3201  000366  0E00               	movlw	0
  3202  000368  27BF               	addwf	main@sdCardAddress& (0+255),f,b
  3203  00036A  0E02               	movlw	2
  3204  00036C  23C0               	addwfc	(main@sdCardAddress+1)& (0+255),f,b
  3205  00036E  0E00               	movlw	0
  3206  000370  23C1               	addwfc	(main@sdCardAddress+2)& (0+255),f,b
  3207  000372  0E00               	movlw	0
  3208  000374  23C2               	addwfc	(main@sdCardAddress+3)& (0+255),f,b
  3209  000376                     
  3210                           ; BSR set to: 0
  3211                           ;main.c: 160: 
  3212  000376  0EC2               	movlw	low STR_35
  3213  000378  6F9D               	movwf	printf@fmt& (0+255),b
  3214  00037A  0EFF               	movlw	high STR_35
  3215  00037C  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3216  00037E  EC72  F014         	call	_printf	;wreg free
  3217  000382                     l5304:
  3218                           
  3219                           ;main.c: 162: 
  3220  000382  0E02               	movlw	low STR_6
  3221  000384  0100               	movlb	0	; () banked
  3222  000386  6F9D               	movwf	printf@fmt& (0+255),b
  3223  000388  0EFF               	movlw	high STR_6
  3224  00038A  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3225  00038C  EC72  F014         	call	_printf	;wreg free
  3226  000390                     
  3227                           ;main.c: 163:             case 'l':
  3228  000390  0EEC               	movlw	low STR_7
  3229  000392  0100               	movlb	0	; () banked
  3230  000394  6F9D               	movwf	printf@fmt& (0+255),b
  3231  000396  0EFF               	movlw	high STR_7
  3232  000398  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3233  00039A  C0C1  F09F         	movff	main@sdCardAddress+2,?_printf+2
  3234  00039E  C0C2  F0A0         	movff	main@sdCardAddress+3,?_printf+3
  3235  0003A2  6BA1               	clrf	(?_printf+4)& (0+255),b
  3236  0003A4  6BA2               	clrf	(?_printf+5)& (0+255),b
  3237  0003A6  EC72  F014         	call	_printf	;wreg free
  3238  0003AA  0EFD               	movlw	low STR_8
  3239  0003AC  0100               	movlb	0	; () banked
  3240  0003AE  6F9D               	movwf	printf@fmt& (0+255),b
  3241  0003B0  0EFF               	movlw	high STR_8
  3242  0003B2  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3243  0003B4  EC72  F014         	call	_printf	;wreg free
  3244  0003B8  0EEC               	movlw	low STR_7
  3245  0003BA  0100               	movlb	0	; () banked
  3246  0003BC  6F9D               	movwf	printf@fmt& (0+255),b
  3247  0003BE  0EFF               	movlw	high STR_7
  3248  0003C0  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3249  0003C2  0EFF               	movlw	255
  3250  0003C4  15BF               	andwf	main@sdCardAddress& (0+255),w,b
  3251  0003C6  6F9F               	movwf	(?_printf+2)& (0+255),b
  3252  0003C8  0EFF               	movlw	255
  3253  0003CA  15C0               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  3254  0003CC  6FA0               	movwf	(?_printf+3)& (0+255),b
  3255  0003CE  0E00               	movlw	0
  3256  0003D0  15C1               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  3257  0003D2  6FA1               	movwf	(?_printf+4)& (0+255),b
  3258  0003D4  0E00               	movlw	0
  3259  0003D6  15C2               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  3260  0003D8  6FA2               	movwf	(?_printf+5)& (0+255),b
  3261  0003DA  EC72  F014         	call	_printf	;wreg free
  3262  0003DE  0E88               	movlw	low (STR_41+12)
  3263  0003E0  0100               	movlb	0	; () banked
  3264  0003E2  6F9D               	movwf	printf@fmt& (0+255),b
  3265  0003E4  0EFF               	movlw	high (STR_41+12)
  3266  0003E6  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3267  0003E8  EC72  F014         	call	_printf	;wreg free
  3268                           
  3269                           ;main.c: 164:                 recordedBlocks = 0;
  3270  0003EC  EF67  F000         	goto	l5250
  3271  0003F0                     l5314:
  3272                           
  3273                           ; BSR set to: 0
  3274                           ;main.c: 170:                             j = 0;
  3275  0003F0  C0BF  F012         	movff	main@sdCardAddress,SDCARD_ReadBlock@addr
  3276  0003F4  C0C0  F013         	movff	main@sdCardAddress+1,SDCARD_ReadBlock@addr+1
  3277  0003F8  C0C1  F014         	movff	main@sdCardAddress+2,SDCARD_ReadBlock@addr+2
  3278  0003FC  C0C2  F015         	movff	main@sdCardAddress+3,SDCARD_ReadBlock@addr+3
  3279  000400  0EF7               	movlw	low _sdCardBuffer
  3280  000402  6E16               	movwf	SDCARD_ReadBlock@sdCardBuffer^0,c
  3281  000404  0E04               	movlw	high _sdCardBuffer
  3282  000406  6E17               	movwf	(SDCARD_ReadBlock@sdCardBuffer+1)^0,c
  3283  000408  ECC1  F010         	call	_SDCARD_ReadBlock	;wreg free
  3284  00040C                     
  3285                           ;main.c: 171:                         }else{
  3286  00040C  0E7C               	movlw	low STR_41
  3287  00040E  0100               	movlb	0	; () banked
  3288  000410  6F9D               	movwf	printf@fmt& (0+255),b
  3289  000412  0EFF               	movlw	high STR_41
  3290  000414  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3291  000416  EC72  F014         	call	_printf	;wreg free
  3292  00041A                     
  3293                           ;main.c: 172:                             j += 1;
  3294  00041A  0E5B               	movlw	low STR_42
  3295  00041C  0100               	movlb	0	; () banked
  3296  00041E  6F9D               	movwf	printf@fmt& (0+255),b
  3297  000420  0EFF               	movlw	high STR_42
  3298  000422  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3299  000424  EC72  F014         	call	_printf	;wreg free
  3300  000428                     
  3301                           ;main.c: 173:                         }
  3302  000428  0EEC               	movlw	low STR_7
  3303  00042A  0100               	movlb	0	; () banked
  3304  00042C  6F9D               	movwf	printf@fmt& (0+255),b
  3305  00042E  0EFF               	movlw	high STR_7
  3306  000430  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3307  000432  C0C1  F09F         	movff	main@sdCardAddress+2,?_printf+2
  3308  000436  C0C2  F0A0         	movff	main@sdCardAddress+3,?_printf+3
  3309  00043A  6BA1               	clrf	(?_printf+4)& (0+255),b
  3310  00043C  6BA2               	clrf	(?_printf+5)& (0+255),b
  3311  00043E  EC72  F014         	call	_printf	;wreg free
  3312  000442  0EFD               	movlw	low STR_8
  3313  000444  0100               	movlb	0	; () banked
  3314  000446  6F9D               	movwf	printf@fmt& (0+255),b
  3315  000448  0EFF               	movlw	high STR_8
  3316  00044A  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3317  00044C  EC72  F014         	call	_printf	;wreg free
  3318  000450  0EEC               	movlw	low STR_7
  3319  000452  0100               	movlb	0	; () banked
  3320  000454  6F9D               	movwf	printf@fmt& (0+255),b
  3321  000456  0EFF               	movlw	high STR_7
  3322  000458  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3323  00045A  0EFF               	movlw	255
  3324  00045C  15BF               	andwf	main@sdCardAddress& (0+255),w,b
  3325  00045E  6F9F               	movwf	(?_printf+2)& (0+255),b
  3326  000460  0EFF               	movlw	255
  3327  000462  15C0               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  3328  000464  6FA0               	movwf	(?_printf+3)& (0+255),b
  3329  000466  0E00               	movlw	0
  3330  000468  15C1               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  3331  00046A  6FA1               	movwf	(?_printf+4)& (0+255),b
  3332  00046C  0E00               	movlw	0
  3333  00046E  15C2               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  3334  000470  6FA2               	movwf	(?_printf+5)& (0+255),b
  3335  000472  EC72  F014         	call	_printf	;wreg free
  3336  000476  0E88               	movlw	low (STR_41+12)
  3337  000478  0100               	movlb	0	; () banked
  3338  00047A  6F9D               	movwf	printf@fmt& (0+255),b
  3339  00047C  0EFF               	movlw	high (STR_41+12)
  3340  00047E  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3341  000480  EC72  F014         	call	_printf	;wreg free
  3342  000484                     
  3343                           ;main.c: 174:                     }
  3344  000484  0EF7               	movlw	low _sdCardBuffer
  3345  000486  0100               	movlb	0	; () banked
  3346  000488  6FA7               	movwf	hexDumpBuffer@sdCardBuffer& (0+255),b
  3347  00048A  0E04               	movlw	high _sdCardBuffer
  3348  00048C  6FA8               	movwf	(hexDumpBuffer@sdCardBuffer+1)& (0+255),b
  3349  00048E  EC38  F00B         	call	_hexDumpBuffer	;wreg free
  3350                           
  3351                           ;main.c: 175:                     SDCARD_WriteBlock(sdCardAddress, sdCardBufferRed);
  3352  000492  EF67  F000         	goto	l5250
  3353  000496                     l5330:
  3354                           
  3355                           ; BSR set to: 0
  3356                           ;main.c: 181:                     recordedBlocks += 1;
  3357  000496  0E00               	movlw	0
  3358  000498  6FB7               	movwf	main@recordedBlocks& (0+255),b
  3359                           
  3360                           ;main.c: 182:                 }
  3361  00049A  0E00               	movlw	0
  3362  00049C  6FBB               	movwf	(main@j+1)& (0+255),b
  3363  00049E  0E00               	movlw	0
  3364  0004A0  6FBA               	movwf	main@j& (0+255),b
  3365                           
  3366                           ;main.c: 183:                 (void) EUSART1_Read();
  3367  0004A2  EFE6  F002         	goto	l5358
  3368  0004A6                     l5332:
  3369                           
  3370                           ;main.c: 184:                 printf("There were %d blocks written to the SD card\r\n", 
      +                          recordedBlocks);
  3371  0004A6  0E00               	movlw	0
  3372  0004A8  0100               	movlb	0	; () banked
  3373  0004AA  6FBE               	movwf	(main@i+1)& (0+255),b
  3374  0004AC  0E00               	movlw	0
  3375  0004AE  6FBD               	movwf	main@i& (0+255),b
  3376  0004B0                     l5338:
  3377                           
  3378                           ; BSR set to: 0
  3379                           ;main.c: 185:                 break;
  3380  0004B0  0E55               	movlw	low _sin
  3381  0004B2  25BA               	addwf	main@j& (0+255),w,b
  3382  0004B4  6EF6               	movwf	tblptrl,c
  3383  0004B6  0EF9               	movlw	high _sin
  3384  0004B8  21BB               	addwfc	(main@j+1)& (0+255),w,b
  3385  0004BA  6EF7               	movwf	tblptrh,c
  3386  0004BC                     	if	1	;There are 3 active tblptr bytes
  3387  0004BC  6AF8               	clrf	tblptru,c
  3388  0004BE  0E00               	movlw	low (__mediumconst shr (0+16))
  3389  0004C0  22F8               	addwfc	tblptru,f,c
  3390  0004C2                     	endif
  3391  0004C2  0EF7               	movlw	low _sdCardBufferRed
  3392  0004C4  25BD               	addwf	main@i& (0+255),w,b
  3393  0004C6  6ED9               	movwf	fsr2l,c
  3394  0004C8  0E02               	movlw	high _sdCardBufferRed
  3395  0004CA  21BE               	addwfc	(main@i+1)& (0+255),w,b
  3396  0004CC  6EDA               	movwf	fsr2h,c
  3397  0004CE  0008               	tblrd		*
  3398  0004D0  CFF5 FFDF          	movff	tablat,indf2
  3399  0004D4                     
  3400                           ; BSR set to: 0
  3401                           ;main.c: 186: 
  3402  0004D4  0E1A               	movlw	26
  3403  0004D6  19BA               	xorwf	main@j& (0+255),w,b
  3404  0004D8  11BB               	iorwf	(main@j+1)& (0+255),w,b
  3405  0004DA  A4D8               	btfss	status,2,c
  3406  0004DC  EF72  F002         	goto	u4431
  3407  0004E0  EF74  F002         	goto	u4430
  3408  0004E4                     u4431:
  3409  0004E4  EF7A  F002         	goto	l5344
  3410  0004E8                     u4430:
  3411  0004E8                     
  3412                           ; BSR set to: 0
  3413                           ;main.c: 187: 
  3414  0004E8  0E00               	movlw	0
  3415  0004EA  6FBB               	movwf	(main@j+1)& (0+255),b
  3416  0004EC  0E00               	movlw	0
  3417  0004EE  6FBA               	movwf	main@j& (0+255),b
  3418                           
  3419                           ;main.c: 188: 
  3420  0004F0  EF7C  F002         	goto	l101
  3421  0004F4                     l5344:
  3422                           
  3423                           ; BSR set to: 0
  3424                           ;main.c: 189: 
  3425  0004F4  4BBA               	infsnz	main@j& (0+255),f,b
  3426  0004F6  2BBB               	incf	(main@j+1)& (0+255),f,b
  3427  0004F8                     l101:
  3428                           
  3429                           ; BSR set to: 0
  3430                           ;main.c: 191:                 sampleRate += 160;
  3431  0004F8  4BBD               	infsnz	main@i& (0+255),f,b
  3432  0004FA  2BBE               	incf	(main@i+1)& (0+255),f,b
  3433  0004FC                     
  3434                           ; BSR set to: 0
  3435  0004FC  0E02               	movlw	2
  3436  0004FE  5DBE               	subwf	(main@i+1)& (0+255),w,b
  3437  000500  A0D8               	btfss	status,0,c
  3438  000502  EF85  F002         	goto	u4441
  3439  000506  EF87  F002         	goto	u4440
  3440  00050A                     u4441:
  3441  00050A  EF58  F002         	goto	l5338
  3442  00050E                     u4440:
  3443  00050E                     
  3444                           ; BSR set to: 0
  3445                           ;main.c: 192:                 break;
  3446  00050E  C0BF  F012         	movff	main@sdCardAddress,SDCARD_WriteBlock@addr
  3447  000512  C0C0  F013         	movff	main@sdCardAddress+1,SDCARD_WriteBlock@addr+1
  3448  000516  C0C1  F014         	movff	main@sdCardAddress+2,SDCARD_WriteBlock@addr+2
  3449  00051A  C0C2  F015         	movff	main@sdCardAddress+3,SDCARD_WriteBlock@addr+3
  3450  00051E  0EF7               	movlw	low _sdCardBufferRed
  3451  000520  6E16               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  3452  000522  0E02               	movlw	high _sdCardBufferRed
  3453  000524  6E17               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  3454  000526  ECA5  F011         	call	_SDCARD_WriteBlock	;wreg free
  3455  00052A                     l5350:
  3456  00052A  EC56  F013         	call	_SDCARD_PollWriteComplete	;wreg free
  3457  00052E  0100               	movlb	0	; () banked
  3458  000530  6FB6               	movwf	main@status& (0+255),b
  3459  000532  29B6               	incf	main@status& (0+255),w,b
  3460  000534  B4D8               	btfsc	status,2,c
  3461  000536  EF9F  F002         	goto	u4451
  3462  00053A  EFA1  F002         	goto	u4450
  3463  00053E                     u4451:
  3464  00053E  EF95  F002         	goto	l5350
  3465  000542                     u4450:
  3466  000542                     
  3467                           ; BSR set to: 0
  3468                           ;main.c: 194: 
  3469  000542  0E8B               	movlw	low STR_47
  3470  000544  6F9D               	movwf	printf@fmt& (0+255),b
  3471  000546  0EFF               	movlw	high STR_47
  3472  000548  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3473  00054A  EC72  F014         	call	_printf	;wreg free
  3474                           
  3475                           ;main.c: 195: 
  3476  00054E  0E5B               	movlw	low STR_42
  3477  000550  0100               	movlb	0	; () banked
  3478  000552  6F9D               	movwf	printf@fmt& (0+255),b
  3479  000554  0EFF               	movlw	high STR_42
  3480  000556  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3481  000558  EC72  F014         	call	_printf	;wreg free
  3482                           
  3483                           ;main.c: 196: 
  3484  00055C  0EEC               	movlw	low STR_7
  3485  00055E  0100               	movlb	0	; () banked
  3486  000560  6F9D               	movwf	printf@fmt& (0+255),b
  3487  000562  0EFF               	movlw	high STR_7
  3488  000564  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3489  000566  C0C1  F09F         	movff	main@sdCardAddress+2,?_printf+2
  3490  00056A  C0C2  F0A0         	movff	main@sdCardAddress+3,?_printf+3
  3491  00056E  6BA1               	clrf	(?_printf+4)& (0+255),b
  3492  000570  6BA2               	clrf	(?_printf+5)& (0+255),b
  3493  000572  EC72  F014         	call	_printf	;wreg free
  3494  000576  0EFD               	movlw	low STR_8
  3495  000578  0100               	movlb	0	; () banked
  3496  00057A  6F9D               	movwf	printf@fmt& (0+255),b
  3497  00057C  0EFF               	movlw	high STR_8
  3498  00057E  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3499  000580  EC72  F014         	call	_printf	;wreg free
  3500  000584  0EEC               	movlw	low STR_7
  3501  000586  0100               	movlb	0	; () banked
  3502  000588  6F9D               	movwf	printf@fmt& (0+255),b
  3503  00058A  0EFF               	movlw	high STR_7
  3504  00058C  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3505  00058E  0EFF               	movlw	255
  3506  000590  15BF               	andwf	main@sdCardAddress& (0+255),w,b
  3507  000592  6F9F               	movwf	(?_printf+2)& (0+255),b
  3508  000594  0EFF               	movlw	255
  3509  000596  15C0               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  3510  000598  6FA0               	movwf	(?_printf+3)& (0+255),b
  3511  00059A  0E00               	movlw	0
  3512  00059C  15C1               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  3513  00059E  6FA1               	movwf	(?_printf+4)& (0+255),b
  3514  0005A0  0E00               	movlw	0
  3515  0005A2  15C2               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  3516  0005A4  6FA2               	movwf	(?_printf+5)& (0+255),b
  3517  0005A6  EC72  F014         	call	_printf	;wreg free
  3518  0005AA  0E88               	movlw	low (STR_41+12)
  3519  0005AC  0100               	movlb	0	; () banked
  3520  0005AE  6F9D               	movwf	printf@fmt& (0+255),b
  3521  0005B0  0EFF               	movlw	high (STR_41+12)
  3522  0005B2  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3523  0005B4  EC72  F014         	call	_printf	;wreg free
  3524  0005B8                     
  3525                           ;main.c: 197:             case '-':
  3526  0005B8  0E00               	movlw	0
  3527  0005BA  0100               	movlb	0	; () banked
  3528  0005BC  27BF               	addwf	main@sdCardAddress& (0+255),f,b
  3529  0005BE  0E02               	movlw	2
  3530  0005C0  23C0               	addwfc	(main@sdCardAddress+1)& (0+255),f,b
  3531  0005C2  0E00               	movlw	0
  3532  0005C4  23C1               	addwfc	(main@sdCardAddress+2)& (0+255),f,b
  3533  0005C6  0E00               	movlw	0
  3534  0005C8  23C2               	addwfc	(main@sdCardAddress+3)& (0+255),f,b
  3535  0005CA                     
  3536                           ; BSR set to: 0
  3537                           ;main.c: 198:                 if(sampleRate <= 480){
  3538  0005CA  2BB7               	incf	main@recordedBlocks& (0+255),f,b
  3539  0005CC                     l5358:
  3540                           
  3541                           ; BSR set to: 0
  3542                           ;main.c: 183:                 (void) EUSART1_Read();
  3543  0005CC  ECFC  F014         	call	_EUSART1_is_rx_ready	;wreg free
  3544  0005D0  0900               	iorlw	0
  3545  0005D2  B4D8               	btfsc	status,2,c
  3546  0005D4  EFEE  F002         	goto	u4461
  3547  0005D8  EFF0  F002         	goto	u4460
  3548  0005DC                     u4461:
  3549  0005DC  EF53  F002         	goto	l5332
  3550  0005E0                     u4460:
  3551  0005E0                     
  3552                           ;main.c: 200:                 }else{
  3553  0005E0  EC5D  F014         	call	_EUSART1_Read	;wreg free
  3554  0005E4                     
  3555                           ;main.c: 201:                     sampleRate -= 160;
  3556  0005E4  0EC7               	movlw	low STR_53
  3557  0005E6  0100               	movlb	0	; () banked
  3558  0005E8  6F9D               	movwf	printf@fmt& (0+255),b
  3559  0005EA  0EFB               	movlw	high STR_53
  3560  0005EC  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3561  0005EE  C0B7  F09F         	movff	main@recordedBlocks,?_printf+2
  3562  0005F2  6BA0               	clrf	(?_printf+3)& (0+255),b
  3563  0005F4  EC72  F014         	call	_printf	;wreg free
  3564                           
  3565                           ;main.c: 202:                 }
  3566  0005F8  EF67  F000         	goto	l5250
  3567  0005FC                     l5364:
  3568                           
  3569                           ; BSR set to: 0
  3570                           ;main.c: 208:             case 'W':
  3571  0005FC  0EA0               	movlw	160
  3572  0005FE  27F5               	addwf	_sampleRate& (0+255),f,b
  3573  000600  0E00               	movlw	0
  3574  000602  23F6               	addwfc	(_sampleRate+1)& (0+255),f,b
  3575                           
  3576                           ;main.c: 209:                 printf("Press any key to start recording audio and press a
      +                          ny key to stop recording.\r\n");
  3577  000604  EF67  F000         	goto	l5250
  3578  000608                     l5366:
  3579                           
  3580                           ; BSR set to: 0
  3581                           ;main.c: 215:                     if(redBufferFull){
  3582  000608  0EE1               	movlw	225
  3583  00060A  5DF5               	subwf	_sampleRate& (0+255),w,b
  3584  00060C  0E01               	movlw	1
  3585  00060E  59F6               	subwfb	(_sampleRate+1)& (0+255),w,b
  3586  000610  B0D8               	btfsc	status,0,c
  3587  000612  EF0D  F003         	goto	u4471
  3588  000616  EF0F  F003         	goto	u4470
  3589  00061A                     u4471:
  3590  00061A  EF15  F003         	goto	l5370
  3591  00061E                     u4470:
  3592  00061E                     
  3593                           ; BSR set to: 0
  3594                           ;main.c: 216:                         SDCARD_WriteBlock(sdCardAddress, sdCardBufferRed);
  3595  00061E  0E01               	movlw	1
  3596  000620  6FF6               	movwf	(_sampleRate+1)& (0+255),b
  3597  000622  0E40               	movlw	64
  3598  000624  6FF5               	movwf	_sampleRate& (0+255),b
  3599                           
  3600                           ;main.c: 217:                         while((status = SDCARD_PollWriteComplete()) == 0xF
      +                          F);
  3601  000626  EF67  F000         	goto	l5250
  3602  00062A                     l5370:
  3603                           
  3604                           ; BSR set to: 0
  3605                           ;main.c: 218:                         printf("Write block:\r\n");
  3606  00062A  0EA0               	movlw	160
  3607  00062C  5FF5               	subwf	_sampleRate& (0+255),f,b
  3608  00062E  0E00               	movlw	0
  3609  000630  5BF6               	subwfb	(_sampleRate+1)& (0+255),f,b
  3610  000632  EF67  F000         	goto	l5250
  3611  000636                     l5372:
  3612                           
  3613                           ; BSR set to: 0
  3614                           ;main.c: 226:                         printf("Write block:\r\n");
  3615  000636  0E73               	movlw	low STR_54
  3616  000638  6F9D               	movwf	printf@fmt& (0+255),b
  3617  00063A  0EF9               	movlw	high STR_54
  3618  00063C  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3619  00063E  EC72  F014         	call	_printf	;wreg free
  3620  000642                     l5374:
  3621  000642  ECFC  F014         	call	_EUSART1_is_rx_ready	;wreg free
  3622  000646  0900               	iorlw	0
  3623  000648  B4D8               	btfsc	status,2,c
  3624  00064A  EF29  F003         	goto	u4481
  3625  00064E  EF2B  F003         	goto	u4480
  3626  000652                     u4481:
  3627  000652  EF21  F003         	goto	l5374
  3628  000656                     u4480:
  3629  000656                     
  3630                           ;main.c: 228:                         printf("%04x", sdCardAddress>>16); printf(":"); pr
      +                          intf("%04x", sdCardAddress&0X0000FFFF); printf("\r\n");
  3631  000656  EC5D  F014         	call	_EUSART1_Read	;wreg free
  3632  00065A                     
  3633                           ;main.c: 229:                         sdCardAddress += 512;
  3634  00065A  0E01               	movlw	1
  3635  00065C  6E4C               	movwf	_fillBuffer^0,c
  3636  00065E                     
  3637                           ;main.c: 230:                         blueBufferFull = 0;
  3638  00065E  0EDA               	movlw	low STR_55
  3639  000660  0100               	movlb	0	; () banked
  3640  000662  6F9D               	movwf	printf@fmt& (0+255),b
  3641  000664  0EFE               	movlw	high STR_55
  3642  000666  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3643  000668  EC72  F014         	call	_printf	;wreg free
  3644                           
  3645                           ;main.c: 231:                     }
  3646  00066C  EF0B  F004         	goto	l5406
  3647  000670                     l5382:
  3648                           
  3649                           ;main.c: 232:                 }
  3650  000670  0100               	movlb	0	; () banked
  3651  000672  51D4               	movf	_redBufferFull& (0+255),w,b
  3652  000674  B4D8               	btfsc	status,2,c
  3653  000676  EF3F  F003         	goto	u4491
  3654  00067A  EF41  F003         	goto	u4490
  3655  00067E                     u4491:
  3656  00067E  EFA3  F003         	goto	l5394
  3657  000682                     u4490:
  3658  000682                     
  3659                           ; BSR set to: 0
  3660                           ;main.c: 233:                 (void) EUSART1_Read();
  3661  000682  C0BF  F012         	movff	main@sdCardAddress,SDCARD_WriteBlock@addr
  3662  000686  C0C0  F013         	movff	main@sdCardAddress+1,SDCARD_WriteBlock@addr+1
  3663  00068A  C0C1  F014         	movff	main@sdCardAddress+2,SDCARD_WriteBlock@addr+2
  3664  00068E  C0C2  F015         	movff	main@sdCardAddress+3,SDCARD_WriteBlock@addr+3
  3665  000692  0EF7               	movlw	low _sdCardBufferRed
  3666  000694  6E16               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  3667  000696  0E02               	movlw	high _sdCardBufferRed
  3668  000698  6E17               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  3669  00069A  ECA5  F011         	call	_SDCARD_WriteBlock	;wreg free
  3670  00069E                     l5386:
  3671  00069E  EC56  F013         	call	_SDCARD_PollWriteComplete	;wreg free
  3672  0006A2  0100               	movlb	0	; () banked
  3673  0006A4  6FB6               	movwf	main@status& (0+255),b
  3674  0006A6  29B6               	incf	main@status& (0+255),w,b
  3675  0006A8  B4D8               	btfsc	status,2,c
  3676  0006AA  EF59  F003         	goto	u4501
  3677  0006AE  EF5B  F003         	goto	u4500
  3678  0006B2                     u4501:
  3679  0006B2  EF4F  F003         	goto	l5386
  3680  0006B6                     u4500:
  3681  0006B6                     
  3682                           ; BSR set to: 0
  3683                           ;main.c: 235: 
  3684  0006B6  0E8B               	movlw	low STR_47
  3685  0006B8  6F9D               	movwf	printf@fmt& (0+255),b
  3686  0006BA  0EFF               	movlw	high STR_47
  3687  0006BC  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3688  0006BE  EC72  F014         	call	_printf	;wreg free
  3689                           
  3690                           ;main.c: 236:                 printf("Done recording\r\n");
  3691  0006C2  0E5B               	movlw	low STR_42
  3692  0006C4  0100               	movlb	0	; () banked
  3693  0006C6  6F9D               	movwf	printf@fmt& (0+255),b
  3694  0006C8  0EFF               	movlw	high STR_42
  3695  0006CA  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3696  0006CC  EC72  F014         	call	_printf	;wreg free
  3697  0006D0  0EEC               	movlw	low STR_7
  3698  0006D2  0100               	movlb	0	; () banked
  3699  0006D4  6F9D               	movwf	printf@fmt& (0+255),b
  3700  0006D6  0EFF               	movlw	high STR_7
  3701  0006D8  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3702  0006DA  C0C1  F09F         	movff	main@sdCardAddress+2,?_printf+2
  3703  0006DE  C0C2  F0A0         	movff	main@sdCardAddress+3,?_printf+3
  3704  0006E2  6BA1               	clrf	(?_printf+4)& (0+255),b
  3705  0006E4  6BA2               	clrf	(?_printf+5)& (0+255),b
  3706  0006E6  EC72  F014         	call	_printf	;wreg free
  3707  0006EA  0EFD               	movlw	low STR_8
  3708  0006EC  0100               	movlb	0	; () banked
  3709  0006EE  6F9D               	movwf	printf@fmt& (0+255),b
  3710  0006F0  0EFF               	movlw	high STR_8
  3711  0006F2  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3712  0006F4  EC72  F014         	call	_printf	;wreg free
  3713  0006F8  0EEC               	movlw	low STR_7
  3714  0006FA  0100               	movlb	0	; () banked
  3715  0006FC  6F9D               	movwf	printf@fmt& (0+255),b
  3716  0006FE  0EFF               	movlw	high STR_7
  3717  000700  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3718  000702  0EFF               	movlw	255
  3719  000704  15BF               	andwf	main@sdCardAddress& (0+255),w,b
  3720  000706  6F9F               	movwf	(?_printf+2)& (0+255),b
  3721  000708  0EFF               	movlw	255
  3722  00070A  15C0               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  3723  00070C  6FA0               	movwf	(?_printf+3)& (0+255),b
  3724  00070E  0E00               	movlw	0
  3725  000710  15C1               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  3726  000712  6FA1               	movwf	(?_printf+4)& (0+255),b
  3727  000714  0E00               	movlw	0
  3728  000716  15C2               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  3729  000718  6FA2               	movwf	(?_printf+5)& (0+255),b
  3730  00071A  EC72  F014         	call	_printf	;wreg free
  3731  00071E  0E88               	movlw	low (STR_41+12)
  3732  000720  0100               	movlb	0	; () banked
  3733  000722  6F9D               	movwf	printf@fmt& (0+255),b
  3734  000724  0EFF               	movlw	high (STR_41+12)
  3735  000726  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3736  000728  EC72  F014         	call	_printf	;wreg free
  3737  00072C  0E00               	movlw	0
  3738  00072E  0100               	movlb	0	; () banked
  3739  000730  27BF               	addwf	main@sdCardAddress& (0+255),f,b
  3740  000732  0E02               	movlw	2
  3741  000734  23C0               	addwfc	(main@sdCardAddress+1)& (0+255),f,b
  3742  000736  0E00               	movlw	0
  3743  000738  23C1               	addwfc	(main@sdCardAddress+2)& (0+255),f,b
  3744  00073A  0E00               	movlw	0
  3745  00073C  23C2               	addwfc	(main@sdCardAddress+3)& (0+255),f,b
  3746  00073E                     
  3747                           ; BSR set to: 0
  3748  00073E  0E00               	movlw	0
  3749  000740  6FD4               	movwf	_redBufferFull& (0+255),b
  3750  000742  EF0B  F004         	goto	l5406
  3751  000746                     l5394:
  3752                           
  3753                           ; BSR set to: 0
  3754  000746  51D3               	movf	_blueBufferFull& (0+255),w,b
  3755  000748  B4D8               	btfsc	status,2,c
  3756  00074A  EFA9  F003         	goto	u4511
  3757  00074E  EFAB  F003         	goto	u4510
  3758  000752                     u4511:
  3759  000752  EF0B  F004         	goto	l5406
  3760  000756                     u4510:
  3761  000756                     
  3762                           ; BSR set to: 0
  3763  000756  C0BF  F012         	movff	main@sdCardAddress,SDCARD_WriteBlock@addr
  3764  00075A  C0C0  F013         	movff	main@sdCardAddress+1,SDCARD_WriteBlock@addr+1
  3765  00075E  C0C1  F014         	movff	main@sdCardAddress+2,SDCARD_WriteBlock@addr+2
  3766  000762  C0C2  F015         	movff	main@sdCardAddress+3,SDCARD_WriteBlock@addr+3
  3767  000766  0EF7               	movlw	low _sdCardBufferBlue
  3768  000768  6E16               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  3769  00076A  0E00               	movlw	high _sdCardBufferBlue
  3770  00076C  6E17               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  3771  00076E  ECA5  F011         	call	_SDCARD_WriteBlock	;wreg free
  3772  000772                     l5398:
  3773  000772  EC56  F013         	call	_SDCARD_PollWriteComplete	;wreg free
  3774  000776  0100               	movlb	0	; () banked
  3775  000778  6FB6               	movwf	main@status& (0+255),b
  3776  00077A  29B6               	incf	main@status& (0+255),w,b
  3777  00077C  B4D8               	btfsc	status,2,c
  3778  00077E  EFC3  F003         	goto	u4521
  3779  000782  EFC5  F003         	goto	u4520
  3780  000786                     u4521:
  3781  000786  EFB9  F003         	goto	l5398
  3782  00078A                     u4520:
  3783  00078A                     
  3784                           ; BSR set to: 0
  3785  00078A  0E8B               	movlw	low STR_47
  3786  00078C  6F9D               	movwf	printf@fmt& (0+255),b
  3787  00078E  0EFF               	movlw	high STR_47
  3788  000790  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3789  000792  EC72  F014         	call	_printf	;wreg free
  3790  000796  0E5B               	movlw	low STR_42
  3791  000798  0100               	movlb	0	; () banked
  3792  00079A  6F9D               	movwf	printf@fmt& (0+255),b
  3793  00079C  0EFF               	movlw	high STR_42
  3794  00079E  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3795  0007A0  EC72  F014         	call	_printf	;wreg free
  3796  0007A4  0EEC               	movlw	low STR_7
  3797  0007A6  0100               	movlb	0	; () banked
  3798  0007A8  6F9D               	movwf	printf@fmt& (0+255),b
  3799  0007AA  0EFF               	movlw	high STR_7
  3800  0007AC  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3801  0007AE  C0C1  F09F         	movff	main@sdCardAddress+2,?_printf+2
  3802  0007B2  C0C2  F0A0         	movff	main@sdCardAddress+3,?_printf+3
  3803  0007B6  6BA1               	clrf	(?_printf+4)& (0+255),b
  3804  0007B8  6BA2               	clrf	(?_printf+5)& (0+255),b
  3805  0007BA  EC72  F014         	call	_printf	;wreg free
  3806  0007BE  0EFD               	movlw	low STR_8
  3807  0007C0  0100               	movlb	0	; () banked
  3808  0007C2  6F9D               	movwf	printf@fmt& (0+255),b
  3809  0007C4  0EFF               	movlw	high STR_8
  3810  0007C6  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3811  0007C8  EC72  F014         	call	_printf	;wreg free
  3812  0007CC  0EEC               	movlw	low STR_7
  3813  0007CE  0100               	movlb	0	; () banked
  3814  0007D0  6F9D               	movwf	printf@fmt& (0+255),b
  3815  0007D2  0EFF               	movlw	high STR_7
  3816  0007D4  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3817  0007D6  0EFF               	movlw	255
  3818  0007D8  15BF               	andwf	main@sdCardAddress& (0+255),w,b
  3819  0007DA  6F9F               	movwf	(?_printf+2)& (0+255),b
  3820  0007DC  0EFF               	movlw	255
  3821  0007DE  15C0               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  3822  0007E0  6FA0               	movwf	(?_printf+3)& (0+255),b
  3823  0007E2  0E00               	movlw	0
  3824  0007E4  15C1               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  3825  0007E6  6FA1               	movwf	(?_printf+4)& (0+255),b
  3826  0007E8  0E00               	movlw	0
  3827  0007EA  15C2               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  3828  0007EC  6FA2               	movwf	(?_printf+5)& (0+255),b
  3829  0007EE  EC72  F014         	call	_printf	;wreg free
  3830  0007F2  0E88               	movlw	low (STR_41+12)
  3831  0007F4  0100               	movlb	0	; () banked
  3832  0007F6  6F9D               	movwf	printf@fmt& (0+255),b
  3833  0007F8  0EFF               	movlw	high (STR_41+12)
  3834  0007FA  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3835  0007FC  EC72  F014         	call	_printf	;wreg free
  3836  000800  0E00               	movlw	0
  3837  000802  0100               	movlb	0	; () banked
  3838  000804  27BF               	addwf	main@sdCardAddress& (0+255),f,b
  3839  000806  0E02               	movlw	2
  3840  000808  23C0               	addwfc	(main@sdCardAddress+1)& (0+255),f,b
  3841  00080A  0E00               	movlw	0
  3842  00080C  23C1               	addwfc	(main@sdCardAddress+2)& (0+255),f,b
  3843  00080E  0E00               	movlw	0
  3844  000810  23C2               	addwfc	(main@sdCardAddress+3)& (0+255),f,b
  3845  000812                     
  3846                           ; BSR set to: 0
  3847  000812  0E00               	movlw	0
  3848  000814  6FD3               	movwf	_blueBufferFull& (0+255),b
  3849  000816                     l5406:
  3850                           
  3851                           ;main.c: 231:                     }
  3852  000816  ECFC  F014         	call	_EUSART1_is_rx_ready	;wreg free
  3853  00081A  0900               	iorlw	0
  3854  00081C  B4D8               	btfsc	status,2,c
  3855  00081E  EF13  F004         	goto	u4531
  3856  000822  EF15  F004         	goto	u4530
  3857  000826                     u4531:
  3858  000826  EF38  F003         	goto	l5382
  3859  00082A                     u4530:
  3860  00082A  EC5D  F014         	call	_EUSART1_Read	;wreg free
  3861  00082E  0E00               	movlw	0
  3862  000830  0100               	movlb	0	; () banked
  3863  000832  6FD0               	movwf	_collectSamples& (0+255),b
  3864  000834                     
  3865                           ; BSR set to: 0
  3866  000834  0E4A               	movlw	low STR_68
  3867  000836  6F9D               	movwf	printf@fmt& (0+255),b
  3868  000838  0EFF               	movlw	high STR_68
  3869  00083A  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3870  00083C  EC72  F014         	call	_printf	;wreg free
  3871                           
  3872                           ;main.c: 292:                 break;
  3873  000840  EF67  F000         	goto	l5250
  3874  000844                     l5414:
  3875                           
  3876                           ; BSR set to: 0
  3877                           ;main.c: 298:                 readBlocks = 0;
  3878  000844  0E00               	movlw	0
  3879  000846  6FB8               	movwf	main@readBlocks& (0+255),b
  3880  000848                     
  3881                           ; BSR set to: 0
  3882                           ;main.c: 300:                 printf("You may terminate spooling at anytime with a keypr
      +                          ess.\r\n");
  3883  000848  0EC0               	movlw	low STR_69
  3884  00084A  6F9D               	movwf	printf@fmt& (0+255),b
  3885  00084C  0EFA               	movlw	high STR_69
  3886  00084E  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3887  000850  EC72  F014         	call	_printf	;wreg free
  3888  000854                     
  3889                           ;main.c: 301:                 printf("To spool terminal contents into a file follow thes
      +                          e instructions:\r\n");
  3890  000854  0E08               	movlw	low STR_70
  3891  000856  0100               	movlb	0	; () banked
  3892  000858  6F9D               	movwf	printf@fmt& (0+255),b
  3893  00085A  0EFA               	movlw	high STR_70
  3894  00085C  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3895  00085E  EC72  F014         	call	_printf	;wreg free
  3896  000862                     
  3897                           ;main.c: 302:                 printf("\r\n");
  3898  000862  0E88               	movlw	low (STR_41+12)
  3899  000864  0100               	movlb	0	; () banked
  3900  000866  6F9D               	movwf	printf@fmt& (0+255),b
  3901  000868  0EFF               	movlw	high (STR_41+12)
  3902  00086A  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3903  00086C  EC72  F014         	call	_printf	;wreg free
  3904  000870                     
  3905                           ;main.c: 303:                 printf("Right mouse click on the upper left of the PuTTY w
      +                          indow\r\n");
  3906  000870  0E86               	movlw	low STR_72
  3907  000872  0100               	movlb	0	; () banked
  3908  000874  6F9D               	movwf	printf@fmt& (0+255),b
  3909  000876  0EFA               	movlw	high STR_72
  3910  000878  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3911  00087A  EC72  F014         	call	_printf	;wreg free
  3912  00087E                     
  3913                           ;main.c: 304:                 printf("Select:\tChange settings...\r\n");
  3914  00087E  0E97               	movlw	low STR_73
  3915  000880  0100               	movlb	0	; () banked
  3916  000882  6F9D               	movwf	printf@fmt& (0+255),b
  3917  000884  0EFD               	movlw	high STR_73
  3918  000886  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3919  000888  EC72  F014         	call	_printf	;wreg free
  3920  00088C                     
  3921                           ;main.c: 305:                 printf("Select:\tLogging\r\n");
  3922  00088C  0E15               	movlw	low STR_74
  3923  00088E  0100               	movlb	0	; () banked
  3924  000890  6F9D               	movwf	printf@fmt& (0+255),b
  3925  000892  0EFF               	movlw	high STR_74
  3926  000894  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3927  000896  EC72  F014         	call	_printf	;wreg free
  3928  00089A                     
  3929                           ;main.c: 306:                 printf("Select:\tSession logging: All session output\r\n")
      +                          ;
  3930  00089A  0E23               	movlw	low STR_75
  3931  00089C  0100               	movlb	0	; () banked
  3932  00089E  6F9D               	movwf	printf@fmt& (0+255),b
  3933  0008A0  0EFC               	movlw	high STR_75
  3934  0008A2  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3935  0008A4  EC72  F014         	call	_printf	;wreg free
  3936  0008A8                     
  3937                           ;main.c: 307:                 printf("Log file name: Browse and provide a .csv extension
      +                           to your file name\r\n");
  3938  0008A8  0EC1               	movlw	low STR_76
  3939  0008AA  0100               	movlb	0	; () banked
  3940  0008AC  6F9D               	movwf	printf@fmt& (0+255),b
  3941  0008AE  0EF9               	movlw	high STR_76
  3942  0008B0  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3943  0008B2  EC72  F014         	call	_printf	;wreg free
  3944  0008B6                     
  3945                           ;main.c: 308:                 printf("Select:\tApply\r\n");
  3946  0008B6  0E6C               	movlw	low STR_77
  3947  0008B8  0100               	movlb	0	; () banked
  3948  0008BA  6F9D               	movwf	printf@fmt& (0+255),b
  3949  0008BC  0EFF               	movlw	high STR_77
  3950  0008BE  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3951  0008C0  EC72  F014         	call	_printf	;wreg free
  3952  0008C4                     
  3953                           ;main.c: 309:                 printf("Press any key to start\r\n");
  3954  0008C4  0E22               	movlw	low STR_78
  3955  0008C6  0100               	movlb	0	; () banked
  3956  0008C8  6F9D               	movwf	printf@fmt& (0+255),b
  3957  0008CA  0EFE               	movlw	high STR_78
  3958  0008CC  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3959  0008CE  EC72  F014         	call	_printf	;wreg free
  3960  0008D2                     
  3961                           ;main.c: 311:                 (void) EUSART1_Read();
  3962  0008D2  EC5D  F014         	call	_EUSART1_Read	;wreg free
  3963  0008D6                     l5438:
  3964  0008D6  ECFC  F014         	call	_EUSART1_is_rx_ready	;wreg free
  3965  0008DA  0900               	iorlw	0
  3966  0008DC  B4D8               	btfsc	status,2,c
  3967  0008DE  EF73  F004         	goto	u4541
  3968  0008E2  EF75  F004         	goto	u4540
  3969  0008E6                     u4541:
  3970  0008E6  EF6B  F004         	goto	l5438
  3971  0008EA                     u4540:
  3972  0008EA                     
  3973                           ;main.c: 314:                 (void) EUSART1_Read();
  3974  0008EA  EC5D  F014         	call	_EUSART1_Read	;wreg free
  3975                           
  3976                           ;main.c: 315:                 while (!(EUSART1_is_rx_ready())) {
  3977  0008EE  EFAA  F004         	goto	l5458
  3978  0008F2                     l5442:
  3979                           
  3980                           ;main.c: 316:                     SDCARD_ReadBlock(sdCardAddress, sdCardBufferRed);
  3981  0008F2  C0BF  F012         	movff	main@sdCardAddress,SDCARD_ReadBlock@addr
  3982  0008F6  C0C0  F013         	movff	main@sdCardAddress+1,SDCARD_ReadBlock@addr+1
  3983  0008FA  C0C1  F014         	movff	main@sdCardAddress+2,SDCARD_ReadBlock@addr+2
  3984  0008FE  C0C2  F015         	movff	main@sdCardAddress+3,SDCARD_ReadBlock@addr+3
  3985  000902  0EF7               	movlw	low _sdCardBufferRed
  3986  000904  6E16               	movwf	SDCARD_ReadBlock@sdCardBuffer^0,c
  3987  000906  0E02               	movlw	high _sdCardBufferRed
  3988  000908  6E17               	movwf	(SDCARD_ReadBlock@sdCardBuffer+1)^0,c
  3989  00090A  ECC1  F010         	call	_SDCARD_ReadBlock	;wreg free
  3990  00090E                     
  3991                           ;main.c: 318:                     for (i = 0; i < 512; i++) {
  3992  00090E  0E00               	movlw	0
  3993  000910  0100               	movlb	0	; () banked
  3994  000912  6FBE               	movwf	(main@i+1)& (0+255),b
  3995  000914  0E00               	movlw	0
  3996  000916  6FBD               	movwf	main@i& (0+255),b
  3997  000918                     l5450:
  3998                           
  3999                           ; BSR set to: 0
  4000                           ;main.c: 319:                         printf("%d\r\n", sdCardBufferRed[i]);
  4001  000918  0EE2               	movlw	low STR_79
  4002  00091A  6F9D               	movwf	printf@fmt& (0+255),b
  4003  00091C  0EFF               	movlw	high STR_79
  4004  00091E  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4005  000920  0EF7               	movlw	low _sdCardBufferRed
  4006  000922  25BD               	addwf	main@i& (0+255),w,b
  4007  000924  6ED9               	movwf	fsr2l,c
  4008  000926  0E02               	movlw	high _sdCardBufferRed
  4009  000928  21BE               	addwfc	(main@i+1)& (0+255),w,b
  4010  00092A  6EDA               	movwf	fsr2h,c
  4011  00092C  50DF               	movf	indf2,w,c
  4012  00092E  6FB1               	movwf	??_main& (0+255),b
  4013  000930  51B1               	movf	??_main& (0+255),w,b
  4014  000932  6F9F               	movwf	(?_printf+2)& (0+255),b
  4015  000934  6BA0               	clrf	(?_printf+3)& (0+255),b
  4016  000936  EC72  F014         	call	_printf	;wreg free
  4017  00093A                     
  4018                           ;main.c: 320:                     }
  4019  00093A  0100               	movlb	0	; () banked
  4020  00093C  4BBD               	infsnz	main@i& (0+255),f,b
  4021  00093E  2BBE               	incf	(main@i+1)& (0+255),f,b
  4022  000940                     
  4023                           ; BSR set to: 0
  4024  000940  0E02               	movlw	2
  4025  000942  5DBE               	subwf	(main@i+1)& (0+255),w,b
  4026  000944  A0D8               	btfss	status,0,c
  4027  000946  EFA7  F004         	goto	u4551
  4028  00094A  EFA9  F004         	goto	u4550
  4029  00094E                     u4551:
  4030  00094E  EF8C  F004         	goto	l5450
  4031  000952                     u4550:
  4032  000952                     
  4033                           ; BSR set to: 0
  4034                           ;main.c: 322:                     readBlocks++;
  4035  000952  2BB8               	incf	main@readBlocks& (0+255),f,b
  4036  000954                     l5458:
  4037                           
  4038                           ;main.c: 315:                 while (!(EUSART1_is_rx_ready())) {
  4039  000954  ECFC  F014         	call	_EUSART1_is_rx_ready	;wreg free
  4040  000958  0900               	iorlw	0
  4041  00095A  B4D8               	btfsc	status,2,c
  4042  00095C  EFB2  F004         	goto	u4561
  4043  000960  EFB4  F004         	goto	u4560
  4044  000964                     u4561:
  4045  000964  EF79  F004         	goto	l5442
  4046  000968                     u4560:
  4047  000968                     
  4048                           ;main.c: 325:                 printf("Spooled %d out of the %d blocks.\r\n", readBlocks,
      +                           4);
  4049  000968  0E18               	movlw	low STR_80
  4050  00096A  0100               	movlb	0	; () banked
  4051  00096C  6F9D               	movwf	printf@fmt& (0+255),b
  4052  00096E  0EFD               	movlw	high STR_80
  4053  000970  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4054  000972  C0B8  F09F         	movff	main@readBlocks,?_printf+2
  4055  000976  6BA0               	clrf	(?_printf+3)& (0+255),b
  4056  000978  0E00               	movlw	0
  4057  00097A  6FA2               	movwf	(?_printf+5)& (0+255),b
  4058  00097C  0E04               	movlw	4
  4059  00097E  6FA1               	movwf	(?_printf+4)& (0+255),b
  4060  000980  EC72  F014         	call	_printf	;wreg free
  4061                           
  4062                           ;main.c: 326:                 printf("To close the file follow these instructions:\r\n")
      +                          ;
  4063  000984  0E98               	movlw	low STR_81
  4064  000986  0100               	movlb	0	; () banked
  4065  000988  6F9D               	movwf	printf@fmt& (0+255),b
  4066  00098A  0EFB               	movlw	high STR_81
  4067  00098C  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4068  00098E  EC72  F014         	call	_printf	;wreg free
  4069                           
  4070                           ;main.c: 327:                 printf("\r\n");
  4071  000992  0E88               	movlw	low (STR_41+12)
  4072  000994  0100               	movlb	0	; () banked
  4073  000996  6F9D               	movwf	printf@fmt& (0+255),b
  4074  000998  0EFF               	movlw	high (STR_41+12)
  4075  00099A  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4076  00099C  EC72  F014         	call	_printf	;wreg free
  4077                           
  4078                           ;main.c: 328:                 printf("Right mouse click on the upper left of the PuTTY w
      +                          indow\r\n");
  4079  0009A0  0E86               	movlw	low STR_72
  4080  0009A2  0100               	movlb	0	; () banked
  4081  0009A4  6F9D               	movwf	printf@fmt& (0+255),b
  4082  0009A6  0EFA               	movlw	high STR_72
  4083  0009A8  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4084  0009AA  EC72  F014         	call	_printf	;wreg free
  4085                           
  4086                           ;main.c: 329:                 printf("Select:\tChange settings...\r\n");
  4087  0009AE  0E97               	movlw	low STR_73
  4088  0009B0  0100               	movlb	0	; () banked
  4089  0009B2  6F9D               	movwf	printf@fmt& (0+255),b
  4090  0009B4  0EFD               	movlw	high STR_73
  4091  0009B6  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4092  0009B8  EC72  F014         	call	_printf	;wreg free
  4093                           
  4094                           ;main.c: 330:                 printf("Select:\tLogging\r\n");
  4095  0009BC  0E15               	movlw	low STR_74
  4096  0009BE  0100               	movlb	0	; () banked
  4097  0009C0  6F9D               	movwf	printf@fmt& (0+255),b
  4098  0009C2  0EFF               	movlw	high STR_74
  4099  0009C4  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4100  0009C6  EC72  F014         	call	_printf	;wreg free
  4101                           
  4102                           ;main.c: 331:                 printf("Session logging: None\r\n");
  4103  0009CA  0E53               	movlw	low STR_86
  4104  0009CC  0100               	movlb	0	; () banked
  4105  0009CE  6F9D               	movwf	printf@fmt& (0+255),b
  4106  0009D0  0EFE               	movlw	high STR_86
  4107  0009D2  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4108  0009D4  EC72  F014         	call	_printf	;wreg free
  4109                           
  4110                           ;main.c: 332:                 printf("Select:\tApply\r\n");
  4111  0009D8  0E6C               	movlw	low STR_77
  4112  0009DA  0100               	movlb	0	; () banked
  4113  0009DC  6F9D               	movwf	printf@fmt& (0+255),b
  4114  0009DE  0EFF               	movlw	high STR_77
  4115  0009E0  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4116  0009E2  EC72  F014         	call	_printf	;wreg free
  4117                           
  4118                           ;main.c: 334:                 break;
  4119  0009E6  EF67  F000         	goto	l5250
  4120  0009EA                     l5462:
  4121                           
  4122                           ; BSR set to: 0
  4123                           ;main.c: 339:                 blocksRead = 0;
  4124  0009EA  0E00               	movlw	0
  4125  0009EC  6FB9               	movwf	main@blocksRead& (0+255),b
  4126                           
  4127                           ;main.c: 340:                 sdCardAddress = 0x00000000;
  4128  0009EE  0E00               	movlw	0
  4129  0009F0  6FBF               	movwf	main@sdCardAddress& (0+255),b
  4130  0009F2  0E00               	movlw	0
  4131  0009F4  6FC0               	movwf	(main@sdCardAddress+1)& (0+255),b
  4132  0009F6  0E00               	movlw	0
  4133  0009F8  6FC1               	movwf	(main@sdCardAddress+2)& (0+255),b
  4134  0009FA  0E00               	movlw	0
  4135  0009FC  6FC2               	movwf	(main@sdCardAddress+3)& (0+255),b
  4136  0009FE                     
  4137                           ; BSR set to: 0
  4138                           ;main.c: 341:                 printf("Press any key to replay the audio stored on the SD
      +                           card\r\n");
  4139  0009FE  0E4C               	movlw	low STR_88
  4140  000A00  6F9D               	movwf	printf@fmt& (0+255),b
  4141  000A02  0EFA               	movlw	high STR_88
  4142  000A04  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4143  000A06  EC72  F014         	call	_printf	;wreg free
  4144  000A0A                     l5466:
  4145  000A0A  ECFC  F014         	call	_EUSART1_is_rx_ready	;wreg free
  4146  000A0E  0900               	iorlw	0
  4147  000A10  B4D8               	btfsc	status,2,c
  4148  000A12  EF0D  F005         	goto	u4571
  4149  000A16  EF0F  F005         	goto	u4570
  4150  000A1A                     u4571:
  4151  000A1A  EF05  F005         	goto	l5466
  4152  000A1E                     u4570:
  4153  000A1E                     
  4154                           ;main.c: 343:                 (void) EUSART1_Read();
  4155  000A1E  EC5D  F014         	call	_EUSART1_Read	;wreg free
  4156  000A22                     
  4157                           ;main.c: 344:                 SDCARD_ReadBlock(sdCardAddress, sdCardBufferBlue);
  4158  000A22  0E00               	movlw	0
  4159  000A24  6E12               	movwf	SDCARD_ReadBlock@addr^0,c
  4160  000A26  0E00               	movlw	0
  4161  000A28  6E13               	movwf	(SDCARD_ReadBlock@addr+1)^0,c
  4162  000A2A  0E00               	movlw	0
  4163  000A2C  6E14               	movwf	(SDCARD_ReadBlock@addr+2)^0,c
  4164  000A2E  0E00               	movlw	0
  4165  000A30  6E15               	movwf	(SDCARD_ReadBlock@addr+3)^0,c
  4166  000A32  0EF7               	movlw	low _sdCardBufferBlue
  4167  000A34  6E16               	movwf	SDCARD_ReadBlock@sdCardBuffer^0,c
  4168  000A36  0E00               	movlw	high _sdCardBufferBlue
  4169  000A38  6E17               	movwf	(SDCARD_ReadBlock@sdCardBuffer+1)^0,c
  4170  000A3A  ECC1  F010         	call	_SDCARD_ReadBlock	;wreg free
  4171  000A3E                     
  4172                           ;main.c: 345:                 pullBuffer = 1;
  4173  000A3E  0E01               	movlw	1
  4174  000A40  6E4B               	movwf	_pullBuffer^0,c
  4175  000A42                     
  4176                           ;main.c: 346:                 sdCardAddress += 512;
  4177  000A42  0E00               	movlw	0
  4178  000A44  0100               	movlb	0	; () banked
  4179  000A46  27BF               	addwf	main@sdCardAddress& (0+255),f,b
  4180  000A48  0E02               	movlw	2
  4181  000A4A  23C0               	addwfc	(main@sdCardAddress+1)& (0+255),f,b
  4182  000A4C  0E00               	movlw	0
  4183  000A4E  23C1               	addwfc	(main@sdCardAddress+2)& (0+255),f,b
  4184  000A50  0E00               	movlw	0
  4185  000A52  23C2               	addwfc	(main@sdCardAddress+3)& (0+255),f,b
  4186  000A54                     
  4187                           ; BSR set to: 0
  4188                           ;main.c: 347:                 blocksRead++;
  4189  000A54  2BB9               	incf	main@blocksRead& (0+255),f,b
  4190  000A56                     
  4191                           ; BSR set to: 0
  4192                           ;main.c: 348:                 redBufferEmpty = 1;
  4193  000A56  0E01               	movlw	1
  4194  000A58  6FD2               	movwf	_redBufferEmpty& (0+255),b
  4195                           
  4196                           ;main.c: 350:                 while(blocksRead <= numBlocksSampled){
  4197  000A5A  EF86  F005         	goto	l5506
  4198  000A5E                     l5480:
  4199                           
  4200                           ; BSR set to: 0
  4201                           ;main.c: 351:                     printf("NOT bananas\r\n");
  4202  000A5E  0EA9               	movlw	low STR_89
  4203  000A60  6F9D               	movwf	printf@fmt& (0+255),b
  4204  000A62  0EFF               	movlw	high STR_89
  4205  000A64  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4206  000A66  EC72  F014         	call	_printf	;wreg free
  4207  000A6A                     
  4208                           ;main.c: 356:                     if(blueBufferEmpty == 1){
  4209  000A6A  0100               	movlb	0	; () banked
  4210  000A6C  05D1               	decf	_blueBufferEmpty& (0+255),w,b
  4211  000A6E  A4D8               	btfss	status,2,c
  4212  000A70  EF3C  F005         	goto	u4581
  4213  000A74  EF3E  F005         	goto	u4580
  4214  000A78                     u4581:
  4215  000A78  EF5E  F005         	goto	l5494
  4216  000A7C                     u4580:
  4217  000A7C                     
  4218                           ; BSR set to: 0
  4219                           ;main.c: 357:                         printf("bananas\r\n");
  4220  000A7C  0EAD               	movlw	low (STR_89+4)
  4221  000A7E  6F9D               	movwf	printf@fmt& (0+255),b
  4222  000A80  0EFF               	movlw	high (STR_89+4)
  4223  000A82  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4224  000A84  EC72  F014         	call	_printf	;wreg free
  4225  000A88                     
  4226                           ;main.c: 358:                         SDCARD_ReadBlock(sdCardAddress, sdCardBufferBlue);
  4227  000A88  C0BF  F012         	movff	main@sdCardAddress,SDCARD_ReadBlock@addr
  4228  000A8C  C0C0  F013         	movff	main@sdCardAddress+1,SDCARD_ReadBlock@addr+1
  4229  000A90  C0C1  F014         	movff	main@sdCardAddress+2,SDCARD_ReadBlock@addr+2
  4230  000A94  C0C2  F015         	movff	main@sdCardAddress+3,SDCARD_ReadBlock@addr+3
  4231  000A98  0EF7               	movlw	low _sdCardBufferBlue
  4232  000A9A  6E16               	movwf	SDCARD_ReadBlock@sdCardBuffer^0,c
  4233  000A9C  0E00               	movlw	high _sdCardBufferBlue
  4234  000A9E  6E17               	movwf	(SDCARD_ReadBlock@sdCardBuffer+1)^0,c
  4235  000AA0  ECC1  F010         	call	_SDCARD_ReadBlock	;wreg free
  4236  000AA4                     
  4237                           ;main.c: 359:                         sdCardAddress += 512;
  4238  000AA4  0E00               	movlw	0
  4239  000AA6  0100               	movlb	0	; () banked
  4240  000AA8  27BF               	addwf	main@sdCardAddress& (0+255),f,b
  4241  000AAA  0E02               	movlw	2
  4242  000AAC  23C0               	addwfc	(main@sdCardAddress+1)& (0+255),f,b
  4243  000AAE  0E00               	movlw	0
  4244  000AB0  23C1               	addwfc	(main@sdCardAddress+2)& (0+255),f,b
  4245  000AB2  0E00               	movlw	0
  4246  000AB4  23C2               	addwfc	(main@sdCardAddress+3)& (0+255),f,b
  4247  000AB6                     
  4248                           ; BSR set to: 0
  4249                           ;main.c: 360:                         blueBufferEmpty = 0;
  4250  000AB6  0E00               	movlw	0
  4251  000AB8  6FD1               	movwf	_blueBufferEmpty& (0+255),b
  4252  000ABA                     
  4253                           ; BSR set to: 0
  4254                           ;main.c: 361:                         blocksRead++;
  4255  000ABA  2BB9               	incf	main@blocksRead& (0+255),f,b
  4256  000ABC                     l5494:
  4257                           
  4258                           ; BSR set to: 0
  4259                           ;main.c: 363:                     if(redBufferEmpty == 1){
  4260  000ABC  05D2               	decf	_redBufferEmpty& (0+255),w,b
  4261  000ABE  A4D8               	btfss	status,2,c
  4262  000AC0  EF64  F005         	goto	u4591
  4263  000AC4  EF66  F005         	goto	u4590
  4264  000AC8                     u4591:
  4265  000AC8  EF86  F005         	goto	l5506
  4266  000ACC                     u4590:
  4267  000ACC                     
  4268                           ; BSR set to: 0
  4269                           ;main.c: 364:                         printf("bananas\r\n");
  4270  000ACC  0EAD               	movlw	low (STR_89+4)
  4271  000ACE  6F9D               	movwf	printf@fmt& (0+255),b
  4272  000AD0  0EFF               	movlw	high (STR_89+4)
  4273  000AD2  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4274  000AD4  EC72  F014         	call	_printf	;wreg free
  4275  000AD8                     
  4276                           ;main.c: 365:                         SDCARD_ReadBlock(sdCardAddress, sdCardBufferRed);
  4277  000AD8  C0BF  F012         	movff	main@sdCardAddress,SDCARD_ReadBlock@addr
  4278  000ADC  C0C0  F013         	movff	main@sdCardAddress+1,SDCARD_ReadBlock@addr+1
  4279  000AE0  C0C1  F014         	movff	main@sdCardAddress+2,SDCARD_ReadBlock@addr+2
  4280  000AE4  C0C2  F015         	movff	main@sdCardAddress+3,SDCARD_ReadBlock@addr+3
  4281  000AE8  0EF7               	movlw	low _sdCardBufferRed
  4282  000AEA  6E16               	movwf	SDCARD_ReadBlock@sdCardBuffer^0,c
  4283  000AEC  0E02               	movlw	high _sdCardBufferRed
  4284  000AEE  6E17               	movwf	(SDCARD_ReadBlock@sdCardBuffer+1)^0,c
  4285  000AF0  ECC1  F010         	call	_SDCARD_ReadBlock	;wreg free
  4286  000AF4                     
  4287                           ;main.c: 366:                         sdCardAddress += 512;
  4288  000AF4  0E00               	movlw	0
  4289  000AF6  0100               	movlb	0	; () banked
  4290  000AF8  27BF               	addwf	main@sdCardAddress& (0+255),f,b
  4291  000AFA  0E02               	movlw	2
  4292  000AFC  23C0               	addwfc	(main@sdCardAddress+1)& (0+255),f,b
  4293  000AFE  0E00               	movlw	0
  4294  000B00  23C1               	addwfc	(main@sdCardAddress+2)& (0+255),f,b
  4295  000B02  0E00               	movlw	0
  4296  000B04  23C2               	addwfc	(main@sdCardAddress+3)& (0+255),f,b
  4297  000B06                     
  4298                           ; BSR set to: 0
  4299                           ;main.c: 367:                         redBufferEmpty = 0;
  4300  000B06  0E00               	movlw	0
  4301  000B08  6FD2               	movwf	_redBufferEmpty& (0+255),b
  4302  000B0A                     
  4303                           ; BSR set to: 0
  4304                           ;main.c: 368:                         blocksRead++;
  4305  000B0A  2BB9               	incf	main@blocksRead& (0+255),f,b
  4306  000B0C                     l5506:
  4307                           
  4308                           ; BSR set to: 0
  4309                           ;main.c: 350:                 while(blocksRead <= numBlocksSampled){
  4310  000B0C  51B9               	movf	main@blocksRead& (0+255),w,b
  4311  000B0E  5DB4               	subwf	main@numBlocksSampled& (0+255),w,b
  4312  000B10  0E00               	movlw	0
  4313  000B12  59B5               	subwfb	(main@numBlocksSampled+1)& (0+255),w,b
  4314  000B14  B0D8               	btfsc	status,0,c
  4315  000B16  EF8F  F005         	goto	u4601
  4316  000B1A  EF91  F005         	goto	u4600
  4317  000B1E                     u4601:
  4318  000B1E  EF2F  F005         	goto	l5480
  4319  000B22                     u4600:
  4320  000B22                     
  4321                           ; BSR set to: 0
  4322                           ;main.c: 371:                 EPWM1_LoadDutyValue(0);
  4323  000B22  0E00               	movlw	0
  4324  000B24  6E12               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^0,c
  4325  000B26  0E00               	movlw	0
  4326  000B28  6E11               	movwf	EPWM1_LoadDutyValue@dutyValue^0,c
  4327  000B2A  EC17  F014         	call	_EPWM1_LoadDutyValue	;wreg free
  4328  000B2E                     
  4329                           ;main.c: 372:                 pullBuffer = 0;
  4330  000B2E  0E00               	movlw	0
  4331  000B30  6E4B               	movwf	_pullBuffer^0,c
  4332                           
  4333                           ;main.c: 373:                 break;
  4334  000B32  EF67  F000         	goto	l5250
  4335  000B36                     l5512:
  4336                           
  4337                           ; BSR set to: 0
  4338                           ;main.c: 379:     printf("Unknown key %c\r\n",cmd);
  4339  000B36  0E39               	movlw	low STR_92
  4340  000B38  6F9D               	movwf	printf@fmt& (0+255),b
  4341  000B3A  0EFF               	movlw	high STR_92
  4342  000B3C  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4343  000B3E  C0BC  F09F         	movff	main@cmd,?_printf+2
  4344  000B42  6BA0               	clrf	(?_printf+3)& (0+255),b
  4345  000B44  EC72  F014         	call	_printf	;wreg free
  4346                           
  4347                           ;main.c: 380:     break;
  4348  000B48  EF67  F000         	goto	l5250
  4349  000B4C                     l5516:
  4350                           
  4351                           ; BSR set to: 0
  4352  000B4C  51BC               	movf	main@cmd& (0+255),w,b
  4353  000B4E  6FB1               	movwf	??_main& (0+255),b
  4354  000B50  6BB2               	clrf	(??_main+1)& (0+255),b
  4355                           
  4356                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4357                           ; Switch size 1, requested type "simple"
  4358                           ; Number of cases is 1, Range of values is 0 to 0
  4359                           ; switch strategies available:
  4360                           ; Name         Instructions Cycles
  4361                           ; simple_byte            4     3 (average)
  4362                           ;	Chosen strategy is simple_byte
  4363  000B52  51B2               	movf	(??_main+1)& (0+255),w,b
  4364  000B54  0A00               	xorlw	0	; case 0
  4365  000B56  B4D8               	btfsc	status,2,c
  4366  000B58  EFB0  F005         	goto	l5678
  4367  000B5C  EF9B  F005         	goto	l5512
  4368  000B60                     l5678:
  4369                           
  4370                           ; BSR set to: 0
  4371                           ; Switch size 1, requested type "simple"
  4372                           ; Number of cases is 14, Range of values is 43 to 122
  4373                           ; switch strategies available:
  4374                           ; Name         Instructions Cycles
  4375                           ; simple_byte           43    22 (average)
  4376                           ;	Chosen strategy is simple_byte
  4377  000B60  51B1               	movf	??_main& (0+255),w,b
  4378  000B62  0A2B               	xorlw	43	; case 43
  4379  000B64  B4D8               	btfsc	status,2,c
  4380  000B66  EFFE  F002         	goto	l5364
  4381  000B6A  0A06               	xorlw	6	; case 45
  4382  000B6C  B4D8               	btfsc	status,2,c
  4383  000B6E  EF04  F003         	goto	l5366
  4384  000B72  0A12               	xorlw	18	; case 63
  4385  000B74  B4D8               	btfsc	status,2,c
  4386  000B76  EF77  F000         	goto	l5254
  4387  000B7A  0A7E               	xorlw	126	; case 65
  4388  000B7C  B4D8               	btfsc	status,2,c
  4389  000B7E  EF9A  F001         	goto	l5294
  4390  000B82  0A11               	xorlw	17	; case 80
  4391  000B84  B4D8               	btfsc	status,2,c
  4392  000B86  EFF5  F004         	goto	l5462
  4393  000B8A  0A07               	xorlw	7	; case 87
  4394  000B8C  B4D8               	btfsc	status,2,c
  4395  000B8E  EF1B  F003         	goto	l5372
  4396  000B92  0A0D               	xorlw	13	; case 90
  4397  000B94  B4D8               	btfsc	status,2,c
  4398  000B96  EF42  F001         	goto	l5258
  4399  000B9A  0A3B               	xorlw	59	; case 97
  4400  000B9C  B4D8               	btfsc	status,2,c
  4401  000B9E  EF9A  F001         	goto	l5294
  4402  000BA2  0A08               	xorlw	8	; case 105
  4403  000BA4  B4D8               	btfsc	status,2,c
  4404  000BA6  EF77  F001         	goto	l5282
  4405  000BAA  0A05               	xorlw	5	; case 108
  4406  000BAC  B4D8               	btfsc	status,2,c
  4407  000BAE  EF4B  F002         	goto	l5330
  4408  000BB2  0A03               	xorlw	3	; case 111
  4409  000BB4  B4D8               	btfsc	status,2,c
  4410  000BB6  EF3A  F001         	goto	l5256
  4411  000BBA  0A1D               	xorlw	29	; case 114
  4412  000BBC  B4D8               	btfsc	status,2,c
  4413  000BBE  EFF8  F001         	goto	l5314
  4414  000BC2  0A01               	xorlw	1	; case 115
  4415  000BC4  B4D8               	btfsc	status,2,c
  4416  000BC6  EF22  F004         	goto	l5414
  4417  000BCA  0A09               	xorlw	9	; case 122
  4418  000BCC  B4D8               	btfsc	status,2,c
  4419  000BCE  EF5D  F001         	goto	l5270
  4420  000BD2  EF9B  F005         	goto	l5512
  4421  000BD6  EF27  F000         	goto	start
  4422  000BDA                     __end_of_main:
  4423                           	opt callstack 0
  4424                           
  4425 ;; *************** function _hexDumpBuffer *****************
  4426 ;; Defined at:
  4427 ;;		line 275 in file "sdCard.c"
  4428 ;; Parameters:    Size  Location     Type
  4429 ;;  sdCardBuffer    2   71[BANK0 ] PTR unsigned char 
  4430 ;;		 -> sdCardBuffer(512), 
  4431 ;; Auto vars:     Size  Location     Type
  4432 ;;  j               2   75[BANK0 ] int 
  4433 ;;  j               2   77[BANK0 ] int 
  4434 ;;  i               2   79[BANK0 ] unsigned short 
  4435 ;; Return value:  Size  Location     Type
  4436 ;;                  1    wreg      void 
  4437 ;; Registers used:
  4438 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4439 ;; Tracked objects:
  4440 ;;		On entry : 0/0
  4441 ;;		On exit  : 0/0
  4442 ;;		Unchanged: 0/0
  4443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4444 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4445 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4446 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4447 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4448 ;;Total ram usage:       10 bytes
  4449 ;; Hardware stack levels used:    1
  4450 ;; Hardware stack levels required when called:   13
  4451 ;; This function calls:
  4452 ;;		_printf
  4453 ;; This function is called by:
  4454 ;;		_main
  4455 ;; This function uses a non-reentrant model
  4456 ;;
  4457                           
  4458                           	psect	text1
  4459  001670                     __ptext1:
  4460                           	opt callstack 0
  4461  001670                     _hexDumpBuffer:
  4462                           	opt callstack 17
  4463  001670                     
  4464                           ;sdCard.c: 277:     uint16_t i;;sdCard.c: 279:     printf("\r\n\n");
  4465  001670  0EF1               	movlw	low STR_103
  4466  001672  0100               	movlb	0	; () banked
  4467  001674  6F9D               	movwf	printf@fmt& (0+255),b
  4468  001676  0EFF               	movlw	high STR_103
  4469  001678  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4470  00167A  EC72  F014         	call	_printf	;wreg free
  4471  00167E                     
  4472                           ;sdCard.c: 281:     for(i = 0; i < 512; i++) {
  4473  00167E  0E00               	movlw	0
  4474  001680  0100               	movlb	0	; () banked
  4475  001682  6FB0               	movwf	(hexDumpBuffer@i+1)& (0+255),b
  4476  001684  0E00               	movlw	0
  4477  001686  6FAF               	movwf	hexDumpBuffer@i& (0+255),b
  4478  001688                     l5180:
  4479                           
  4480                           ; BSR set to: 0
  4481                           ;sdCard.c: 282:       if(i != 0 && i % 8 == 0) printf(" ");
  4482  001688  51AF               	movf	hexDumpBuffer@i& (0+255),w,b
  4483  00168A  11B0               	iorwf	(hexDumpBuffer@i+1)& (0+255),w,b
  4484  00168C  B4D8               	btfsc	status,2,c
  4485  00168E  EF4B  F00B         	goto	u4281
  4486  001692  EF4D  F00B         	goto	u4280
  4487  001696                     u4281:
  4488  001696  EF62  F00B         	goto	l5186
  4489  00169A                     u4280:
  4490  00169A                     
  4491                           ; BSR set to: 0
  4492  00169A  0E07               	movlw	7
  4493  00169C  15AF               	andwf	hexDumpBuffer@i& (0+255),w,b
  4494  00169E  6FA9               	movwf	??_hexDumpBuffer& (0+255),b
  4495  0016A0  0E00               	movlw	0
  4496  0016A2  15B0               	andwf	(hexDumpBuffer@i+1)& (0+255),w,b
  4497  0016A4  6FAA               	movwf	(??_hexDumpBuffer+1)& (0+255),b
  4498  0016A6  51A9               	movf	??_hexDumpBuffer& (0+255),w,b
  4499  0016A8  11AA               	iorwf	(??_hexDumpBuffer+1)& (0+255),w,b
  4500  0016AA  A4D8               	btfss	status,2,c
  4501  0016AC  EF5A  F00B         	goto	u4291
  4502  0016B0  EF5C  F00B         	goto	u4290
  4503  0016B4                     u4291:
  4504  0016B4  EF62  F00B         	goto	l5186
  4505  0016B8                     u4290:
  4506  0016B8                     
  4507                           ; BSR set to: 0
  4508  0016B8  0E6A               	movlw	low (STR_42+15)
  4509  0016BA  6F9D               	movwf	printf@fmt& (0+255),b
  4510  0016BC  0EFF               	movlw	high (STR_42+15)
  4511  0016BE  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4512  0016C0  EC72  F014         	call	_printf	;wreg free
  4513  0016C4                     l5186:
  4514                           
  4515                           ;sdCard.c: 283:       if(i != 0 && i % 16 == 0) {
  4516  0016C4  0100               	movlb	0	; () banked
  4517  0016C6  51AF               	movf	hexDumpBuffer@i& (0+255),w,b
  4518  0016C8  11B0               	iorwf	(hexDumpBuffer@i+1)& (0+255),w,b
  4519  0016CA  B4D8               	btfsc	status,2,c
  4520  0016CC  EF6A  F00B         	goto	u4301
  4521  0016D0  EF6C  F00B         	goto	u4300
  4522  0016D4                     u4301:
  4523  0016D4  EFC5  F00B         	goto	l339
  4524  0016D8                     u4300:
  4525  0016D8                     
  4526                           ; BSR set to: 0
  4527  0016D8  0E0F               	movlw	15
  4528  0016DA  15AF               	andwf	hexDumpBuffer@i& (0+255),w,b
  4529  0016DC  6FA9               	movwf	??_hexDumpBuffer& (0+255),b
  4530  0016DE  0E00               	movlw	0
  4531  0016E0  15B0               	andwf	(hexDumpBuffer@i+1)& (0+255),w,b
  4532  0016E2  6FAA               	movwf	(??_hexDumpBuffer+1)& (0+255),b
  4533  0016E4  51A9               	movf	??_hexDumpBuffer& (0+255),w,b
  4534  0016E6  11AA               	iorwf	(??_hexDumpBuffer+1)& (0+255),w,b
  4535  0016E8  A4D8               	btfss	status,2,c
  4536  0016EA  EF79  F00B         	goto	u4311
  4537  0016EE  EF7B  F00B         	goto	u4310
  4538  0016F2                     u4311:
  4539  0016F2  EFC5  F00B         	goto	l339
  4540  0016F6                     u4310:
  4541  0016F6                     
  4542                           ; BSR set to: 0
  4543                           ;sdCard.c: 284:           printf("  ");
  4544  0016F6  0E69               	movlw	low (STR_42+14)
  4545  0016F8  6F9D               	movwf	printf@fmt& (0+255),b
  4546  0016FA  0EFF               	movlw	high (STR_42+14)
  4547  0016FC  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4548  0016FE  EC72  F014         	call	_printf	;wreg free
  4549  001702                     
  4550                           ;sdCard.c: 285:           for(int j = i - 16; j < i; j++) {
  4551  001702  0EF0               	movlw	240
  4552  001704  0100               	movlb	0	; () banked
  4553  001706  25AF               	addwf	hexDumpBuffer@i& (0+255),w,b
  4554  001708  6FAB               	movwf	hexDumpBuffer@j& (0+255),b
  4555  00170A  0EFF               	movlw	255
  4556  00170C  21B0               	addwfc	(hexDumpBuffer@i+1)& (0+255),w,b
  4557  00170E  6FAC               	movwf	(hexDumpBuffer@j+1)& (0+255),b
  4558  001710  EFB4  F00B         	goto	l5202
  4559  001714                     l5194:
  4560                           
  4561                           ; BSR set to: 0
  4562                           ;sdCard.c: 286:               if(sdCardBuffer[j] < 32) {
  4563  001714  51AB               	movf	hexDumpBuffer@j& (0+255),w,b
  4564  001716  25A7               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  4565  001718  6ED9               	movwf	fsr2l,c
  4566  00171A  51AC               	movf	(hexDumpBuffer@j+1)& (0+255),w,b
  4567  00171C  21A8               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  4568  00171E  6EDA               	movwf	fsr2h,c
  4569  001720  0E20               	movlw	32
  4570  001722  60DF               	cpfslt	indf2,c
  4571  001724  EF96  F00B         	goto	u4321
  4572  001728  EF98  F00B         	goto	u4320
  4573  00172C                     u4321:
  4574  00172C  EFA0  F00B         	goto	l5198
  4575  001730                     u4320:
  4576  001730                     
  4577                           ; BSR set to: 0
  4578                           ;sdCard.c: 287:                 printf(".");
  4579  001730  0EFB               	movlw	low STR_106
  4580  001732  6F9D               	movwf	printf@fmt& (0+255),b
  4581  001734  0EFF               	movlw	high STR_106
  4582  001736  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4583  001738  EC72  F014         	call	_printf	;wreg free
  4584                           
  4585                           ;sdCard.c: 288:               } else {
  4586  00173C  EFB1  F00B         	goto	l5200
  4587  001740                     l5198:
  4588                           
  4589                           ; BSR set to: 0
  4590                           ;sdCard.c: 289:                 printf("%c", sdCardBuffer[j]);
  4591  001740  0EF5               	movlw	low STR_107
  4592  001742  6F9D               	movwf	printf@fmt& (0+255),b
  4593  001744  0EFF               	movlw	high STR_107
  4594  001746  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4595  001748  51AB               	movf	hexDumpBuffer@j& (0+255),w,b
  4596  00174A  25A7               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  4597  00174C  6ED9               	movwf	fsr2l,c
  4598  00174E  51AC               	movf	(hexDumpBuffer@j+1)& (0+255),w,b
  4599  001750  21A8               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  4600  001752  6EDA               	movwf	fsr2h,c
  4601  001754  50DF               	movf	indf2,w,c
  4602  001756  6FA9               	movwf	??_hexDumpBuffer& (0+255),b
  4603  001758  51A9               	movf	??_hexDumpBuffer& (0+255),w,b
  4604  00175A  6F9F               	movwf	(?_printf+2)& (0+255),b
  4605  00175C  6BA0               	clrf	(?_printf+3)& (0+255),b
  4606  00175E  EC72  F014         	call	_printf	;wreg free
  4607  001762                     l5200:
  4608                           
  4609                           ;sdCard.c: 291:           }
  4610  001762  0100               	movlb	0	; () banked
  4611  001764  4BAB               	infsnz	hexDumpBuffer@j& (0+255),f,b
  4612  001766  2BAC               	incf	(hexDumpBuffer@j+1)& (0+255),f,b
  4613  001768                     l5202:
  4614                           
  4615                           ; BSR set to: 0
  4616  001768  51AF               	movf	hexDumpBuffer@i& (0+255),w,b
  4617  00176A  5DAB               	subwf	hexDumpBuffer@j& (0+255),w,b
  4618  00176C  51B0               	movf	(hexDumpBuffer@i+1)& (0+255),w,b
  4619  00176E  59AC               	subwfb	(hexDumpBuffer@j+1)& (0+255),w,b
  4620  001770  A0D8               	btfss	status,0,c
  4621  001772  EFBD  F00B         	goto	u4331
  4622  001776  EFBF  F00B         	goto	u4330
  4623  00177A                     u4331:
  4624  00177A  EF8A  F00B         	goto	l5194
  4625  00177E                     u4330:
  4626  00177E                     
  4627                           ; BSR set to: 0
  4628                           ;sdCard.c: 292:           printf("\r\n");
  4629  00177E  0E88               	movlw	low (STR_41+12)
  4630  001780  6F9D               	movwf	printf@fmt& (0+255),b
  4631  001782  0EFF               	movlw	high (STR_41+12)
  4632  001784  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4633  001786  EC72  F014         	call	_printf	;wreg free
  4634  00178A                     l339:
  4635                           
  4636                           ;sdCard.c: 295:       printf("%02x ", sdCardBuffer[i]);
  4637  00178A  0EDC               	movlw	low STR_109
  4638  00178C  0100               	movlb	0	; () banked
  4639  00178E  6F9D               	movwf	printf@fmt& (0+255),b
  4640  001790  0EFF               	movlw	high STR_109
  4641  001792  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4642  001794  51AF               	movf	hexDumpBuffer@i& (0+255),w,b
  4643  001796  25A7               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  4644  001798  6ED9               	movwf	fsr2l,c
  4645  00179A  51B0               	movf	(hexDumpBuffer@i+1)& (0+255),w,b
  4646  00179C  21A8               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  4647  00179E  6EDA               	movwf	fsr2h,c
  4648  0017A0  50DF               	movf	indf2,w,c
  4649  0017A2  6FA9               	movwf	??_hexDumpBuffer& (0+255),b
  4650  0017A4  51A9               	movf	??_hexDumpBuffer& (0+255),w,b
  4651  0017A6  6F9F               	movwf	(?_printf+2)& (0+255),b
  4652  0017A8  6BA0               	clrf	(?_printf+3)& (0+255),b
  4653  0017AA  EC72  F014         	call	_printf	;wreg free
  4654  0017AE                     
  4655                           ;sdCard.c: 296:     }
  4656  0017AE  0100               	movlb	0	; () banked
  4657  0017B0  4BAF               	infsnz	hexDumpBuffer@i& (0+255),f,b
  4658  0017B2  2BB0               	incf	(hexDumpBuffer@i+1)& (0+255),f,b
  4659  0017B4                     
  4660                           ; BSR set to: 0
  4661  0017B4  0E02               	movlw	2
  4662  0017B6  5DB0               	subwf	(hexDumpBuffer@i+1)& (0+255),w,b
  4663  0017B8  A0D8               	btfss	status,0,c
  4664  0017BA  EFE1  F00B         	goto	u4341
  4665  0017BE  EFE3  F00B         	goto	u4340
  4666  0017C2                     u4341:
  4667  0017C2  EF44  F00B         	goto	l5180
  4668  0017C6                     u4340:
  4669  0017C6                     
  4670                           ; BSR set to: 0
  4671                           ;sdCard.c: 298:     printf("   ");
  4672  0017C6  0E68               	movlw	low (STR_42+13)
  4673  0017C8  6F9D               	movwf	printf@fmt& (0+255),b
  4674  0017CA  0EFF               	movlw	high (STR_42+13)
  4675  0017CC  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4676  0017CE  EC72  F014         	call	_printf	;wreg free
  4677  0017D2                     
  4678                           ;sdCard.c: 299:     for(int j = i - 16; j < i; j++) {
  4679  0017D2  0EF0               	movlw	240
  4680  0017D4  0100               	movlb	0	; () banked
  4681  0017D6  25AF               	addwf	hexDumpBuffer@i& (0+255),w,b
  4682  0017D8  6FAD               	movwf	hexDumpBuffer@j_621& (0+255),b
  4683  0017DA  0EFF               	movlw	255
  4684  0017DC  21B0               	addwfc	(hexDumpBuffer@i+1)& (0+255),w,b
  4685  0017DE  6FAE               	movwf	(hexDumpBuffer@j_621+1)& (0+255),b
  4686  0017E0  EF1C  F00C         	goto	l5222
  4687  0017E4                     l5214:
  4688                           
  4689                           ; BSR set to: 0
  4690                           ;sdCard.c: 300:         if(sdCardBuffer[j] < 32) {
  4691  0017E4  51AD               	movf	hexDumpBuffer@j_621& (0+255),w,b
  4692  0017E6  25A7               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  4693  0017E8  6ED9               	movwf	fsr2l,c
  4694  0017EA  51AE               	movf	(hexDumpBuffer@j_621+1)& (0+255),w,b
  4695  0017EC  21A8               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  4696  0017EE  6EDA               	movwf	fsr2h,c
  4697  0017F0  0E20               	movlw	32
  4698  0017F2  60DF               	cpfslt	indf2,c
  4699  0017F4  EFFE  F00B         	goto	u4351
  4700  0017F8  EF00  F00C         	goto	u4350
  4701  0017FC                     u4351:
  4702  0017FC  EF08  F00C         	goto	l5218
  4703  001800                     u4350:
  4704  001800                     
  4705                           ; BSR set to: 0
  4706                           ;sdCard.c: 301:           printf(".");
  4707  001800  0EFB               	movlw	low STR_106
  4708  001802  6F9D               	movwf	printf@fmt& (0+255),b
  4709  001804  0EFF               	movlw	high STR_106
  4710  001806  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4711  001808  EC72  F014         	call	_printf	;wreg free
  4712                           
  4713                           ;sdCard.c: 302:         } else {
  4714  00180C  EF19  F00C         	goto	l5220
  4715  001810                     l5218:
  4716                           
  4717                           ; BSR set to: 0
  4718                           ;sdCard.c: 303:           printf("%c", sdCardBuffer[j]);
  4719  001810  0EF5               	movlw	low STR_107
  4720  001812  6F9D               	movwf	printf@fmt& (0+255),b
  4721  001814  0EFF               	movlw	high STR_107
  4722  001816  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4723  001818  51AD               	movf	hexDumpBuffer@j_621& (0+255),w,b
  4724  00181A  25A7               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  4725  00181C  6ED9               	movwf	fsr2l,c
  4726  00181E  51AE               	movf	(hexDumpBuffer@j_621+1)& (0+255),w,b
  4727  001820  21A8               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  4728  001822  6EDA               	movwf	fsr2h,c
  4729  001824  50DF               	movf	indf2,w,c
  4730  001826  6FA9               	movwf	??_hexDumpBuffer& (0+255),b
  4731  001828  51A9               	movf	??_hexDumpBuffer& (0+255),w,b
  4732  00182A  6F9F               	movwf	(?_printf+2)& (0+255),b
  4733  00182C  6BA0               	clrf	(?_printf+3)& (0+255),b
  4734  00182E  EC72  F014         	call	_printf	;wreg free
  4735  001832                     l5220:
  4736                           
  4737                           ;sdCard.c: 305:     }
  4738  001832  0100               	movlb	0	; () banked
  4739  001834  4BAD               	infsnz	hexDumpBuffer@j_621& (0+255),f,b
  4740  001836  2BAE               	incf	(hexDumpBuffer@j_621+1)& (0+255),f,b
  4741  001838                     l5222:
  4742                           
  4743                           ; BSR set to: 0
  4744  001838  51AF               	movf	hexDumpBuffer@i& (0+255),w,b
  4745  00183A  5DAD               	subwf	hexDumpBuffer@j_621& (0+255),w,b
  4746  00183C  51B0               	movf	(hexDumpBuffer@i+1)& (0+255),w,b
  4747  00183E  59AE               	subwfb	(hexDumpBuffer@j_621+1)& (0+255),w,b
  4748  001840  A0D8               	btfss	status,0,c
  4749  001842  EF25  F00C         	goto	u4361
  4750  001846  EF27  F00C         	goto	u4360
  4751  00184A                     u4361:
  4752  00184A  EFF2  F00B         	goto	l5214
  4753  00184E                     u4360:
  4754  00184E                     
  4755                           ; BSR set to: 0
  4756                           ;sdCard.c: 306:     printf("\r\n");
  4757  00184E  0E88               	movlw	low (STR_41+12)
  4758  001850  6F9D               	movwf	printf@fmt& (0+255),b
  4759  001852  0EFF               	movlw	high (STR_41+12)
  4760  001854  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4761  001856  EC72  F014         	call	_printf	;wreg free
  4762  00185A  0012               	return		;funcret
  4763  00185C                     __end_of_hexDumpBuffer:
  4764                           	opt callstack 0
  4765                           
  4766 ;; *************** function _TMR0_WriteTimer *****************
  4767 ;; Defined at:
  4768 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  4769 ;; Parameters:    Size  Location     Type
  4770 ;;  timerVal        2   16[COMRAM] unsigned short 
  4771 ;; Auto vars:     Size  Location     Type
  4772 ;;		None
  4773 ;; Return value:  Size  Location     Type
  4774 ;;                  1    wreg      void 
  4775 ;; Registers used:
  4776 ;;		wreg, status,2
  4777 ;; Tracked objects:
  4778 ;;		On entry : 0/0
  4779 ;;		On exit  : 0/0
  4780 ;;		Unchanged: 0/0
  4781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4782 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4785 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4786 ;;Total ram usage:        2 bytes
  4787 ;; Hardware stack levels used:    1
  4788 ;; Hardware stack levels required when called:    4
  4789 ;; This function calls:
  4790 ;;		Nothing
  4791 ;; This function is called by:
  4792 ;;		_main
  4793 ;; This function uses a non-reentrant model
  4794 ;;
  4795                           
  4796                           	psect	text2
  4797  002A2E                     __ptext2:
  4798                           	opt callstack 0
  4799  002A2E                     _TMR0_WriteTimer:
  4800                           	opt callstack 26
  4801  002A2E                     
  4802                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  4803  002A2E  5012               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  4804  002A30  6ED7               	movwf	215,c	;volatile
  4805  002A32                     
  4806                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  4807  002A32  C011  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  4808  002A36  0012               	return		;funcret
  4809  002A38                     __end_of_TMR0_WriteTimer:
  4810                           	opt callstack 0
  4811                           
  4812 ;; *************** function _SYSTEM_Initialize *****************
  4813 ;; Defined at:
  4814 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4815 ;; Parameters:    Size  Location     Type
  4816 ;;		None
  4817 ;; Auto vars:     Size  Location     Type
  4818 ;;		None
  4819 ;; Return value:  Size  Location     Type
  4820 ;;                  1    wreg      void 
  4821 ;; Registers used:
  4822 ;;		wreg, status,2, status,0, cstack
  4823 ;; Tracked objects:
  4824 ;;		On entry : 0/0
  4825 ;;		On exit  : 0/0
  4826 ;;		Unchanged: 0/0
  4827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4832 ;;Total ram usage:        0 bytes
  4833 ;; Hardware stack levels used:    1
  4834 ;; Hardware stack levels required when called:    6
  4835 ;; This function calls:
  4836 ;;		_ADC_Initialize
  4837 ;;		_EPWM1_Initialize
  4838 ;;		_EUSART1_Initialize
  4839 ;;		_INTERRUPT_Initialize
  4840 ;;		_OSCILLATOR_Initialize
  4841 ;;		_PIN_MANAGER_Initialize
  4842 ;;		_SPI2_Initialize
  4843 ;;		_TMR0_Initialize
  4844 ;;		_TMR2_Initialize
  4845 ;; This function is called by:
  4846 ;;		_main
  4847 ;; This function uses a non-reentrant model
  4848 ;;
  4849                           
  4850                           	psect	text3
  4851  00290C                     __ptext3:
  4852                           	opt callstack 0
  4853  00290C                     _SYSTEM_Initialize:
  4854                           	opt callstack 24
  4855  00290C                     
  4856                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  4857  00290C  EC3A  F015         	call	_INTERRUPT_Initialize	;wreg free
  4858  002910                     
  4859                           ;mcc_generated_files/mcc.c: 54:     SPI2_Initialize();
  4860  002910  EC06  F015         	call	_SPI2_Initialize	;wreg free
  4861  002914                     
  4862                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  4863  002914  EC47  F014         	call	_PIN_MANAGER_Initialize	;wreg free
  4864  002918                     
  4865                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  4866  002918  ECCB  F014         	call	_OSCILLATOR_Initialize	;wreg free
  4867  00291C                     
  4868                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  4869  00291C  ECE6  F014         	call	_ADC_Initialize	;wreg free
  4870  002920                     
  4871                           ;mcc_generated_files/mcc.c: 58:     EPWM1_Initialize();
  4872  002920  ECAC  F014         	call	_EPWM1_Initialize	;wreg free
  4873  002924                     
  4874                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
  4875  002924  EC0F  F015         	call	_TMR2_Initialize	;wreg free
  4876  002928                     
  4877                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
  4878  002928  ECFD  F013         	call	_TMR0_Initialize	;wreg free
  4879  00292C                     
  4880                           ;mcc_generated_files/mcc.c: 61:     EUSART1_Initialize();
  4881  00292C  ECF8  F012         	call	_EUSART1_Initialize	;wreg free
  4882  002930  0012               	return		;funcret
  4883  002932                     __end_of_SYSTEM_Initialize:
  4884                           	opt callstack 0
  4885                           
  4886 ;; *************** function _TMR2_Initialize *****************
  4887 ;; Defined at:
  4888 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  4889 ;; Parameters:    Size  Location     Type
  4890 ;;		None
  4891 ;; Auto vars:     Size  Location     Type
  4892 ;;		None
  4893 ;; Return value:  Size  Location     Type
  4894 ;;                  1    wreg      void 
  4895 ;; Registers used:
  4896 ;;		wreg, status,2
  4897 ;; Tracked objects:
  4898 ;;		On entry : 0/0
  4899 ;;		On exit  : 0/0
  4900 ;;		Unchanged: 0/0
  4901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4906 ;;Total ram usage:        0 bytes
  4907 ;; Hardware stack levels used:    1
  4908 ;; Hardware stack levels required when called:    4
  4909 ;; This function calls:
  4910 ;;		Nothing
  4911 ;; This function is called by:
  4912 ;;		_SYSTEM_Initialize
  4913 ;; This function uses a non-reentrant model
  4914 ;;
  4915                           
  4916                           	psect	text4
  4917  002A1E                     __ptext4:
  4918                           	opt callstack 0
  4919  002A1E                     _TMR2_Initialize:
  4920                           	opt callstack 25
  4921  002A1E                     
  4922                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0x3F;
  4923  002A1E  0E3F               	movlw	63
  4924  002A20  6EBB               	movwf	187,c	;volatile
  4925                           
  4926                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  4927  002A22  0E00               	movlw	0
  4928  002A24  6EBC               	movwf	188,c	;volatile
  4929  002A26                     
  4930                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  4931  002A26  929E               	bcf	158,1,c	;volatile
  4932                           
  4933                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x05;
  4934  002A28  0E05               	movlw	5
  4935  002A2A  6EBA               	movwf	186,c	;volatile
  4936  002A2C  0012               	return		;funcret
  4937  002A2E                     __end_of_TMR2_Initialize:
  4938                           	opt callstack 0
  4939                           
  4940 ;; *************** function _TMR0_Initialize *****************
  4941 ;; Defined at:
  4942 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  4943 ;; Parameters:    Size  Location     Type
  4944 ;;		None
  4945 ;; Auto vars:     Size  Location     Type
  4946 ;;		None
  4947 ;; Return value:  Size  Location     Type
  4948 ;;                  1    wreg      void 
  4949 ;; Registers used:
  4950 ;;		wreg, status,2, status,0, cstack
  4951 ;; Tracked objects:
  4952 ;;		On entry : 0/0
  4953 ;;		On exit  : 0/0
  4954 ;;		Unchanged: 0/0
  4955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4958 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4959 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4960 ;;Total ram usage:        2 bytes
  4961 ;; Hardware stack levels used:    1
  4962 ;; Hardware stack levels required when called:    5
  4963 ;; This function calls:
  4964 ;;		_TMR0_SetInterruptHandler
  4965 ;; This function is called by:
  4966 ;;		_SYSTEM_Initialize
  4967 ;; This function uses a non-reentrant model
  4968 ;;
  4969                           
  4970                           	psect	text5
  4971  0027FA                     __ptext5:
  4972                           	opt callstack 0
  4973  0027FA                     _TMR0_Initialize:
  4974                           	opt callstack 24
  4975  0027FA                     
  4976                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  4977  0027FA  9CD5               	bcf	213,6,c	;volatile
  4978                           
  4979                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0xFF;
  4980  0027FC  68D7               	setf	215,c	;volatile
  4981  0027FE                     
  4982                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0xC1;
  4983  0027FE  0EC1               	movlw	193
  4984  002800  6ED6               	movwf	214,c	;volatile
  4985  002802                     
  4986                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  4987  002802  50D6               	movf	214,w,c	;volatile
  4988  002804  CFD7 F013          	movff	4055,??_TMR0_Initialize	;volatile
  4989  002808  6A14               	clrf	(??_TMR0_Initialize+1)^0,c
  4990  00280A  C013  F014         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  4991  00280E  6A13               	clrf	??_TMR0_Initialize^0,c
  4992  002810  1013               	iorwf	??_TMR0_Initialize^0,w,c
  4993  002812  6E45               	movwf	_timer0ReloadVal^0,c	;volatile
  4994  002814  5014               	movf	(??_TMR0_Initialize+1)^0,w,c
  4995  002816  6E46               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  4996  002818                     
  4997                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  4998  002818  94F2               	bcf	242,2,c	;volatile
  4999  00281A                     
  5000                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  5001  00281A  8AF2               	bsf	242,5,c	;volatile
  5002  00281C                     
  5003                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  5004  00281C  0E80               	movlw	low _TMR0_DefaultInterruptHandler
  5005  00281E  6E11               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  5006  002820  0E2A               	movlw	high _TMR0_DefaultInterruptHandler
  5007  002822  6E12               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  5008  002824  EC1C  F015         	call	_TMR0_SetInterruptHandler	;wreg free
  5009  002828                     
  5010                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x97;
  5011  002828  0E97               	movlw	151
  5012  00282A  6ED5               	movwf	213,c	;volatile
  5013  00282C  0012               	return		;funcret
  5014  00282E                     __end_of_TMR0_Initialize:
  5015                           	opt callstack 0
  5016                           
  5017 ;; *************** function _TMR0_SetInterruptHandler *****************
  5018 ;; Defined at:
  5019 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  5020 ;; Parameters:    Size  Location     Type
  5021 ;;  InterruptHan    2   16[COMRAM] PTR FTN()void 
  5022 ;;		 -> TMR0_DefaultInterruptHandler(1), myTMR0ISR(1), 
  5023 ;; Auto vars:     Size  Location     Type
  5024 ;;		None
  5025 ;; Return value:  Size  Location     Type
  5026 ;;                  1    wreg      void 
  5027 ;; Registers used:
  5028 ;;		wreg, status,2, status,0
  5029 ;; Tracked objects:
  5030 ;;		On entry : 0/0
  5031 ;;		On exit  : 0/0
  5032 ;;		Unchanged: 0/0
  5033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5034 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5037 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5038 ;;Total ram usage:        2 bytes
  5039 ;; Hardware stack levels used:    1
  5040 ;; Hardware stack levels required when called:    4
  5041 ;; This function calls:
  5042 ;;		Nothing
  5043 ;; This function is called by:
  5044 ;;		_main
  5045 ;;		_TMR0_Initialize
  5046 ;; This function uses a non-reentrant model
  5047 ;;
  5048                           
  5049                           	psect	text6
  5050  002A38                     __ptext6:
  5051                           	opt callstack 0
  5052  002A38                     _TMR0_SetInterruptHandler:
  5053                           	opt callstack 26
  5054  002A38                     
  5055                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  5056  002A38  C011  F0CD         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  5057  002A3C  C012  F0CE         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  5058  002A40  0012               	return		;funcret
  5059  002A42                     __end_of_TMR0_SetInterruptHandler:
  5060                           	opt callstack 0
  5061                           
  5062 ;; *************** function _SPI2_Initialize *****************
  5063 ;; Defined at:
  5064 ;;		line 62 in file "mcc_generated_files/spi2.c"
  5065 ;; Parameters:    Size  Location     Type
  5066 ;;		None
  5067 ;; Auto vars:     Size  Location     Type
  5068 ;;		None
  5069 ;; Return value:  Size  Location     Type
  5070 ;;                  1    wreg      void 
  5071 ;; Registers used:
  5072 ;;		wreg, status,2
  5073 ;; Tracked objects:
  5074 ;;		On entry : 0/0
  5075 ;;		On exit  : 0/0
  5076 ;;		Unchanged: 0/0
  5077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5082 ;;Total ram usage:        0 bytes
  5083 ;; Hardware stack levels used:    1
  5084 ;; Hardware stack levels required when called:    4
  5085 ;; This function calls:
  5086 ;;		Nothing
  5087 ;; This function is called by:
  5088 ;;		_SYSTEM_Initialize
  5089 ;; This function uses a non-reentrant model
  5090 ;;
  5091                           
  5092                           	psect	text7
  5093  002A0C                     __ptext7:
  5094                           	opt callstack 0
  5095  002A0C                     _SPI2_Initialize:
  5096                           	opt callstack 25
  5097  002A0C                     
  5098                           ;mcc_generated_files/spi2.c: 65:     SSP2STAT = 0x40;
  5099  002A0C  0E40               	movlw	64
  5100  002A0E  6E6D               	movwf	109,c	;volatile
  5101                           
  5102                           ;mcc_generated_files/spi2.c: 66:     SSP2CON1 = 0x01;
  5103  002A10  0E01               	movlw	1
  5104  002A12  6E6C               	movwf	108,c	;volatile
  5105                           
  5106                           ;mcc_generated_files/spi2.c: 67:     SSP2ADD = 0x01;
  5107  002A14  0E01               	movlw	1
  5108  002A16  6E6E               	movwf	110,c	;volatile
  5109  002A18                     
  5110                           ;mcc_generated_files/spi2.c: 68:     TRISBbits.TRISB1 = 0;
  5111  002A18  9293               	bcf	147,1,c	;volatile
  5112  002A1A                     
  5113                           ;mcc_generated_files/spi2.c: 69:     SSP2CON1bits.SSPEN = 0;
  5114  002A1A  9A6C               	bcf	108,5,c	;volatile
  5115  002A1C  0012               	return		;funcret
  5116  002A1E                     __end_of_SPI2_Initialize:
  5117                           	opt callstack 0
  5118                           
  5119 ;; *************** function _PIN_MANAGER_Initialize *****************
  5120 ;; Defined at:
  5121 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5122 ;; Parameters:    Size  Location     Type
  5123 ;;		None
  5124 ;; Auto vars:     Size  Location     Type
  5125 ;;		None
  5126 ;; Return value:  Size  Location     Type
  5127 ;;                  1    wreg      void 
  5128 ;; Registers used:
  5129 ;;		wreg, status,2
  5130 ;; Tracked objects:
  5131 ;;		On entry : 0/0
  5132 ;;		On exit  : 0/0
  5133 ;;		Unchanged: 0/0
  5134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5139 ;;Total ram usage:        0 bytes
  5140 ;; Hardware stack levels used:    1
  5141 ;; Hardware stack levels required when called:    4
  5142 ;; This function calls:
  5143 ;;		Nothing
  5144 ;; This function is called by:
  5145 ;;		_SYSTEM_Initialize
  5146 ;; This function uses a non-reentrant model
  5147 ;;
  5148                           
  5149                           	psect	text8
  5150  00288E                     __ptext8:
  5151                           	opt callstack 0
  5152  00288E                     _PIN_MANAGER_Initialize:
  5153                           	opt callstack 25
  5154  00288E                     
  5155                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  5156  00288E  0E00               	movlw	0
  5157  002890  6E89               	movwf	137,c	;volatile
  5158                           
  5159                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  5160  002892  0E00               	movlw	0
  5161  002894  6E8A               	movwf	138,c	;volatile
  5162                           
  5163                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  5164  002896  0E00               	movlw	0
  5165  002898  6E8B               	movwf	139,c	;volatile
  5166  00289A                     
  5167                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  5168  00289A  6892               	setf	146,c	;volatile
  5169                           
  5170                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xE5;
  5171  00289C  0EE5               	movlw	229
  5172  00289E  6E93               	movwf	147,c	;volatile
  5173                           
  5174                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xB8;
  5175  0028A0  0EB8               	movlw	184
  5176  0028A2  6E94               	movwf	148,c	;volatile
  5177                           
  5178                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  5179  0028A4  0E3C               	movlw	60
  5180  0028A6  010F               	movlb	15	; () banked
  5181  0028A8  6F3A               	movwf	58,b	;volatile
  5182                           
  5183                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x31;
  5184  0028AA  0E31               	movlw	49
  5185  0028AC  6F39               	movwf	57,b	;volatile
  5186                           
  5187                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  5188  0028AE  0E2F               	movlw	47
  5189  0028B0  6F38               	movwf	56,b	;volatile
  5190                           
  5191                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  5192  0028B2  0E00               	movlw	0
  5193  0028B4  6E61               	movwf	97,c	;volatile
  5194  0028B6                     
  5195                           ; BSR set to: 15
  5196                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  5197  0028B6  8EF1               	bsf	241,7,c	;volatile
  5198  0028B8                     
  5199                           ; BSR set to: 15
  5200  0028B8  0012               	return		;funcret
  5201  0028BA                     __end_of_PIN_MANAGER_Initialize:
  5202                           	opt callstack 0
  5203                           
  5204 ;; *************** function _OSCILLATOR_Initialize *****************
  5205 ;; Defined at:
  5206 ;;		line 64 in file "mcc_generated_files/mcc.c"
  5207 ;; Parameters:    Size  Location     Type
  5208 ;;		None
  5209 ;; Auto vars:     Size  Location     Type
  5210 ;;		None
  5211 ;; Return value:  Size  Location     Type
  5212 ;;                  1    wreg      void 
  5213 ;; Registers used:
  5214 ;;		wreg, status,2
  5215 ;; Tracked objects:
  5216 ;;		On entry : 0/0
  5217 ;;		On exit  : 0/0
  5218 ;;		Unchanged: 0/0
  5219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5224 ;;Total ram usage:        0 bytes
  5225 ;; Hardware stack levels used:    1
  5226 ;; Hardware stack levels required when called:    4
  5227 ;; This function calls:
  5228 ;;		Nothing
  5229 ;; This function is called by:
  5230 ;;		_SYSTEM_Initialize
  5231 ;; This function uses a non-reentrant model
  5232 ;;
  5233                           
  5234                           	psect	text9
  5235  002996                     __ptext9:
  5236                           	opt callstack 0
  5237  002996                     _OSCILLATOR_Initialize:
  5238                           	opt callstack 25
  5239  002996                     
  5240                           ;mcc_generated_files/mcc.c: 67:     OSCCON = 0x70;
  5241  002996  0E70               	movlw	112
  5242  002998  6ED3               	movwf	211,c	;volatile
  5243                           
  5244                           ;mcc_generated_files/mcc.c: 69:     OSCCON2 = 0x04;
  5245  00299A  0E04               	movlw	4
  5246  00299C  6ED2               	movwf	210,c	;volatile
  5247                           
  5248                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x40;
  5249  00299E  0E40               	movlw	64
  5250  0029A0  6E9B               	movwf	155,c	;volatile
  5251  0029A2                     l207:
  5252                           
  5253                           ;mcc_generated_files/mcc.c: 73:     while(PLLRDY == 0)
  5254  0029A2  AED2               	btfss	4050,7,c	;volatile
  5255  0029A4  EFD6  F014         	goto	u2711
  5256  0029A8  EFD8  F014         	goto	u2710
  5257  0029AC                     u2711:
  5258  0029AC  EFD1  F014         	goto	l207
  5259  0029B0                     u2710:
  5260  0029B0  0012               	return		;funcret
  5261  0029B2                     __end_of_OSCILLATOR_Initialize:
  5262                           	opt callstack 0
  5263                           
  5264 ;; *************** function _INTERRUPT_Initialize *****************
  5265 ;; Defined at:
  5266 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5267 ;; Parameters:    Size  Location     Type
  5268 ;;		None
  5269 ;; Auto vars:     Size  Location     Type
  5270 ;;		None
  5271 ;; Return value:  Size  Location     Type
  5272 ;;                  1    wreg      void 
  5273 ;; Registers used:
  5274 ;;		None
  5275 ;; Tracked objects:
  5276 ;;		On entry : 0/0
  5277 ;;		On exit  : 0/0
  5278 ;;		Unchanged: 0/0
  5279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5284 ;;Total ram usage:        0 bytes
  5285 ;; Hardware stack levels used:    1
  5286 ;; Hardware stack levels required when called:    4
  5287 ;; This function calls:
  5288 ;;		Nothing
  5289 ;; This function is called by:
  5290 ;;		_SYSTEM_Initialize
  5291 ;; This function uses a non-reentrant model
  5292 ;;
  5293                           
  5294                           	psect	text10
  5295  002A74                     __ptext10:
  5296                           	opt callstack 0
  5297  002A74                     _INTERRUPT_Initialize:
  5298                           	opt callstack 25
  5299  002A74                     
  5300                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  5301  002A74  9ED0               	bcf	208,7,c	;volatile
  5302  002A76  0012               	return		;funcret
  5303  002A78                     __end_of_INTERRUPT_Initialize:
  5304                           	opt callstack 0
  5305                           
  5306 ;; *************** function _EUSART1_Initialize *****************
  5307 ;; Defined at:
  5308 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  5309 ;; Parameters:    Size  Location     Type
  5310 ;;		None
  5311 ;; Auto vars:     Size  Location     Type
  5312 ;;		None
  5313 ;; Return value:  Size  Location     Type
  5314 ;;                  1    wreg      void 
  5315 ;; Registers used:
  5316 ;;		wreg, status,2, status,0, cstack
  5317 ;; Tracked objects:
  5318 ;;		On entry : 0/0
  5319 ;;		On exit  : 0/0
  5320 ;;		Unchanged: 0/0
  5321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5326 ;;Total ram usage:        0 bytes
  5327 ;; Hardware stack levels used:    1
  5328 ;; Hardware stack levels required when called:    5
  5329 ;; This function calls:
  5330 ;;		_EUSART1_SetErrorHandler
  5331 ;;		_EUSART1_SetFramingErrorHandler
  5332 ;;		_EUSART1_SetOverrunErrorHandler
  5333 ;; This function is called by:
  5334 ;;		_SYSTEM_Initialize
  5335 ;; This function uses a non-reentrant model
  5336 ;;
  5337                           
  5338                           	psect	text11
  5339  0025F0                     __ptext11:
  5340                           	opt callstack 0
  5341  0025F0                     _EUSART1_Initialize:
  5342                           	opt callstack 24
  5343  0025F0                     
  5344                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  5345  0025F0  0E08               	movlw	8
  5346  0025F2  6EB8               	movwf	184,c	;volatile
  5347                           
  5348                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  5349  0025F4  0E90               	movlw	144
  5350  0025F6  6EAB               	movwf	171,c	;volatile
  5351                           
  5352                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  5353  0025F8  0E24               	movlw	36
  5354  0025FA  6EAC               	movwf	172,c	;volatile
  5355                           
  5356                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  5357  0025FC  0E82               	movlw	130
  5358  0025FE  6EAF               	movwf	175,c	;volatile
  5359                           
  5360                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  5361  002600  0E06               	movlw	6
  5362  002602  6EB0               	movwf	176,c	;volatile
  5363  002604                     
  5364                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  5365  002604  0E00               	movlw	0
  5366  002606  6E11               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  5367  002608  0E00               	movlw	0
  5368  00260A  6E12               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  5369  00260C  EC26  F015         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  5370  002610                     
  5371                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  5372  002610  0E00               	movlw	0
  5373  002612  6E11               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  5374  002614  0E00               	movlw	0
  5375  002616  6E12               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  5376  002618  EC21  F015         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  5377  00261C                     
  5378                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  5379  00261C  0E00               	movlw	0
  5380  00261E  6E11               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  5381  002620  0E00               	movlw	0
  5382  002622  6E12               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  5383  002624  EC2B  F015         	call	_EUSART1_SetErrorHandler	;wreg free
  5384  002628                     
  5385                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  5386  002628  0E00               	movlw	0
  5387  00262A  0100               	movlb	0	; () banked
  5388  00262C  6FCF               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  5389  00262E                     
  5390                           ; BSR set to: 0
  5391  00262E  0012               	return		;funcret
  5392  002630                     __end_of_EUSART1_Initialize:
  5393                           	opt callstack 0
  5394                           
  5395 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  5396 ;; Defined at:
  5397 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  5398 ;; Parameters:    Size  Location     Type
  5399 ;;  interruptHan    2   16[COMRAM] PTR FTN()void 
  5400 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  5401 ;; Auto vars:     Size  Location     Type
  5402 ;;		None
  5403 ;; Return value:  Size  Location     Type
  5404 ;;                  1    wreg      void 
  5405 ;; Registers used:
  5406 ;;		wreg, status,2, status,0
  5407 ;; Tracked objects:
  5408 ;;		On entry : 0/0
  5409 ;;		On exit  : 0/0
  5410 ;;		Unchanged: 0/0
  5411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5412 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5415 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5416 ;;Total ram usage:        2 bytes
  5417 ;; Hardware stack levels used:    1
  5418 ;; Hardware stack levels required when called:    4
  5419 ;; This function calls:
  5420 ;;		Nothing
  5421 ;; This function is called by:
  5422 ;;		_EUSART1_Initialize
  5423 ;; This function uses a non-reentrant model
  5424 ;;
  5425                           
  5426                           	psect	text12
  5427  002A42                     __ptext12:
  5428                           	opt callstack 0
  5429  002A42                     _EUSART1_SetOverrunErrorHandler:
  5430                           	opt callstack 24
  5431  002A42                     
  5432                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  5433  002A42  C011  F0C9         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  5434  002A46  C012  F0CA         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  5435  002A4A  0012               	return		;funcret
  5436  002A4C                     __end_of_EUSART1_SetOverrunErrorHandler:
  5437                           	opt callstack 0
  5438                           
  5439 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  5440 ;; Defined at:
  5441 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  5442 ;; Parameters:    Size  Location     Type
  5443 ;;  interruptHan    2   16[COMRAM] PTR FTN()void 
  5444 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  5445 ;; Auto vars:     Size  Location     Type
  5446 ;;		None
  5447 ;; Return value:  Size  Location     Type
  5448 ;;                  1    wreg      void 
  5449 ;; Registers used:
  5450 ;;		wreg, status,2, status,0
  5451 ;; Tracked objects:
  5452 ;;		On entry : 0/0
  5453 ;;		On exit  : 0/0
  5454 ;;		Unchanged: 0/0
  5455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5456 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5459 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5460 ;;Total ram usage:        2 bytes
  5461 ;; Hardware stack levels used:    1
  5462 ;; Hardware stack levels required when called:    4
  5463 ;; This function calls:
  5464 ;;		Nothing
  5465 ;; This function is called by:
  5466 ;;		_EUSART1_Initialize
  5467 ;; This function uses a non-reentrant model
  5468 ;;
  5469                           
  5470                           	psect	text13
  5471  002A4C                     __ptext13:
  5472                           	opt callstack 0
  5473  002A4C                     _EUSART1_SetFramingErrorHandler:
  5474                           	opt callstack 24
  5475  002A4C                     
  5476                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  5477  002A4C  C011  F0CB         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  5478  002A50  C012  F0CC         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  5479  002A54  0012               	return		;funcret
  5480  002A56                     __end_of_EUSART1_SetFramingErrorHandler:
  5481                           	opt callstack 0
  5482                           
  5483 ;; *************** function _EUSART1_SetErrorHandler *****************
  5484 ;; Defined at:
  5485 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  5486 ;; Parameters:    Size  Location     Type
  5487 ;;  interruptHan    2   16[COMRAM] PTR FTN()void 
  5488 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  5489 ;; Auto vars:     Size  Location     Type
  5490 ;;		None
  5491 ;; Return value:  Size  Location     Type
  5492 ;;                  1    wreg      void 
  5493 ;; Registers used:
  5494 ;;		wreg, status,2, status,0
  5495 ;; Tracked objects:
  5496 ;;		On entry : 0/0
  5497 ;;		On exit  : 0/0
  5498 ;;		Unchanged: 0/0
  5499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5500 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5503 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5504 ;;Total ram usage:        2 bytes
  5505 ;; Hardware stack levels used:    1
  5506 ;; Hardware stack levels required when called:    4
  5507 ;; This function calls:
  5508 ;;		Nothing
  5509 ;; This function is called by:
  5510 ;;		_EUSART1_Initialize
  5511 ;; This function uses a non-reentrant model
  5512 ;;
  5513                           
  5514                           	psect	text14
  5515  002A56                     __ptext14:
  5516                           	opt callstack 0
  5517  002A56                     _EUSART1_SetErrorHandler:
  5518                           	opt callstack 24
  5519  002A56                     
  5520                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  5521  002A56  C011  F0C7         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  5522  002A5A  C012  F0C8         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  5523  002A5E  0012               	return		;funcret
  5524  002A60                     __end_of_EUSART1_SetErrorHandler:
  5525                           	opt callstack 0
  5526                           
  5527 ;; *************** function _EPWM1_Initialize *****************
  5528 ;; Defined at:
  5529 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  5530 ;; Parameters:    Size  Location     Type
  5531 ;;		None
  5532 ;; Auto vars:     Size  Location     Type
  5533 ;;		None
  5534 ;; Return value:  Size  Location     Type
  5535 ;;                  1    wreg      void 
  5536 ;; Registers used:
  5537 ;;		wreg, status,2
  5538 ;; Tracked objects:
  5539 ;;		On entry : 0/0
  5540 ;;		On exit  : 0/0
  5541 ;;		Unchanged: 0/0
  5542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5547 ;;Total ram usage:        0 bytes
  5548 ;; Hardware stack levels used:    1
  5549 ;; Hardware stack levels required when called:    4
  5550 ;; This function calls:
  5551 ;;		Nothing
  5552 ;; This function is called by:
  5553 ;;		_SYSTEM_Initialize
  5554 ;; This function uses a non-reentrant model
  5555 ;;
  5556                           
  5557                           	psect	text15
  5558  002958                     __ptext15:
  5559                           	opt callstack 0
  5560  002958                     _EPWM1_Initialize:
  5561                           	opt callstack 25
  5562  002958                     
  5563                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x3C;
  5564  002958  0E3C               	movlw	60
  5565  00295A  6EBD               	movwf	189,c	;volatile
  5566                           
  5567                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  5568  00295C  0E00               	movlw	0
  5569  00295E  6EB6               	movwf	182,c	;volatile
  5570                           
  5571                           ;mcc_generated_files/epwm1.c: 75:  PWM1CON = 0x80;
  5572  002960  0E80               	movlw	128
  5573  002962  6EB7               	movwf	183,c	;volatile
  5574                           
  5575                           ;mcc_generated_files/epwm1.c: 78:  PSTR1CON = 0x01;
  5576  002964  0E01               	movlw	1
  5577  002966  6EB9               	movwf	185,c	;volatile
  5578                           
  5579                           ;mcc_generated_files/epwm1.c: 81:  CCPR1H = 0x00;
  5580  002968  0E00               	movlw	0
  5581  00296A  6EBF               	movwf	191,c	;volatile
  5582                           
  5583                           ;mcc_generated_files/epwm1.c: 84:  CCPR1L = 0x1F;
  5584  00296C  0E1F               	movlw	31
  5585  00296E  6EBE               	movwf	190,c	;volatile
  5586                           
  5587                           ;mcc_generated_files/epwm1.c: 87:  CCPTMRS0bits.C1TSEL = 0x0;
  5588  002970  0EFC               	movlw	-4
  5589  002972  010F               	movlb	15	; () banked
  5590  002974  1749               	andwf	73,f,b	;volatile
  5591  002976                     
  5592                           ; BSR set to: 15
  5593  002976  0012               	return		;funcret
  5594  002978                     __end_of_EPWM1_Initialize:
  5595                           	opt callstack 0
  5596                           
  5597 ;; *************** function _ADC_Initialize *****************
  5598 ;; Defined at:
  5599 ;;		line 62 in file "mcc_generated_files/adc.c"
  5600 ;; Parameters:    Size  Location     Type
  5601 ;;		None
  5602 ;; Auto vars:     Size  Location     Type
  5603 ;;		None
  5604 ;; Return value:  Size  Location     Type
  5605 ;;                  1    wreg      void 
  5606 ;; Registers used:
  5607 ;;		wreg, status,2
  5608 ;; Tracked objects:
  5609 ;;		On entry : 0/0
  5610 ;;		On exit  : 0/0
  5611 ;;		Unchanged: 0/0
  5612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5617 ;;Total ram usage:        0 bytes
  5618 ;; Hardware stack levels used:    1
  5619 ;; Hardware stack levels required when called:    4
  5620 ;; This function calls:
  5621 ;;		Nothing
  5622 ;; This function is called by:
  5623 ;;		_SYSTEM_Initialize
  5624 ;; This function uses a non-reentrant model
  5625 ;;
  5626                           
  5627                           	psect	text16
  5628  0029CC                     __ptext16:
  5629                           	opt callstack 0
  5630  0029CC                     _ADC_Initialize:
  5631                           	opt callstack 25
  5632  0029CC                     
  5633                           ;mcc_generated_files/adc.c: 67:     ADCON0 = 0x11;
  5634  0029CC  0E11               	movlw	17
  5635  0029CE  6EC2               	movwf	194,c	;volatile
  5636                           
  5637                           ;mcc_generated_files/adc.c: 70:     ADCON1 = 0x00;
  5638  0029D0  0E00               	movlw	0
  5639  0029D2  6EC1               	movwf	193,c	;volatile
  5640                           
  5641                           ;mcc_generated_files/adc.c: 73:     ADCON2 = 0x26;
  5642  0029D4  0E26               	movlw	38
  5643  0029D6  6EC0               	movwf	192,c	;volatile
  5644                           
  5645                           ;mcc_generated_files/adc.c: 76:     ADRESL = 0x00;
  5646  0029D8  0E00               	movlw	0
  5647  0029DA  6EC3               	movwf	195,c	;volatile
  5648                           
  5649                           ;mcc_generated_files/adc.c: 79:     ADRESH = 0x00;
  5650  0029DC  0E00               	movlw	0
  5651  0029DE  6EC4               	movwf	196,c	;volatile
  5652  0029E0  0012               	return		;funcret
  5653  0029E2                     __end_of_ADC_Initialize:
  5654                           	opt callstack 0
  5655                           
  5656 ;; *************** function _SPI2_Open *****************
  5657 ;; Defined at:
  5658 ;;		line 72 in file "mcc_generated_files/spi2.c"
  5659 ;; Parameters:    Size  Location     Type
  5660 ;;  spi2UniqueCo    1    wreg     enum E353
  5661 ;; Auto vars:     Size  Location     Type
  5662 ;;  spi2UniqueCo    1   17[COMRAM] enum E353
  5663 ;; Return value:  Size  Location     Type
  5664 ;;                  1    wreg      _Bool 
  5665 ;; Registers used:
  5666 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  5667 ;; Tracked objects:
  5668 ;;		On entry : 0/0
  5669 ;;		On exit  : 0/0
  5670 ;;		Unchanged: 0/0
  5671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5673 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5674 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5675 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5676 ;;Total ram usage:        2 bytes
  5677 ;; Hardware stack levels used:    1
  5678 ;; Hardware stack levels required when called:    4
  5679 ;; This function calls:
  5680 ;;		Nothing
  5681 ;; This function is called by:
  5682 ;;		_main
  5683 ;; This function uses a non-reentrant model
  5684 ;;
  5685                           
  5686                           	psect	text17
  5687  0020D6                     __ptext17:
  5688                           	opt callstack 0
  5689  0020D6                     _SPI2_Open:
  5690                           	opt callstack 26
  5691                           
  5692                           ;incstack = 0
  5693                           ;SPI2_Open@spi2UniqueConfiguration stored from wreg
  5694  0020D6  6E12               	movwf	SPI2_Open@spi2UniqueConfiguration^0,c
  5695  0020D8                     
  5696                           ;mcc_generated_files/spi2.c: 72: _Bool SPI2_Open(spi2_modes_t spi2UniqueConfiguration);m
      +                          cc_generated_files/spi2.c: 73: {;mcc_generated_files/spi2.c: 74:     if(!SSP2CON1bits.SS
      +                          PEN)
  5697  0020D8  BA6C               	btfsc	108,5,c	;volatile
  5698  0020DA  EF71  F010         	goto	u2771
  5699  0020DE  EF73  F010         	goto	u2770
  5700  0020E2                     u2771:
  5701  0020E2  EFC0  F010         	goto	l583
  5702  0020E6                     u2770:
  5703  0020E6                     
  5704                           ;mcc_generated_files/spi2.c: 75:     {;mcc_generated_files/spi2.c: 76:         SSP2STAT 
      +                          = spi2_configuration[spi2UniqueConfiguration].stat;
  5705  0020E6  5012               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  5706  0020E8  0D04               	mullw	4
  5707  0020EA  0E01               	movlw	1
  5708  0020EC  26F3               	addwf	243,f,c
  5709  0020EE  0E00               	movlw	0
  5710  0020F0  22F4               	addwfc	244,f,c
  5711  0020F2  0E6F               	movlw	low _spi2_configuration
  5712  0020F4  24F3               	addwf	243,w,c
  5713  0020F6  6EF6               	movwf	tblptrl,c
  5714  0020F8  0EF9               	movlw	high _spi2_configuration
  5715  0020FA  20F4               	addwfc	244,w,c
  5716  0020FC  6EF7               	movwf	tblptrh,c
  5717  0020FE                     	if	1	;There are 3 active tblptr bytes
  5718  0020FE  6AF8               	clrf	tblptru,c
  5719  002100  0E00               	movlw	low (__mediumconst shr (0+16))
  5720  002102  22F8               	addwfc	tblptru,f,c
  5721  002104                     	endif
  5722  002104  0008               	tblrd		*
  5723  002106  CFF5 FF6D          	movff	tablat,3949	;volatile
  5724                           
  5725                           ;mcc_generated_files/spi2.c: 77:         SSP2CON1 = spi2_configuration[spi2UniqueConfigu
      +                          ration].con1;
  5726  00210A  5012               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  5727  00210C  0D04               	mullw	4
  5728  00210E  0E6F               	movlw	low _spi2_configuration
  5729  002110  24F3               	addwf	243,w,c
  5730  002112  6EF6               	movwf	tblptrl,c
  5731  002114  0EF9               	movlw	high _spi2_configuration
  5732  002116  20F4               	addwfc	244,w,c
  5733  002118  6EF7               	movwf	tblptrh,c
  5734  00211A                     	if	1	;There are 3 active tblptr bytes
  5735  00211A  6AF8               	clrf	tblptru,c
  5736  00211C  0E00               	movlw	low (__mediumconst shr (0+16))
  5737  00211E  22F8               	addwfc	tblptru,f,c
  5738  002120                     	endif
  5739  002120  0008               	tblrd		*
  5740  002122  CFF5 FF6C          	movff	tablat,3948	;volatile
  5741  002126                     
  5742                           ;mcc_generated_files/spi2.c: 78:         SSP2CON2 = 0x00;
  5743  002126  0E00               	movlw	0
  5744  002128  6E6B               	movwf	107,c	;volatile
  5745  00212A                     
  5746                           ;mcc_generated_files/spi2.c: 79:         SSP2ADD = spi2_configuration[spi2UniqueConfigur
      +                          ation].add;
  5747  00212A  5012               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  5748  00212C  0D04               	mullw	4
  5749  00212E  0E02               	movlw	2
  5750  002130  26F3               	addwf	243,f,c
  5751  002132  0E00               	movlw	0
  5752  002134  22F4               	addwfc	244,f,c
  5753  002136  0E6F               	movlw	low _spi2_configuration
  5754  002138  24F3               	addwf	243,w,c
  5755  00213A  6EF6               	movwf	tblptrl,c
  5756  00213C  0EF9               	movlw	high _spi2_configuration
  5757  00213E  20F4               	addwfc	244,w,c
  5758  002140  6EF7               	movwf	tblptrh,c
  5759  002142                     	if	1	;There are 3 active tblptr bytes
  5760  002142  6AF8               	clrf	tblptru,c
  5761  002144  0E00               	movlw	low (__mediumconst shr (0+16))
  5762  002146  22F8               	addwfc	tblptru,f,c
  5763  002148                     	endif
  5764  002148  0008               	tblrd		*
  5765  00214A  CFF5 FF6E          	movff	tablat,3950	;volatile
  5766  00214E                     
  5767                           ;mcc_generated_files/spi2.c: 80:         TRISBbits.TRISB1 = spi2_configuration[spi2Uniqu
      +                          eConfiguration].operation;
  5768  00214E  5012               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  5769  002150  0D04               	mullw	4
  5770  002152  0E03               	movlw	3
  5771  002154  26F3               	addwf	243,f,c
  5772  002156  0E00               	movlw	0
  5773  002158  22F4               	addwfc	244,f,c
  5774  00215A  0E6F               	movlw	low _spi2_configuration
  5775  00215C  24F3               	addwf	243,w,c
  5776  00215E  6EF6               	movwf	tblptrl,c
  5777  002160  0EF9               	movlw	high _spi2_configuration
  5778  002162  20F4               	addwfc	244,w,c
  5779  002164  6EF7               	movwf	tblptrh,c
  5780  002166                     	if	1	;There are 3 active tblptr bytes
  5781  002166  6AF8               	clrf	tblptru,c
  5782  002168  0E00               	movlw	low (__mediumconst shr (0+16))
  5783  00216A  22F8               	addwfc	tblptru,f,c
  5784  00216C                     	endif
  5785  00216C  0008               	tblrd		*
  5786  00216E  CFF5 F011          	movff	tablat,??_SPI2_Open
  5787  002172  4611               	rlncf	??_SPI2_Open^0,f,c
  5788  002174  5093               	movf	147,w,c	;volatile
  5789  002176  1811               	xorwf	??_SPI2_Open^0,w,c
  5790  002178  0BFD               	andlw	-3
  5791  00217A  1811               	xorwf	??_SPI2_Open^0,w,c
  5792  00217C  6E93               	movwf	147,c	;volatile
  5793  00217E                     
  5794                           ;mcc_generated_files/spi2.c: 81:         SSP2CON1bits.SSPEN = 1;
  5795  00217E  8A6C               	bsf	108,5,c	;volatile
  5796  002180                     l583:
  5797  002180  0012               	return		;funcret
  5798  002182                     __end_of_SPI2_Open:
  5799                           	opt callstack 0
  5800                           
  5801 ;; *************** function _SPI2_Close *****************
  5802 ;; Defined at:
  5803 ;;		line 87 in file "mcc_generated_files/spi2.c"
  5804 ;; Parameters:    Size  Location     Type
  5805 ;;		None
  5806 ;; Auto vars:     Size  Location     Type
  5807 ;;		None
  5808 ;; Return value:  Size  Location     Type
  5809 ;;                  1    wreg      void 
  5810 ;; Registers used:
  5811 ;;		None
  5812 ;; Tracked objects:
  5813 ;;		On entry : 0/0
  5814 ;;		On exit  : 0/0
  5815 ;;		Unchanged: 0/0
  5816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5821 ;;Total ram usage:        0 bytes
  5822 ;; Hardware stack levels used:    1
  5823 ;; Hardware stack levels required when called:    4
  5824 ;; This function calls:
  5825 ;;		Nothing
  5826 ;; This function is called by:
  5827 ;;		_main
  5828 ;; This function uses a non-reentrant model
  5829 ;;
  5830                           
  5831                           	psect	text18
  5832  002A78                     __ptext18:
  5833                           	opt callstack 0
  5834  002A78                     _SPI2_Close:
  5835                           	opt callstack 26
  5836  002A78                     
  5837                           ;mcc_generated_files/spi2.c: 89:     SSP2CON1bits.SSPEN = 0;
  5838  002A78  9A6C               	bcf	108,5,c	;volatile
  5839  002A7A  0012               	return		;funcret
  5840  002A7C                     __end_of_SPI2_Close:
  5841                           	opt callstack 0
  5842                           
  5843 ;; *************** function _SDCARD_WriteBlock *****************
  5844 ;; Defined at:
  5845 ;;		line 51 in file "sdCard.c"
  5846 ;; Parameters:    Size  Location     Type
  5847 ;;  addr            4   17[COMRAM] unsigned long 
  5848 ;;  sdCardBuffer    2   21[COMRAM] PTR unsigned char 
  5849 ;;		 -> sdCardBufferBlue(512), sdCardBufferRed(512), 
  5850 ;; Auto vars:     Size  Location     Type
  5851 ;;  i               2   23[COMRAM] unsigned short 
  5852 ;; Return value:  Size  Location     Type
  5853 ;;                  1    wreg      void 
  5854 ;; Registers used:
  5855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5856 ;; Tracked objects:
  5857 ;;		On entry : 0/0
  5858 ;;		On exit  : 0/0
  5859 ;;		Unchanged: 0/0
  5860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5861 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5862 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5864 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5865 ;;Total ram usage:        8 bytes
  5866 ;; Hardware stack levels used:    1
  5867 ;; Hardware stack levels required when called:    5
  5868 ;; This function calls:
  5869 ;;		_SPI2_ExchangeByte
  5870 ;; This function is called by:
  5871 ;;		_main
  5872 ;; This function uses a non-reentrant model
  5873 ;;
  5874                           
  5875                           	psect	text19
  5876  00234A                     __ptext19:
  5877                           	opt callstack 0
  5878  00234A                     _SDCARD_WriteBlock:
  5879                           	opt callstack 25
  5880  00234A  988A               	bcf	138,4,c	;volatile
  5881  00234C                     
  5882                           ;sdCard.c: 57:     SPI2_ExchangeByte(0xFF);
  5883  00234C  0EFF               	movlw	255
  5884  00234E  ECD9  F014         	call	_SPI2_ExchangeByte
  5885  002352                     
  5886                           ;sdCard.c: 58:     SPI2_ExchangeByte(0x40 | 24);
  5887  002352  0E58               	movlw	88
  5888  002354  ECD9  F014         	call	_SPI2_ExchangeByte
  5889  002358                     
  5890                           ;sdCard.c: 59:     SPI2_ExchangeByte((uint8_t)((addr >> 24) & 0xFF));
  5891  002358  5015               	movf	(SDCARD_WriteBlock@addr+3)^0,w,c
  5892  00235A  ECD9  F014         	call	_SPI2_ExchangeByte
  5893  00235E                     
  5894                           ;sdCard.c: 60:     SPI2_ExchangeByte((uint8_t)((addr >> 16) & 0xFF));
  5895  00235E  5014               	movf	(SDCARD_WriteBlock@addr+2)^0,w,c
  5896  002360  ECD9  F014         	call	_SPI2_ExchangeByte
  5897  002364                     
  5898                           ;sdCard.c: 61:     SPI2_ExchangeByte((uint8_t)((addr >> 8) & 0xFF));
  5899  002364  5013               	movf	(SDCARD_WriteBlock@addr+1)^0,w,c
  5900  002366  ECD9  F014         	call	_SPI2_ExchangeByte
  5901  00236A                     
  5902                           ;sdCard.c: 62:     SPI2_ExchangeByte((uint8_t)(addr & 0xFF));
  5903  00236A  5012               	movf	SDCARD_WriteBlock@addr^0,w,c
  5904  00236C  ECD9  F014         	call	_SPI2_ExchangeByte
  5905  002370                     
  5906                           ;sdCard.c: 63:     SPI2_ExchangeByte(0xFF);
  5907  002370  0EFF               	movlw	255
  5908  002372  ECD9  F014         	call	_SPI2_ExchangeByte
  5909  002376                     l4028:
  5910  002376  0EFF               	movlw	255
  5911  002378  ECD9  F014         	call	_SPI2_ExchangeByte
  5912  00237C  0AFF               	xorlw	255
  5913  00237E  B4D8               	btfsc	status,2,c
  5914  002380  EFC4  F011         	goto	u2931
  5915  002384  EFC6  F011         	goto	u2930
  5916  002388                     u2931:
  5917  002388  EFBB  F011         	goto	l4028
  5918  00238C                     u2930:
  5919  00238C                     
  5920                           ;sdCard.c: 69:     SPI2_ExchangeByte(0xFF);
  5921  00238C  0EFF               	movlw	255
  5922  00238E  ECD9  F014         	call	_SPI2_ExchangeByte
  5923                           
  5924                           ;sdCard.c: 70:     SPI2_ExchangeByte(0xFF);
  5925  002392  0EFF               	movlw	255
  5926  002394  ECD9  F014         	call	_SPI2_ExchangeByte
  5927                           
  5928                           ;sdCard.c: 71:     SPI2_ExchangeByte(0xFF);
  5929  002398  0EFF               	movlw	255
  5930  00239A  ECD9  F014         	call	_SPI2_ExchangeByte
  5931                           
  5932                           ;sdCard.c: 74:     SPI2_ExchangeByte(0xFE);
  5933  00239E  0EFE               	movlw	254
  5934  0023A0  ECD9  F014         	call	_SPI2_ExchangeByte
  5935  0023A4                     
  5936                           ;sdCard.c: 77:     for(i = 0; i < 512; i++)
  5937  0023A4  0E00               	movlw	0
  5938  0023A6  6E19               	movwf	(SDCARD_WriteBlock@i+1)^0,c
  5939  0023A8  0E00               	movlw	0
  5940  0023AA  6E18               	movwf	SDCARD_WriteBlock@i^0,c
  5941  0023AC                     l4038:
  5942                           
  5943                           ;sdCard.c: 78:         SPI2_ExchangeByte(sdCardBuffer[i]);
  5944  0023AC  5018               	movf	SDCARD_WriteBlock@i^0,w,c
  5945  0023AE  2416               	addwf	SDCARD_WriteBlock@sdCardBuffer^0,w,c
  5946  0023B0  6ED9               	movwf	fsr2l,c
  5947  0023B2  5019               	movf	(SDCARD_WriteBlock@i+1)^0,w,c
  5948  0023B4  2017               	addwfc	(SDCARD_WriteBlock@sdCardBuffer+1)^0,w,c
  5949  0023B6  6EDA               	movwf	fsr2h,c
  5950  0023B8  50DF               	movf	indf2,w,c
  5951  0023BA  ECD9  F014         	call	_SPI2_ExchangeByte
  5952  0023BE  4A18               	infsnz	SDCARD_WriteBlock@i^0,f,c
  5953  0023C0  2A19               	incf	(SDCARD_WriteBlock@i+1)^0,f,c
  5954  0023C2  0E02               	movlw	2
  5955  0023C4  5C19               	subwf	(SDCARD_WriteBlock@i+1)^0,w,c
  5956  0023C6  A0D8               	btfss	status,0,c
  5957  0023C8  EFE8  F011         	goto	u2941
  5958  0023CC  EFEA  F011         	goto	u2940
  5959  0023D0                     u2941:
  5960  0023D0  EFD6  F011         	goto	l4038
  5961  0023D4                     u2940:
  5962  0023D4  888A               	bsf	138,4,c	;volatile
  5963  0023D6  0012               	return		;funcret
  5964  0023D8                     __end_of_SDCARD_WriteBlock:
  5965                           	opt callstack 0
  5966                           
  5967 ;; *************** function _SDCARD_ReadBlock *****************
  5968 ;; Defined at:
  5969 ;;		line 17 in file "sdCard.c"
  5970 ;; Parameters:    Size  Location     Type
  5971 ;;  addr            4   17[COMRAM] unsigned long 
  5972 ;;  sdCardBuffer    2   21[COMRAM] PTR unsigned char 
  5973 ;;		 -> sdCardBufferBlue(512), sdCardBufferRed(512), sdCardBuffer(512), 
  5974 ;; Auto vars:     Size  Location     Type
  5975 ;;  i               2   23[COMRAM] unsigned short 
  5976 ;; Return value:  Size  Location     Type
  5977 ;;                  1    wreg      void 
  5978 ;; Registers used:
  5979 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5980 ;; Tracked objects:
  5981 ;;		On entry : 0/0
  5982 ;;		On exit  : 0/0
  5983 ;;		Unchanged: 0/0
  5984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5985 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5986 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5988 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5989 ;;Total ram usage:        8 bytes
  5990 ;; Hardware stack levels used:    1
  5991 ;; Hardware stack levels required when called:    5
  5992 ;; This function calls:
  5993 ;;		_SPI2_ExchangeByte
  5994 ;; This function is called by:
  5995 ;;		_main
  5996 ;; This function uses a non-reentrant model
  5997 ;;
  5998                           
  5999                           	psect	text20
  6000  002182                     __ptext20:
  6001                           	opt callstack 0
  6002  002182                     _SDCARD_ReadBlock:
  6003                           	opt callstack 25
  6004  002182  988A               	bcf	138,4,c	;volatile
  6005  002184                     
  6006                           ;sdCard.c: 22:     SPI2_ExchangeByte(0xFF);
  6007  002184  0EFF               	movlw	255
  6008  002186  ECD9  F014         	call	_SPI2_ExchangeByte
  6009  00218A                     
  6010                           ;sdCard.c: 23:     SPI2_ExchangeByte(0x40 | 17);
  6011  00218A  0E51               	movlw	81
  6012  00218C  ECD9  F014         	call	_SPI2_ExchangeByte
  6013  002190                     
  6014                           ;sdCard.c: 24:     SPI2_ExchangeByte((uint8_t)((addr >> 24) & 0xFF));
  6015  002190  5015               	movf	(SDCARD_ReadBlock@addr+3)^0,w,c
  6016  002192  ECD9  F014         	call	_SPI2_ExchangeByte
  6017  002196                     
  6018                           ;sdCard.c: 25:     SPI2_ExchangeByte((uint8_t)((addr >> 16) & 0xFF));
  6019  002196  5014               	movf	(SDCARD_ReadBlock@addr+2)^0,w,c
  6020  002198  ECD9  F014         	call	_SPI2_ExchangeByte
  6021  00219C                     
  6022                           ;sdCard.c: 26:     SPI2_ExchangeByte((uint8_t)((addr >> 8) & 0xFF));
  6023  00219C  5013               	movf	(SDCARD_ReadBlock@addr+1)^0,w,c
  6024  00219E  ECD9  F014         	call	_SPI2_ExchangeByte
  6025  0021A2                     
  6026                           ;sdCard.c: 27:     SPI2_ExchangeByte((uint8_t)(addr & 0xFF));
  6027  0021A2  5012               	movf	SDCARD_ReadBlock@addr^0,w,c
  6028  0021A4  ECD9  F014         	call	_SPI2_ExchangeByte
  6029  0021A8                     
  6030                           ;sdCard.c: 28:     SPI2_ExchangeByte(0xFF);
  6031  0021A8  0EFF               	movlw	255
  6032  0021AA  ECD9  F014         	call	_SPI2_ExchangeByte
  6033  0021AE                     l3936:
  6034  0021AE  0EFF               	movlw	255
  6035  0021B0  ECD9  F014         	call	_SPI2_ExchangeByte
  6036  0021B4  0AFF               	xorlw	255
  6037  0021B6  B4D8               	btfsc	status,2,c
  6038  0021B8  EFE0  F010         	goto	u2811
  6039  0021BC  EFE2  F010         	goto	u2810
  6040  0021C0                     u2811:
  6041  0021C0  EFD7  F010         	goto	l3936
  6042  0021C4                     u2810:
  6043  0021C4                     l3938:
  6044  0021C4  0EFF               	movlw	255
  6045  0021C6  ECD9  F014         	call	_SPI2_ExchangeByte
  6046  0021CA  0AFF               	xorlw	255
  6047  0021CC  B4D8               	btfsc	status,2,c
  6048  0021CE  EFEB  F010         	goto	u2821
  6049  0021D2  EFED  F010         	goto	u2820
  6050  0021D6                     u2821:
  6051  0021D6  EFE2  F010         	goto	l3938
  6052  0021DA                     u2820:
  6053  0021DA                     
  6054                           ;sdCard.c: 37:     for(i = 0; i < 512; i++)
  6055  0021DA  0E00               	movlw	0
  6056  0021DC  6E19               	movwf	(SDCARD_ReadBlock@i+1)^0,c
  6057  0021DE  0E00               	movlw	0
  6058  0021E0  6E18               	movwf	SDCARD_ReadBlock@i^0,c
  6059  0021E2                     l3946:
  6060                           
  6061                           ;sdCard.c: 38:         sdCardBuffer[i] = SPI2_ExchangeByte(0xFF);
  6062  0021E2  5018               	movf	SDCARD_ReadBlock@i^0,w,c
  6063  0021E4  2416               	addwf	SDCARD_ReadBlock@sdCardBuffer^0,w,c
  6064  0021E6  6ED9               	movwf	fsr2l,c
  6065  0021E8  5019               	movf	(SDCARD_ReadBlock@i+1)^0,w,c
  6066  0021EA  2017               	addwfc	(SDCARD_ReadBlock@sdCardBuffer+1)^0,w,c
  6067  0021EC  6EDA               	movwf	fsr2h,c
  6068  0021EE  0EFF               	movlw	255
  6069  0021F0  ECD9  F014         	call	_SPI2_ExchangeByte
  6070  0021F4  6EDF               	movwf	indf2,c
  6071  0021F6  4A18               	infsnz	SDCARD_ReadBlock@i^0,f,c
  6072  0021F8  2A19               	incf	(SDCARD_ReadBlock@i+1)^0,f,c
  6073  0021FA  0E02               	movlw	2
  6074  0021FC  5C19               	subwf	(SDCARD_ReadBlock@i+1)^0,w,c
  6075  0021FE  A0D8               	btfss	status,0,c
  6076  002200  EF04  F011         	goto	u2831
  6077  002204  EF06  F011         	goto	u2830
  6078  002208                     u2831:
  6079  002208  EFF1  F010         	goto	l3946
  6080  00220C                     u2830:
  6081  00220C                     
  6082                           ;sdCard.c: 41:     SPI2_ExchangeByte(0xFF);
  6083  00220C  0EFF               	movlw	255
  6084  00220E  ECD9  F014         	call	_SPI2_ExchangeByte
  6085                           
  6086                           ;sdCard.c: 42:     SPI2_ExchangeByte(0xFF);
  6087  002212  0EFF               	movlw	255
  6088  002214  ECD9  F014         	call	_SPI2_ExchangeByte
  6089  002218  888A               	bsf	138,4,c	;volatile
  6090  00221A  0012               	return		;funcret
  6091  00221C                     __end_of_SDCARD_ReadBlock:
  6092                           	opt callstack 0
  6093                           
  6094 ;; *************** function _SDCARD_PollWriteComplete *****************
  6095 ;; Defined at:
  6096 ;;		line 88 in file "sdCard.c"
  6097 ;; Parameters:    Size  Location     Type
  6098 ;;		None
  6099 ;; Auto vars:     Size  Location     Type
  6100 ;;  status          1   17[COMRAM] unsigned char 
  6101 ;; Return value:  Size  Location     Type
  6102 ;;                  1    wreg      unsigned char 
  6103 ;; Registers used:
  6104 ;;		wreg, status,2, status,0, cstack
  6105 ;; Tracked objects:
  6106 ;;		On entry : 0/0
  6107 ;;		On exit  : 0/0
  6108 ;;		Unchanged: 0/0
  6109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6111 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6113 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6114 ;;Total ram usage:        1 bytes
  6115 ;; Hardware stack levels used:    1
  6116 ;; Hardware stack levels required when called:    5
  6117 ;; This function calls:
  6118 ;;		_SPI2_ExchangeByte
  6119 ;; This function is called by:
  6120 ;;		_main
  6121 ;; This function uses a non-reentrant model
  6122 ;;
  6123                           
  6124                           	psect	text21
  6125  0026AC                     __ptext21:
  6126                           	opt callstack 0
  6127  0026AC                     _SDCARD_PollWriteComplete:
  6128                           	opt callstack 25
  6129  0026AC  988A               	bcf	138,4,c	;volatile
  6130  0026AE                     
  6131                           ;sdCard.c: 93:     status = SPI2_ExchangeByte(13);
  6132  0026AE  0E0D               	movlw	13
  6133  0026B0  ECD9  F014         	call	_SPI2_ExchangeByte
  6134  0026B4  6E12               	movwf	SDCARD_PollWriteComplete@status^0,c
  6135  0026B6  888A               	bsf	138,4,c	;volatile
  6136  0026B8                     
  6137                           ;sdCard.c: 96:     if (status == 0xFF) {
  6138  0026B8  2812               	incf	SDCARD_PollWriteComplete@status^0,w,c
  6139  0026BA  A4D8               	btfss	status,2,c
  6140  0026BC  EF62  F013         	goto	u2951
  6141  0026C0  EF64  F013         	goto	u2950
  6142  0026C4                     u2951:
  6143  0026C4  EF67  F013         	goto	l4056
  6144  0026C8                     u2950:
  6145  0026C8                     
  6146                           ;sdCard.c: 97:         return (0xFF);
  6147  0026C8  0EFF               	movlw	255
  6148  0026CA  EF71  F013         	goto	l285
  6149  0026CE                     l4056:
  6150                           
  6151                           ;sdCard.c: 100:         (void) SPI2_ExchangeByte(0xFF);
  6152  0026CE  0EFF               	movlw	255
  6153  0026D0  ECD9  F014         	call	_SPI2_ExchangeByte
  6154                           
  6155                           ;sdCard.c: 101:         (void) SPI2_ExchangeByte(0xFF);
  6156  0026D4  0EFF               	movlw	255
  6157  0026D6  ECD9  F014         	call	_SPI2_ExchangeByte
  6158                           
  6159                           ;sdCard.c: 102:         (void) SPI2_ExchangeByte(0xFF);
  6160  0026DA  0EFF               	movlw	255
  6161  0026DC  ECD9  F014         	call	_SPI2_ExchangeByte
  6162  0026E0                     
  6163                           ;sdCard.c: 103:         return(status);
  6164  0026E0  5012               	movf	SDCARD_PollWriteComplete@status^0,w,c
  6165  0026E2                     l285:
  6166  0026E2  0012               	return		;funcret
  6167  0026E4                     __end_of_SDCARD_PollWriteComplete:
  6168                           	opt callstack 0
  6169                           
  6170 ;; *************** function _SDCARD_HCInitialize *****************
  6171 ;; Defined at:
  6172 ;;		line 142 in file "sdCard.c"
  6173 ;; Parameters:    Size  Location     Type
  6174 ;;  verbose         1    wreg     unsigned char 
  6175 ;; Auto vars:     Size  Location     Type
  6176 ;;  verbose         1   76[BANK0 ] unsigned char 
  6177 ;;  i               2   77[BANK0 ] int 
  6178 ;;  response        1   79[BANK0 ] unsigned char 
  6179 ;; Return value:  Size  Location     Type
  6180 ;;                  1    wreg      void 
  6181 ;; Registers used:
  6182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6183 ;; Tracked objects:
  6184 ;;		On entry : 0/0
  6185 ;;		On exit  : 0/0
  6186 ;;		Unchanged: 0/0
  6187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6189 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6190 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6191 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6192 ;;Total ram usage:        5 bytes
  6193 ;; Hardware stack levels used:    1
  6194 ;; Hardware stack levels required when called:   14
  6195 ;; This function calls:
  6196 ;;		_SDCARD_SetIdle
  6197 ;;		_SPI2_ExchangeByte
  6198 ;;		_printf
  6199 ;; This function is called by:
  6200 ;;		_main
  6201 ;; This function uses a non-reentrant model
  6202 ;;
  6203                           
  6204                           	psect	text22
  6205  001D2A                     __ptext22:
  6206                           	opt callstack 0
  6207  001D2A                     _SDCARD_HCInitialize:
  6208                           	opt callstack 16
  6209                           
  6210                           ;incstack = 0
  6211                           ;SDCARD_HCInitialize@verbose stored from wreg
  6212  001D2A  0100               	movlb	0	; () banked
  6213  001D2C  6FAC               	movwf	SDCARD_HCInitialize@verbose& (0+255),b
  6214  001D2E                     
  6215                           ;sdCard.c: 144:     uint8_t response;;sdCard.c: 146:     SDCARD_SetIdle(verbose);
  6216  001D2E  0100               	movlb	0	; () banked
  6217  001D30  51AC               	movf	SDCARD_HCInitialize@verbose& (0+255),w,b
  6218  001D32  EC0E  F011         	call	_SDCARD_SetIdle
  6219  001D36  988A               	bcf	138,4,c	;volatile
  6220  001D38                     
  6221                           ;sdCard.c: 150:     SPI2_ExchangeByte(0xFF);
  6222  001D38  0EFF               	movlw	255
  6223  001D3A  ECD9  F014         	call	_SPI2_ExchangeByte
  6224  001D3E                     
  6225                           ;sdCard.c: 151:     SPI2_ExchangeByte(0x48);
  6226  001D3E  0E48               	movlw	72
  6227  001D40  ECD9  F014         	call	_SPI2_ExchangeByte
  6228  001D44                     
  6229                           ;sdCard.c: 152:     SPI2_ExchangeByte(0x00);
  6230  001D44  0E00               	movlw	0
  6231  001D46  ECD9  F014         	call	_SPI2_ExchangeByte
  6232  001D4A                     
  6233                           ;sdCard.c: 153:     SPI2_ExchangeByte(0x00);
  6234  001D4A  0E00               	movlw	0
  6235  001D4C  ECD9  F014         	call	_SPI2_ExchangeByte
  6236  001D50                     
  6237                           ;sdCard.c: 154:     SPI2_ExchangeByte(0x01);
  6238  001D50  0E01               	movlw	1
  6239  001D52  ECD9  F014         	call	_SPI2_ExchangeByte
  6240  001D56                     
  6241                           ;sdCard.c: 155:     SPI2_ExchangeByte(0xAA);
  6242  001D56  0EAA               	movlw	170
  6243  001D58  ECD9  F014         	call	_SPI2_ExchangeByte
  6244  001D5C                     
  6245                           ;sdCard.c: 156:     SPI2_ExchangeByte(0x87);
  6246  001D5C  0E87               	movlw	135
  6247  001D5E  ECD9  F014         	call	_SPI2_ExchangeByte
  6248  001D62                     
  6249                           ;sdCard.c: 157:     SPI2_ExchangeByte(0xFF);
  6250  001D62  0EFF               	movlw	255
  6251  001D64  ECD9  F014         	call	_SPI2_ExchangeByte
  6252  001D68                     
  6253                           ;sdCard.c: 158:     response = SPI2_ExchangeByte(0xFF);
  6254  001D68  0EFF               	movlw	255
  6255  001D6A  ECD9  F014         	call	_SPI2_ExchangeByte
  6256  001D6E  0100               	movlb	0	; () banked
  6257  001D70  6FAF               	movwf	SDCARD_HCInitialize@response& (0+255),b
  6258  001D72                     
  6259                           ; BSR set to: 0
  6260                           ;sdCard.c: 161:     for(int i = 0; i < 4; i++) {
  6261  001D72  0E00               	movlw	0
  6262  001D74  6FAE               	movwf	(SDCARD_HCInitialize@i+1)& (0+255),b
  6263  001D76  0E00               	movlw	0
  6264  001D78  6FAD               	movwf	SDCARD_HCInitialize@i& (0+255),b
  6265  001D7A                     l5128:
  6266                           
  6267                           ; BSR set to: 0
  6268                           ;sdCard.c: 162:         printf("%x", SPI2_ExchangeByte(0xFF));
  6269  001D7A  0EF8               	movlw	low STR_95
  6270  001D7C  6F9D               	movwf	printf@fmt& (0+255),b
  6271  001D7E  0EFF               	movlw	high STR_95
  6272  001D80  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  6273  001D82  0EFF               	movlw	255
  6274  001D84  ECD9  F014         	call	_SPI2_ExchangeByte
  6275  001D88  0100               	movlb	0	; () banked
  6276  001D8A  6FAB               	movwf	??_SDCARD_HCInitialize& (0+255),b
  6277  001D8C  51AB               	movf	??_SDCARD_HCInitialize& (0+255),w,b
  6278  001D8E  6F9F               	movwf	(?_printf+2)& (0+255),b
  6279  001D90  6BA0               	clrf	(?_printf+3)& (0+255),b
  6280  001D92  EC72  F014         	call	_printf	;wreg free
  6281  001D96                     
  6282                           ;sdCard.c: 163:     }
  6283  001D96  0100               	movlb	0	; () banked
  6284  001D98  4BAD               	infsnz	SDCARD_HCInitialize@i& (0+255),f,b
  6285  001D9A  2BAE               	incf	(SDCARD_HCInitialize@i+1)& (0+255),f,b
  6286  001D9C                     
  6287                           ; BSR set to: 0
  6288  001D9C  BFAE               	btfsc	(SDCARD_HCInitialize@i+1)& (0+255),7,b
  6289  001D9E  EFDA  F00E         	goto	u4251
  6290  001DA2  51AE               	movf	(SDCARD_HCInitialize@i+1)& (0+255),w,b
  6291  001DA4  E109               	bnz	u4250
  6292  001DA6  0E04               	movlw	4
  6293  001DA8  5DAD               	subwf	SDCARD_HCInitialize@i& (0+255),w,b
  6294  001DAA  A0D8               	btfss	status,0,c
  6295  001DAC  EFDA  F00E         	goto	u4251
  6296  001DB0  EFDC  F00E         	goto	u4250
  6297  001DB4                     u4251:
  6298  001DB4  EFBD  F00E         	goto	l5128
  6299  001DB8                     u4250:
  6300  001DB8                     
  6301                           ; BSR set to: 0
  6302                           ;sdCard.c: 164:         printf("\r\n");
  6303  001DB8  0E88               	movlw	low (STR_41+12)
  6304  001DBA  6F9D               	movwf	printf@fmt& (0+255),b
  6305  001DBC  0EFF               	movlw	high (STR_41+12)
  6306  001DBE  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  6307  001DC0  EC72  F014         	call	_printf	;wreg free
  6308  001DC4  888A               	bsf	138,4,c	;volatile
  6309  001DC6                     
  6310                           ;sdCard.c: 167:     printf("CMD 8 Response: %x\r\n", response);
  6311  001DC6  0EB0               	movlw	low STR_97
  6312  001DC8  0100               	movlb	0	; () banked
  6313  001DCA  6F9D               	movwf	printf@fmt& (0+255),b
  6314  001DCC  0EFE               	movlw	high STR_97
  6315  001DCE  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  6316  001DD0  C0AF  F09F         	movff	SDCARD_HCInitialize@response,?_printf+2
  6317  001DD4  6BA0               	clrf	(?_printf+3)& (0+255),b
  6318  001DD6  EC72  F014         	call	_printf	;wreg free
  6319  001DDA                     l5138:
  6320  001DDA  988A               	bcf	138,4,c	;volatile
  6321  001DDC                     
  6322                           ;sdCard.c: 175:         SPI2_ExchangeByte(0xFF);
  6323  001DDC  0EFF               	movlw	255
  6324  001DDE  ECD9  F014         	call	_SPI2_ExchangeByte
  6325  001DE2                     
  6326                           ;sdCard.c: 176:         SPI2_ExchangeByte(0x77);
  6327  001DE2  0E77               	movlw	119
  6328  001DE4  ECD9  F014         	call	_SPI2_ExchangeByte
  6329  001DE8                     
  6330                           ;sdCard.c: 177:         SPI2_ExchangeByte(0x00);
  6331  001DE8  0E00               	movlw	0
  6332  001DEA  ECD9  F014         	call	_SPI2_ExchangeByte
  6333  001DEE                     
  6334                           ;sdCard.c: 178:         SPI2_ExchangeByte(0x00);
  6335  001DEE  0E00               	movlw	0
  6336  001DF0  ECD9  F014         	call	_SPI2_ExchangeByte
  6337  001DF4                     
  6338                           ;sdCard.c: 179:         SPI2_ExchangeByte(0x00);
  6339  001DF4  0E00               	movlw	0
  6340  001DF6  ECD9  F014         	call	_SPI2_ExchangeByte
  6341  001DFA                     
  6342                           ;sdCard.c: 180:         SPI2_ExchangeByte(0x00);
  6343  001DFA  0E00               	movlw	0
  6344  001DFC  ECD9  F014         	call	_SPI2_ExchangeByte
  6345  001E00                     
  6346                           ;sdCard.c: 181:         SPI2_ExchangeByte(0x00);
  6347  001E00  0E00               	movlw	0
  6348  001E02  ECD9  F014         	call	_SPI2_ExchangeByte
  6349  001E06                     
  6350                           ;sdCard.c: 182:         SPI2_ExchangeByte(0xFF);
  6351  001E06  0EFF               	movlw	255
  6352  001E08  ECD9  F014         	call	_SPI2_ExchangeByte
  6353  001E0C                     
  6354                           ;sdCard.c: 183:         response = SPI2_ExchangeByte(0xFF);
  6355  001E0C  0EFF               	movlw	255
  6356  001E0E  ECD9  F014         	call	_SPI2_ExchangeByte
  6357  001E12  0100               	movlb	0	; () banked
  6358  001E14  6FAF               	movwf	SDCARD_HCInitialize@response& (0+255),b
  6359  001E16                     
  6360                           ; BSR set to: 0
  6361                           ;sdCard.c: 184:         printf("CMD 55 Response: %x\r\n", response);
  6362  001E16  0E9A               	movlw	low STR_98
  6363  001E18  6F9D               	movwf	printf@fmt& (0+255),b
  6364  001E1A  0EFE               	movlw	high STR_98
  6365  001E1C  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  6366  001E1E  C0AF  F09F         	movff	SDCARD_HCInitialize@response,?_printf+2
  6367  001E22  6BA0               	clrf	(?_printf+3)& (0+255),b
  6368  001E24  EC72  F014         	call	_printf	;wreg free
  6369                           
  6370                           ;sdCard.c: 187:         SPI2_ExchangeByte(0x69);
  6371  001E28  0E69               	movlw	105
  6372  001E2A  ECD9  F014         	call	_SPI2_ExchangeByte
  6373                           
  6374                           ;sdCard.c: 188:         SPI2_ExchangeByte(0x40);
  6375  001E2E  0E40               	movlw	64
  6376  001E30  ECD9  F014         	call	_SPI2_ExchangeByte
  6377                           
  6378                           ;sdCard.c: 189:         SPI2_ExchangeByte(0x00);
  6379  001E34  0E00               	movlw	0
  6380  001E36  ECD9  F014         	call	_SPI2_ExchangeByte
  6381                           
  6382                           ;sdCard.c: 190:         SPI2_ExchangeByte(0x00);
  6383  001E3A  0E00               	movlw	0
  6384  001E3C  ECD9  F014         	call	_SPI2_ExchangeByte
  6385                           
  6386                           ;sdCard.c: 191:         SPI2_ExchangeByte(0x00);
  6387  001E40  0E00               	movlw	0
  6388  001E42  ECD9  F014         	call	_SPI2_ExchangeByte
  6389                           
  6390                           ;sdCard.c: 192:         SPI2_ExchangeByte(0x00);
  6391  001E46  0E00               	movlw	0
  6392  001E48  ECD9  F014         	call	_SPI2_ExchangeByte
  6393                           
  6394                           ;sdCard.c: 193:         SPI2_ExchangeByte(0xFF);
  6395  001E4C  0EFF               	movlw	255
  6396  001E4E  ECD9  F014         	call	_SPI2_ExchangeByte
  6397                           
  6398                           ;sdCard.c: 194:         response = SPI2_ExchangeByte(0xFF);
  6399  001E52  0EFF               	movlw	255
  6400  001E54  ECD9  F014         	call	_SPI2_ExchangeByte
  6401  001E58  0100               	movlb	0	; () banked
  6402  001E5A  6FAF               	movwf	SDCARD_HCInitialize@response& (0+255),b
  6403  001E5C                     
  6404                           ; BSR set to: 0
  6405  001E5C  888A               	bsf	138,4,c	;volatile
  6406  001E5E                     
  6407                           ; BSR set to: 0
  6408                           ;sdCard.c: 198:         printf("ACMD 41 Response: %x\r\n", response);
  6409  001E5E  0E83               	movlw	low STR_99
  6410  001E60  6F9D               	movwf	printf@fmt& (0+255),b
  6411  001E62  0EFE               	movlw	high STR_99
  6412  001E64  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  6413  001E66  C0AF  F09F         	movff	SDCARD_HCInitialize@response,?_printf+2
  6414  001E6A  6BA0               	clrf	(?_printf+3)& (0+255),b
  6415  001E6C  EC72  F014         	call	_printf	;wreg free
  6416  001E70                     
  6417                           ;sdCard.c: 199:     } while(response == 0x01);
  6418  001E70  0100               	movlb	0	; () banked
  6419  001E72  05AF               	decf	SDCARD_HCInitialize@response& (0+255),w,b
  6420  001E74  B4D8               	btfsc	status,2,c
  6421  001E76  EF3F  F00F         	goto	u4261
  6422  001E7A  EF41  F00F         	goto	u4260
  6423  001E7E                     u4261:
  6424  001E7E  EFED  F00E         	goto	l5138
  6425  001E82                     u4260:
  6426  001E82                     
  6427                           ; BSR set to: 0
  6428                           ;sdCard.c: 201:     if(response == 0) {
  6429  001E82  51AF               	movf	SDCARD_HCInitialize@response& (0+255),w,b
  6430  001E84  A4D8               	btfss	status,2,c
  6431  001E86  EF47  F00F         	goto	u4271
  6432  001E8A  EF49  F00F         	goto	u4270
  6433  001E8E                     u4271:
  6434  001E8E  EF51  F00F         	goto	l5170
  6435  001E92                     u4270:
  6436  001E92                     
  6437                           ; BSR set to: 0
  6438                           ;sdCard.c: 202:         printf("Successfully Initialized SD Card\r\n");
  6439  001E92  0EF5               	movlw	low STR_100
  6440  001E94  6F9D               	movwf	printf@fmt& (0+255),b
  6441  001E96  0EFC               	movlw	high STR_100
  6442  001E98  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  6443  001E9A  EC72  F014         	call	_printf	;wreg free
  6444                           
  6445                           ;sdCard.c: 204:     } else {
  6446  001E9E  EF57  F00F         	goto	l314
  6447  001EA2                     l5170:
  6448                           
  6449                           ; BSR set to: 0
  6450                           ;sdCard.c: 205:         printf("Error Initializing SD Card\r\n");
  6451  001EA2  0E7A               	movlw	low STR_101
  6452  001EA4  6F9D               	movwf	printf@fmt& (0+255),b
  6453  001EA6  0EFD               	movlw	high STR_101
  6454  001EA8  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  6455  001EAA  EC72  F014         	call	_printf	;wreg free
  6456  001EAE                     l314:
  6457  001EAE  0012               	return		;funcret
  6458  001EB0                     __end_of_SDCARD_HCInitialize:
  6459                           	opt callstack 0
  6460                           
  6461 ;; *************** function _SDCARD_SetIdle *****************
  6462 ;; Defined at:
  6463 ;;		line 217 in file "sdCard.c"
  6464 ;; Parameters:    Size  Location     Type
  6465 ;;  verbose         1    wreg     unsigned char 
  6466 ;; Auto vars:     Size  Location     Type
  6467 ;;  verbose         1   71[BANK0 ] unsigned char 
  6468 ;;  i               2   73[BANK0 ] int 
  6469 ;;  response        1   72[BANK0 ] unsigned char 
  6470 ;; Return value:  Size  Location     Type
  6471 ;;                  1    wreg      void 
  6472 ;; Registers used:
  6473 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6474 ;; Tracked objects:
  6475 ;;		On entry : 0/0
  6476 ;;		On exit  : 0/0
  6477 ;;		Unchanged: 0/0
  6478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6480 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6482 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6483 ;;Total ram usage:        4 bytes
  6484 ;; Hardware stack levels used:    1
  6485 ;; Hardware stack levels required when called:   13
  6486 ;; This function calls:
  6487 ;;		_SPI2_ExchangeByte
  6488 ;;		_printf
  6489 ;; This function is called by:
  6490 ;;		_SDCARD_HCInitialize
  6491 ;;		_SDCARD_Initialize
  6492 ;; This function uses a non-reentrant model
  6493 ;;
  6494                           
  6495                           	psect	text23
  6496  00221C                     __ptext23:
  6497                           	opt callstack 0
  6498  00221C                     _SDCARD_SetIdle:
  6499                           	opt callstack 16
  6500                           
  6501                           ;incstack = 0
  6502                           ;SDCARD_SetIdle@verbose stored from wreg
  6503  00221C  0100               	movlb	0	; () banked
  6504  00221E  6FA7               	movwf	SDCARD_SetIdle@verbose& (0+255),b
  6505  002220                     
  6506                           ;sdCard.c: 218:     uint8_t response;;sdCard.c: 221:     for(int i = 0; i < 10; i++) {
  6507  002220  0E00               	movlw	0
  6508  002222  0100               	movlb	0	; () banked
  6509  002224  6FAA               	movwf	(SDCARD_SetIdle@i+1)& (0+255),b
  6510  002226  0E00               	movlw	0
  6511  002228  6FA9               	movwf	SDCARD_SetIdle@i& (0+255),b
  6512  00222A                     l5086:
  6513                           
  6514                           ; BSR set to: 0
  6515                           ;sdCard.c: 222:         SPI2_ExchangeByte(0xFF);
  6516  00222A  0EFF               	movlw	255
  6517  00222C  ECD9  F014         	call	_SPI2_ExchangeByte
  6518  002230                     
  6519                           ;sdCard.c: 223:     }
  6520  002230  0100               	movlb	0	; () banked
  6521  002232  4BA9               	infsnz	SDCARD_SetIdle@i& (0+255),f,b
  6522  002234  2BAA               	incf	(SDCARD_SetIdle@i+1)& (0+255),f,b
  6523  002236                     
  6524                           ; BSR set to: 0
  6525  002236  BFAA               	btfsc	(SDCARD_SetIdle@i+1)& (0+255),7,b
  6526  002238  EF27  F011         	goto	u4231
  6527  00223C  51AA               	movf	(SDCARD_SetIdle@i+1)& (0+255),w,b
  6528  00223E  E109               	bnz	u4230
  6529  002240  0E0A               	movlw	10
  6530  002242  5DA9               	subwf	SDCARD_SetIdle@i& (0+255),w,b
  6531  002244  A0D8               	btfss	status,0,c
  6532  002246  EF27  F011         	goto	u4231
  6533  00224A  EF29  F011         	goto	u4230
  6534  00224E                     u4231:
  6535  00224E  EF15  F011         	goto	l5086
  6536  002252                     u4230:
  6537  002252                     
  6538                           ; BSR set to: 0
  6539  002252  988A               	bcf	138,4,c	;volatile
  6540  002254                     
  6541                           ; BSR set to: 0
  6542                           ;sdCard.c: 227:     SPI2_ExchangeByte(0xFF);
  6543  002254  0EFF               	movlw	255
  6544  002256  ECD9  F014         	call	_SPI2_ExchangeByte
  6545                           
  6546                           ;sdCard.c: 228:     SPI2_ExchangeByte(0x40);
  6547  00225A  0E40               	movlw	64
  6548  00225C  ECD9  F014         	call	_SPI2_ExchangeByte
  6549                           
  6550                           ;sdCard.c: 229:     SPI2_ExchangeByte(0x00);
  6551  002260  0E00               	movlw	0
  6552  002262  ECD9  F014         	call	_SPI2_ExchangeByte
  6553                           
  6554                           ;sdCard.c: 230:     SPI2_ExchangeByte(0x00);
  6555  002266  0E00               	movlw	0
  6556  002268  ECD9  F014         	call	_SPI2_ExchangeByte
  6557                           
  6558                           ;sdCard.c: 231:     SPI2_ExchangeByte(0x00);
  6559  00226C  0E00               	movlw	0
  6560  00226E  ECD9  F014         	call	_SPI2_ExchangeByte
  6561                           
  6562                           ;sdCard.c: 232:     SPI2_ExchangeByte(0x00);
  6563  002272  0E00               	movlw	0
  6564  002274  ECD9  F014         	call	_SPI2_ExchangeByte
  6565                           
  6566                           ;sdCard.c: 233:     SPI2_ExchangeByte(0x95);
  6567  002278  0E95               	movlw	149
  6568  00227A  ECD9  F014         	call	_SPI2_ExchangeByte
  6569                           
  6570                           ;sdCard.c: 234:     SPI2_ExchangeByte(0xFF);
  6571  00227E  0EFF               	movlw	255
  6572  002280  ECD9  F014         	call	_SPI2_ExchangeByte
  6573                           
  6574                           ;sdCard.c: 235:     response = SPI2_ExchangeByte(0xFF);
  6575  002284  0EFF               	movlw	255
  6576  002286  ECD9  F014         	call	_SPI2_ExchangeByte
  6577  00228A  0100               	movlb	0	; () banked
  6578  00228C  6FA8               	movwf	SDCARD_SetIdle@response& (0+255),b
  6579  00228E                     
  6580                           ; BSR set to: 0
  6581  00228E  888A               	bsf	138,4,c	;volatile
  6582  002290                     
  6583                           ; BSR set to: 0
  6584                           ;sdCard.c: 238:     if (verbose == 1) printf("CMD0, Reset Response: %x\r\n", response);
  6585  002290  05A7               	decf	SDCARD_SetIdle@verbose& (0+255),w,b
  6586  002292  A4D8               	btfss	status,2,c
  6587  002294  EF4E  F011         	goto	u4241
  6588  002298  EF50  F011         	goto	u4240
  6589  00229C                     u4241:
  6590  00229C  EF59  F011         	goto	l324
  6591  0022A0                     u4240:
  6592  0022A0                     
  6593                           ; BSR set to: 0
  6594  0022A0  0EED               	movlw	low STR_102
  6595  0022A2  6F9D               	movwf	printf@fmt& (0+255),b
  6596  0022A4  0EFD               	movlw	high STR_102
  6597  0022A6  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  6598  0022A8  C0A8  F09F         	movff	SDCARD_SetIdle@response,?_printf+2
  6599  0022AC  6BA0               	clrf	(?_printf+3)& (0+255),b
  6600  0022AE  EC72  F014         	call	_printf	;wreg free
  6601  0022B2                     l324:
  6602  0022B2  0012               	return		;funcret
  6603  0022B4                     __end_of_SDCARD_SetIdle:
  6604                           	opt callstack 0
  6605                           
  6606 ;; *************** function _printf *****************
  6607 ;; Defined at:
  6608 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  6609 ;; Parameters:    Size  Location     Type
  6610 ;;  fmt             2   61[BANK0 ] PTR const unsigned char 
  6611 ;;		 -> STR_113(3), STR_112(3), STR_111(2), STR_110(4), 
  6612 ;;		 -> STR_109(6), STR_108(3), STR_107(3), STR_106(2), 
  6613 ;;		 -> STR_105(3), STR_104(2), STR_103(4), STR_102(27), 
  6614 ;;		 -> STR_101(29), STR_100(35), STR_99(23), STR_98(22), 
  6615 ;;		 -> STR_97(21), STR_96(3), STR_95(3), STR_94(28), 
  6616 ;;		 -> STR_93(26), STR_92(17), STR_91(10), STR_90(10), 
  6617 ;;		 -> STR_89(14), STR_88(58), STR_87(16), STR_86(24), 
  6618 ;;		 -> STR_85(18), STR_84(29), STR_83(58), STR_82(3), 
  6619 ;;		 -> STR_81(47), STR_80(35), STR_79(5), STR_78(25), 
  6620 ;;		 -> STR_77(16), STR_76(71), STR_75(46), STR_74(18), 
  6621 ;;		 -> STR_73(29), STR_72(58), STR_71(3), STR_70(68), 
  6622 ;;		 -> STR_69(57), STR_68(17), STR_67(3), STR_66(5), 
  6623 ;;		 -> STR_65(2), STR_64(5), STR_63(17), STR_62(15), 
  6624 ;;		 -> STR_61(3), STR_60(5), STR_59(2), STR_58(5), 
  6625 ;;		 -> STR_57(17), STR_56(15), STR_55(20), STR_54(78), 
  6626 ;;		 -> STR_53(46), STR_52(3), STR_51(5), STR_50(2), 
  6627 ;;		 -> STR_49(5), STR_48(17), STR_47(15), STR_46(3), 
  6628 ;;		 -> STR_45(5), STR_44(2), STR_43(5), STR_42(17), 
  6629 ;;		 -> STR_41(15), STR_40(3), STR_39(5), STR_38(2), 
  6630 ;;		 -> STR_37(5), STR_36(19), STR_35(11), STR_34(11), 
  6631 ;;		 -> STR_33(29), STR_32(42), STR_31(2), STR_30(2), 
  6632 ;;		 -> STR_29(8), STR_28(52), STR_27(46), STR_26(42), 
  6633 ;;		 -> STR_25(50), STR_24(52), STR_23(32), STR_22(52), 
  6634 ;;		 -> STR_21(55), STR_20(43), STR_19(37), STR_18(52), 
  6635 ;;		 -> STR_17(24), STR_16(52), STR_15(24), STR_14(21), 
  6636 ;;		 -> STR_13(7), STR_12(15), STR_11(52), STR_10(3), 
  6637 ;;		 -> STR_9(5), STR_8(2), STR_7(5), STR_6(19), 
  6638 ;;		 -> STR_5(54), STR_4(5), STR_3(31), STR_2(18), 
  6639 ;;		 -> STR_1(20), 
  6640 ;; Auto vars:     Size  Location     Type
  6641 ;;  ap              2   69[BANK0 ] PTR void [1]
  6642 ;;		 -> ?_printf(2), 
  6643 ;;  ret             2    0        int 
  6644 ;; Return value:  Size  Location     Type
  6645 ;;                  2   61[BANK0 ] int 
  6646 ;; Registers used:
  6647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6648 ;; Tracked objects:
  6649 ;;		On entry : 0/0
  6650 ;;		On exit  : 0/0
  6651 ;;		Unchanged: 0/0
  6652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6653 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6654 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6656 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6657 ;;Total ram usage:       10 bytes
  6658 ;; Hardware stack levels used:    1
  6659 ;; Hardware stack levels required when called:   12
  6660 ;; This function calls:
  6661 ;;		_vfprintf
  6662 ;; This function is called by:
  6663 ;;		_main
  6664 ;;		_SDCARD_HCInitialize
  6665 ;;		_SDCARD_SetIdle
  6666 ;;		_hexDumpBuffer
  6667 ;;		_SDCARD_Initialize
  6668 ;; This function uses a non-reentrant model
  6669 ;;
  6670                           
  6671                           	psect	text24
  6672  0028E4                     __ptext24:
  6673                           	opt callstack 0
  6674  0028E4                     _printf:
  6675                           	opt callstack 18
  6676  0028E4  0E9F               	movlw	low (?_printf+2)
  6677  0028E6  0100               	movlb	0	; () banked
  6678  0028E8  6FA5               	movwf	printf@ap& (0+255),b
  6679  0028EA  0E00               	movlw	high (?_printf+2)
  6680  0028EC  6FA6               	movwf	(printf@ap+1)& (0+255),b
  6681  0028EE                     
  6682                           ; BSR set to: 0
  6683  0028EE  0E00               	movlw	0
  6684  0028F0  6F95               	movwf	vfprintf@fp& (0+255),b
  6685  0028F2  0E00               	movlw	0
  6686  0028F4  6F96               	movwf	(vfprintf@fp+1)& (0+255),b
  6687  0028F6  C09D  F097         	movff	printf@fmt,vfprintf@fmt
  6688  0028FA  C09E  F098         	movff	printf@fmt+1,vfprintf@fmt+1
  6689  0028FE  0EA5               	movlw	low printf@ap
  6690  002900  6F99               	movwf	vfprintf@ap& (0+255),b
  6691  002902  0E00               	movlw	high printf@ap
  6692  002904  6F9A               	movwf	(vfprintf@ap+1)& (0+255),b
  6693  002906  EC1F  F012         	call	_vfprintf	;wreg free
  6694  00290A  0012               	return		;funcret
  6695  00290C                     __end_of_printf:
  6696                           	opt callstack 0
  6697                           
  6698 ;; *************** function _vfprintf *****************
  6699 ;; Defined at:
  6700 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6701 ;; Parameters:    Size  Location     Type
  6702 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
  6703 ;;		 -> NULL(0), 
  6704 ;;  fmt             2   55[BANK0 ] PTR const unsigned char 
  6705 ;;		 -> STR_113(3), STR_112(3), STR_111(2), STR_110(4), 
  6706 ;;		 -> STR_109(6), STR_108(3), STR_107(3), STR_106(2), 
  6707 ;;		 -> STR_105(3), STR_104(2), STR_103(4), STR_102(27), 
  6708 ;;		 -> STR_101(29), STR_100(35), STR_99(23), STR_98(22), 
  6709 ;;		 -> STR_97(21), STR_96(3), STR_95(3), STR_94(28), 
  6710 ;;		 -> STR_93(26), STR_92(17), STR_91(10), STR_90(10), 
  6711 ;;		 -> STR_89(14), STR_88(58), STR_87(16), STR_86(24), 
  6712 ;;		 -> STR_85(18), STR_84(29), STR_83(58), STR_82(3), 
  6713 ;;		 -> STR_81(47), STR_80(35), STR_79(5), STR_78(25), 
  6714 ;;		 -> STR_77(16), STR_76(71), STR_75(46), STR_74(18), 
  6715 ;;		 -> STR_73(29), STR_72(58), STR_71(3), STR_70(68), 
  6716 ;;		 -> STR_69(57), STR_68(17), STR_67(3), STR_66(5), 
  6717 ;;		 -> STR_65(2), STR_64(5), STR_63(17), STR_62(15), 
  6718 ;;		 -> STR_61(3), STR_60(5), STR_59(2), STR_58(5), 
  6719 ;;		 -> STR_57(17), STR_56(15), STR_55(20), STR_54(78), 
  6720 ;;		 -> STR_53(46), STR_52(3), STR_51(5), STR_50(2), 
  6721 ;;		 -> STR_49(5), STR_48(17), STR_47(15), STR_46(3), 
  6722 ;;		 -> STR_45(5), STR_44(2), STR_43(5), STR_42(17), 
  6723 ;;		 -> STR_41(15), STR_40(3), STR_39(5), STR_38(2), 
  6724 ;;		 -> STR_37(5), STR_36(19), STR_35(11), STR_34(11), 
  6725 ;;		 -> STR_33(29), STR_32(42), STR_31(2), STR_30(2), 
  6726 ;;		 -> STR_29(8), STR_28(52), STR_27(46), STR_26(42), 
  6727 ;;		 -> STR_25(50), STR_24(52), STR_23(32), STR_22(52), 
  6728 ;;		 -> STR_21(55), STR_20(43), STR_19(37), STR_18(52), 
  6729 ;;		 -> STR_17(24), STR_16(52), STR_15(24), STR_14(21), 
  6730 ;;		 -> STR_13(7), STR_12(15), STR_11(52), STR_10(3), 
  6731 ;;		 -> STR_9(5), STR_8(2), STR_7(5), STR_6(19), 
  6732 ;;		 -> STR_5(54), STR_4(5), STR_3(31), STR_2(18), 
  6733 ;;		 -> STR_1(20), 
  6734 ;;  ap              2   57[BANK0 ] PTR PTR void 
  6735 ;;		 -> printf@ap(2), 
  6736 ;; Auto vars:     Size  Location     Type
  6737 ;;  cfmt            2   59[BANK0 ] PTR unsigned char 
  6738 ;;		 -> STR_113(3), STR_112(3), STR_111(2), STR_110(4), 
  6739 ;;		 -> STR_109(6), STR_108(3), STR_107(3), STR_106(2), 
  6740 ;;		 -> STR_105(3), STR_104(2), STR_103(4), STR_102(27), 
  6741 ;;		 -> STR_101(29), STR_100(35), STR_99(23), STR_98(22), 
  6742 ;;		 -> STR_97(21), STR_96(3), STR_95(3), STR_94(28), 
  6743 ;;		 -> STR_93(26), STR_92(17), STR_91(10), STR_90(10), 
  6744 ;;		 -> STR_89(14), STR_88(58), STR_87(16), STR_86(24), 
  6745 ;;		 -> STR_85(18), STR_84(29), STR_83(58), STR_82(3), 
  6746 ;;		 -> STR_81(47), STR_80(35), STR_79(5), STR_78(25), 
  6747 ;;		 -> STR_77(16), STR_76(71), STR_75(46), STR_74(18), 
  6748 ;;		 -> STR_73(29), STR_72(58), STR_71(3), STR_70(68), 
  6749 ;;		 -> STR_69(57), STR_68(17), STR_67(3), STR_66(5), 
  6750 ;;		 -> STR_65(2), STR_64(5), STR_63(17), STR_62(15), 
  6751 ;;		 -> STR_61(3), STR_60(5), STR_59(2), STR_58(5), 
  6752 ;;		 -> STR_57(17), STR_56(15), STR_55(20), STR_54(78), 
  6753 ;;		 -> STR_53(46), STR_52(3), STR_51(5), STR_50(2), 
  6754 ;;		 -> STR_49(5), STR_48(17), STR_47(15), STR_46(3), 
  6755 ;;		 -> STR_45(5), STR_44(2), STR_43(5), STR_42(17), 
  6756 ;;		 -> STR_41(15), STR_40(3), STR_39(5), STR_38(2), 
  6757 ;;		 -> STR_37(5), STR_36(19), STR_35(11), STR_34(11), 
  6758 ;;		 -> STR_33(29), STR_32(42), STR_31(2), STR_30(2), 
  6759 ;;		 -> STR_29(8), STR_28(52), STR_27(46), STR_26(42), 
  6760 ;;		 -> STR_25(50), STR_24(52), STR_23(32), STR_22(52), 
  6761 ;;		 -> STR_21(55), STR_20(43), STR_19(37), STR_18(52), 
  6762 ;;		 -> STR_17(24), STR_16(52), STR_15(24), STR_14(21), 
  6763 ;;		 -> STR_13(7), STR_12(15), STR_11(52), STR_10(3), 
  6764 ;;		 -> STR_9(5), STR_8(2), STR_7(5), STR_6(19), 
  6765 ;;		 -> STR_5(54), STR_4(5), STR_3(31), STR_2(18), 
  6766 ;;		 -> STR_1(20), 
  6767 ;; Return value:  Size  Location     Type
  6768 ;;                  2   53[BANK0 ] int 
  6769 ;; Registers used:
  6770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6771 ;; Tracked objects:
  6772 ;;		On entry : 0/0
  6773 ;;		On exit  : 0/0
  6774 ;;		Unchanged: 0/0
  6775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6776 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6777 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6779 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6780 ;;Total ram usage:        8 bytes
  6781 ;; Hardware stack levels used:    1
  6782 ;; Hardware stack levels required when called:   11
  6783 ;; This function calls:
  6784 ;;		_vfpfcnvrt
  6785 ;; This function is called by:
  6786 ;;		_printf
  6787 ;; This function uses a non-reentrant model
  6788 ;;
  6789                           
  6790                           	psect	text25
  6791  00243E                     __ptext25:
  6792                           	opt callstack 0
  6793  00243E                     _vfprintf:
  6794                           	opt callstack 18
  6795  00243E                     
  6796                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  6797  00243E  C097  F09B         	movff	vfprintf@fmt,vfprintf@cfmt
  6798  002442  C098  F09C         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6799  002446                     
  6800                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  6801  002446  0E00               	movlw	0
  6802  002448  0100               	movlb	0	; () banked
  6803  00244A  6FC4               	movwf	(_nout+1)& (0+255),b
  6804  00244C  0E00               	movlw	0
  6805  00244E  6FC3               	movwf	_nout& (0+255),b
  6806                           
  6807                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6808  002450  EF3D  F012         	goto	l5072
  6809  002454                     l5070:
  6810                           
  6811                           ; BSR set to: 0
  6812                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  6813  002454  C095  F039         	movff	vfprintf@fp,vfpfcnvrt@fp
  6814  002458  C096  F03A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6815  00245C  0E9B               	movlw	low vfprintf@cfmt
  6816  00245E  6E3B               	movwf	vfpfcnvrt@fmt^0,c
  6817  002460  0E00               	movlw	high vfprintf@cfmt
  6818  002462  6E3C               	movwf	(vfpfcnvrt@fmt+1)^0,c
  6819  002464  C099  F03D         	movff	vfprintf@ap,vfpfcnvrt@ap
  6820  002468  C09A  F03E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6821  00246C  ECED  F005         	call	_vfpfcnvrt	;wreg free
  6822  002470  5039               	movf	?_vfpfcnvrt^0,w,c
  6823  002472  0100               	movlb	0	; () banked
  6824  002474  27C3               	addwf	_nout& (0+255),f,b
  6825  002476  503A               	movf	(?_vfpfcnvrt+1)^0,w,c
  6826  002478  23C4               	addwfc	(_nout+1)& (0+255),f,b
  6827  00247A                     l5072:
  6828                           
  6829                           ; BSR set to: 0
  6830                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6831  00247A  C09B  FFF6         	movff	vfprintf@cfmt,tblptrl
  6832  00247E  C09C  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6833  002482                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6834  002482  6AF8               	clrf	tblptru,c
  6835  002484                     	endif
  6836  002484                     	if	0	;tblptru may be non-zero
  6837  002484                     	endif
  6838  002484  0008               	tblrd		*
  6839  002486  50F5               	movf	tablat,w,c
  6840  002488  0900               	iorlw	0
  6841  00248A  A4D8               	btfss	status,2,c
  6842  00248C  EF4A  F012         	goto	u4221
  6843  002490  EF4C  F012         	goto	u4220
  6844  002494                     u4221:
  6845  002494  EF2A  F012         	goto	l5070
  6846  002498                     u4220:
  6847  002498                     
  6848                           ; BSR set to: 0
  6849                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  6850  002498  C0C3  F095         	movff	_nout,?_vfprintf
  6851  00249C  C0C4  F096         	movff	_nout+1,?_vfprintf+1
  6852  0024A0                     
  6853                           ; BSR set to: 0
  6854  0024A0  0012               	return		;funcret
  6855  0024A2                     __end_of_vfprintf:
  6856                           	opt callstack 0
  6857                           
  6858 ;; *************** function _vfpfcnvrt *****************
  6859 ;; Defined at:
  6860 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6861 ;; Parameters:    Size  Location     Type
  6862 ;;  fp              2   56[COMRAM] PTR struct _IO_FILE
  6863 ;;		 -> NULL(0), 
  6864 ;;  fmt             2   58[COMRAM] PTR PTR unsigned char 
  6865 ;;		 -> vfprintf@cfmt(2), 
  6866 ;;  ap              2   60[COMRAM] PTR PTR void 
  6867 ;;		 -> printf@ap(2), 
  6868 ;; Auto vars:     Size  Location     Type
  6869 ;;  llu             8   40[BANK0 ] unsigned long long 
  6870 ;;  ll              8   32[BANK0 ] long long 
  6871 ;;  f               4    0        long long 
  6872 ;;  vp              3    0        PTR void 
  6873 ;;  ct              3    0        unsigned char [3]
  6874 ;;  cp              3    0        PTR unsigned char 
  6875 ;;  done            2   48[BANK0 ] int 
  6876 ;;  i               2    0        int 
  6877 ;;  c               1   52[BANK0 ] unsigned char 
  6878 ;; Return value:  Size  Location     Type
  6879 ;;                  2   56[COMRAM] int 
  6880 ;; Registers used:
  6881 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6882 ;; Tracked objects:
  6883 ;;		On entry : 0/0
  6884 ;;		On exit  : 0/0
  6885 ;;		Unchanged: 0/0
  6886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6887 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6888 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6889 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6890 ;;      Totals:         6      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6891 ;;Total ram usage:       31 bytes
  6892 ;; Hardware stack levels used:    1
  6893 ;; Hardware stack levels required when called:   10
  6894 ;; This function calls:
  6895 ;;		_atoi
  6896 ;;		_ctoa
  6897 ;;		_dtoa
  6898 ;;		_fputc
  6899 ;;		_isdigit
  6900 ;;		_xtoa
  6901 ;; This function is called by:
  6902 ;;		_vfprintf
  6903 ;; This function uses a non-reentrant model
  6904 ;;
  6905                           
  6906                           	psect	text26
  6907  000BDA                     __ptext26:
  6908                           	opt callstack 0
  6909  000BDA                     _vfpfcnvrt:
  6910                           	opt callstack 18
  6911  000BDA                     
  6912                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  6913  000BDA  C03B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6914  000BDE  C03C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6915  000BE2  CFDE FFF6          	movff	postinc2,tblptrl
  6916  000BE6  CFDD FFF7          	movff	postdec2,tblptrh
  6917  000BEA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6918  000BEA  6AF8               	clrf	tblptru,c
  6919  000BEC                     	endif
  6920  000BEC                     	if	0	;tblptru may be non-zero
  6921  000BEC                     	endif
  6922  000BEC  0008               	tblrd		*
  6923  000BEE  50F5               	movf	tablat,w,c
  6924  000BF0  0A25               	xorlw	37
  6925  000BF2  A4D8               	btfss	status,2,c
  6926  000BF4  EFFE  F005         	goto	u4081
  6927  000BF8  EF00  F006         	goto	u4080
  6928  000BFC                     u4081:
  6929  000BFC  EF3D  F008         	goto	l5050
  6930  000C00                     u4080:
  6931  000C00                     
  6932                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  6933  000C00  C03B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6934  000C04  C03C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6935  000C08  2ADE               	incf	postinc2,f,c
  6936  000C0A  0E00               	movlw	0
  6937  000C0C  22DD               	addwfc	postdec2,f,c
  6938  000C0E                     
  6939                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  6940  000C0E  0E00               	movlw	0
  6941  000C10  6E40               	movwf	(_width+1)^0,c
  6942  000C12  0E00               	movlw	0
  6943  000C14  6E3F               	movwf	_width^0,c
  6944  000C16  C03F  F043         	movff	_width,_flags
  6945  000C1A  C040  F044         	movff	_width+1,_flags+1
  6946  000C1E                     
  6947                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  6948  000C1E  6841               	setf	_prec^0,c
  6949  000C20  6842               	setf	(_prec+1)^0,c
  6950  000C22                     
  6951                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  6952  000C22  0E00               	movlw	0
  6953  000C24  0100               	movlb	0	; () banked
  6954  000C26  6F91               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  6955  000C28  0E00               	movlw	0
  6956  000C2A  6F90               	movwf	vfpfcnvrt@done& (0+255),b
  6957                           
  6958                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  6959  000C2C  EF5F  F006         	goto	l4980
  6960  000C30                     l4954:
  6961                           
  6962                           ; BSR set to: 0
  6963                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  6964  000C30  8043               	bsf	_flags^0,0,c
  6965  000C32                     l4956:
  6966                           
  6967                           ; BSR set to: 0
  6968                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  6969  000C32  C03B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6970  000C36  C03C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6971  000C3A  2ADE               	incf	postinc2,f,c
  6972  000C3C  0E00               	movlw	0
  6973  000C3E  22DD               	addwfc	postdec2,f,c
  6974                           
  6975                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  6976  000C40  EF5F  F006         	goto	l4980
  6977  000C44                     l4958:
  6978                           
  6979                           ; BSR set to: 0
  6980                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  6981  000C44  8243               	bsf	_flags^0,1,c
  6982  000C46  EF19  F006         	goto	l4956
  6983  000C4A                     l4962:
  6984                           
  6985                           ; BSR set to: 0
  6986                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  6987  000C4A  8443               	bsf	_flags^0,2,c
  6988  000C4C  EF19  F006         	goto	l4956
  6989  000C50                     l4966:
  6990                           
  6991                           ; BSR set to: 0
  6992                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  6993  000C50  8643               	bsf	_flags^0,3,c
  6994  000C52  EF19  F006         	goto	l4956
  6995  000C56                     l4970:
  6996                           
  6997                           ; BSR set to: 0
  6998                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  6999  000C56  8843               	bsf	_flags^0,4,c
  7000  000C58  EF19  F006         	goto	l4956
  7001  000C5C                     l4974:
  7002                           
  7003                           ; BSR set to: 0
  7004                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  7005  000C5C  0E00               	movlw	0
  7006  000C5E  6F91               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  7007  000C60  0E01               	movlw	1
  7008  000C62  6F90               	movwf	vfpfcnvrt@done& (0+255),b
  7009                           
  7010                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  7011  000C64  EF5F  F006         	goto	l4980
  7012  000C68                     l4978:
  7013                           
  7014                           ; BSR set to: 0
  7015  000C68  C03B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7016  000C6C  C03C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7017  000C70  CFDE FFF6          	movff	postinc2,tblptrl
  7018  000C74  CFDD FFF7          	movff	postdec2,tblptrh
  7019  000C78                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7020  000C78  6AF8               	clrf	tblptru,c
  7021  000C7A                     	endif
  7022  000C7A                     	if	0	;tblptru may be non-zero
  7023  000C7A                     	endif
  7024  000C7A  0008               	tblrd		*
  7025  000C7C  50F5               	movf	tablat,w,c
  7026  000C7E  6F7C               	movwf	??_vfpfcnvrt& (0+255),b
  7027  000C80  6B7D               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  7028                           
  7029                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7030                           ; Switch size 1, requested type "simple"
  7031                           ; Number of cases is 1, Range of values is 0 to 0
  7032                           ; switch strategies available:
  7033                           ; Name         Instructions Cycles
  7034                           ; simple_byte            4     3 (average)
  7035                           ;	Chosen strategy is simple_byte
  7036  000C82  517D               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7037  000C84  0A00               	xorlw	0	; case 0
  7038  000C86  B4D8               	btfsc	status,2,c
  7039  000C88  EF48  F006         	goto	l5680
  7040  000C8C  EF2E  F006         	goto	l4974
  7041  000C90                     l5680:
  7042                           
  7043                           ; BSR set to: 0
  7044                           ; Switch size 1, requested type "simple"
  7045                           ; Number of cases is 5, Range of values is 32 to 48
  7046                           ; switch strategies available:
  7047                           ; Name         Instructions Cycles
  7048                           ; simple_byte           16     9 (average)
  7049                           ;	Chosen strategy is simple_byte
  7050  000C90  517C               	movf	??_vfpfcnvrt& (0+255),w,b
  7051  000C92  0A20               	xorlw	32	; case 32
  7052  000C94  B4D8               	btfsc	status,2,c
  7053  000C96  EF28  F006         	goto	l4966
  7054  000C9A  0A03               	xorlw	3	; case 35
  7055  000C9C  B4D8               	btfsc	status,2,c
  7056  000C9E  EF2B  F006         	goto	l4970
  7057  000CA2  0A08               	xorlw	8	; case 43
  7058  000CA4  B4D8               	btfsc	status,2,c
  7059  000CA6  EF25  F006         	goto	l4962
  7060  000CAA  0A06               	xorlw	6	; case 45
  7061  000CAC  B4D8               	btfsc	status,2,c
  7062  000CAE  EF18  F006         	goto	l4954
  7063  000CB2  0A1D               	xorlw	29	; case 48
  7064  000CB4  B4D8               	btfsc	status,2,c
  7065  000CB6  EF22  F006         	goto	l4958
  7066  000CBA  EF2E  F006         	goto	l4974
  7067  000CBE                     l4980:
  7068                           
  7069                           ; BSR set to: 0
  7070                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  7071  000CBE  5190               	movf	vfpfcnvrt@done& (0+255),w,b
  7072  000CC0  1191               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  7073  000CC2  B4D8               	btfsc	status,2,c
  7074  000CC4  EF66  F006         	goto	u4091
  7075  000CC8  EF68  F006         	goto	u4090
  7076  000CCC                     u4091:
  7077  000CCC  EF34  F006         	goto	l4978
  7078  000CD0                     u4090:
  7079  000CD0                     
  7080                           ; BSR set to: 0
  7081                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  7082  000CD0  A043               	btfss	_flags^0,0,c
  7083  000CD2  EF6D  F006         	goto	u4101
  7084  000CD6  EF6F  F006         	goto	u4100
  7085  000CDA                     u4101:
  7086  000CDA  EF70  F006         	goto	l4984
  7087  000CDE                     u4100:
  7088  000CDE                     
  7089                           ; BSR set to: 0
  7090                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  7091  000CDE  9243               	bcf	_flags^0,1,c
  7092  000CE0                     l4984:
  7093                           
  7094                           ; BSR set to: 0
  7095                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  7096  000CE0  C03B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7097  000CE4  C03C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7098  000CE8  CFDE FFF6          	movff	postinc2,tblptrl
  7099  000CEC  CFDD FFF7          	movff	postdec2,tblptrh
  7100  000CF0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7101  000CF0  6AF8               	clrf	tblptru,c
  7102  000CF2                     	endif
  7103  000CF2                     	if	0	;tblptru may be non-zero
  7104  000CF2                     	endif
  7105  000CF2  0008               	tblrd		*
  7106  000CF4  50F5               	movf	tablat,w,c
  7107  000CF6  0A2A               	xorlw	42
  7108  000CF8  A4D8               	btfss	status,2,c
  7109  000CFA  EF81  F006         	goto	u4111
  7110  000CFE  EF83  F006         	goto	u4110
  7111  000D02                     u4111:
  7112  000D02  EFAC  F006         	goto	l4992
  7113  000D06                     u4110:
  7114  000D06                     
  7115                           ; BSR set to: 0
  7116                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  7117  000D06  C03B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7118  000D0A  C03C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7119  000D0E  2ADE               	incf	postinc2,f,c
  7120  000D10  0E00               	movlw	0
  7121  000D12  22DD               	addwfc	postdec2,f,c
  7122                           
  7123                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  7124  000D14  C03D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7125  000D18  C03E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7126  000D1C  CFDF F07C          	movff	indf2,??_vfpfcnvrt
  7127  000D20  0E02               	movlw	2
  7128  000D22  26DE               	addwf	postinc2,f,c
  7129  000D24  CFDF F07D          	movff	indf2,??_vfpfcnvrt+1
  7130  000D28  0E00               	movlw	0
  7131  000D2A  22DD               	addwfc	postdec2,f,c
  7132  000D2C  C07C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7133  000D30  C07D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7134  000D34  CFDE F03F          	movff	postinc2,_width
  7135  000D38  CFDD F040          	movff	postdec2,_width+1
  7136  000D3C                     
  7137                           ; BSR set to: 0
  7138                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  7139  000D3C  BE40               	btfsc	(_width+1)^0,7,c
  7140  000D3E  EFA5  F006         	goto	u4120
  7141  000D42  EFA3  F006         	goto	u4121
  7142  000D46                     u4121:
  7143  000D46  EFF1  F006         	goto	l5002
  7144  000D4A                     u4120:
  7145  000D4A                     
  7146                           ; BSR set to: 0
  7147                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  7148  000D4A  8043               	bsf	_flags^0,0,c
  7149                           
  7150                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  7151  000D4C  6C3F               	negf	_width^0,c
  7152  000D4E  1E40               	comf	(_width+1)^0,f,c
  7153  000D50  B0D8               	btfsc	status,0,c
  7154  000D52  2A40               	incf	(_width+1)^0,f,c
  7155  000D54  EFF1  F006         	goto	l5002
  7156  000D58                     l4992:
  7157                           
  7158                           ; BSR set to: 0
  7159                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  7160  000D58  C03B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7161  000D5C  C03C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7162  000D60  CFDE F018          	movff	postinc2,atoi@s
  7163  000D64  CFDD F019          	movff	postdec2,atoi@s+1
  7164  000D68  EC04  F00D         	call	_atoi	;wreg free
  7165  000D6C  C018  F03F         	movff	?_atoi,_width
  7166  000D70  C019  F040         	movff	?_atoi+1,_width+1
  7167                           
  7168                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7169  000D74  EFC3  F006         	goto	l4996
  7170  000D78                     l4994:
  7171                           
  7172                           ; BSR set to: 0
  7173                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  7174  000D78  C03B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7175  000D7C  C03C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7176  000D80  2ADE               	incf	postinc2,f,c
  7177  000D82  0E00               	movlw	0
  7178  000D84  22DD               	addwfc	postdec2,f,c
  7179  000D86                     l4996:
  7180  000D86  0ED0               	movlw	208
  7181  000D88  0100               	movlb	0	; () banked
  7182  000D8A  6F7C               	movwf	??_vfpfcnvrt& (0+255),b
  7183  000D8C  0EFF               	movlw	255
  7184  000D8E  6F7D               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  7185  000D90  C03B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7186  000D94  C03C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7187  000D98  CFDE FFF6          	movff	postinc2,tblptrl
  7188  000D9C  CFDD FFF7          	movff	postdec2,tblptrh
  7189  000DA0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7190  000DA0  6AF8               	clrf	tblptru,c
  7191  000DA2                     	endif
  7192  000DA2                     	if	0	;tblptru may be non-zero
  7193  000DA2                     	endif
  7194  000DA2  0008               	tblrd		*
  7195  000DA4  50F5               	movf	tablat,w,c
  7196  000DA6  6F7E               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  7197  000DA8  6B7F               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  7198  000DAA  517C               	movf	??_vfpfcnvrt& (0+255),w,b
  7199  000DAC  277E               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  7200  000DAE  517D               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7201  000DB0  237F               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  7202  000DB2  517F               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  7203  000DB4  E10A               	bnz	u4130
  7204  000DB6  0E0A               	movlw	10
  7205  000DB8  5D7E               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  7206  000DBA  A0D8               	btfss	status,0,c
  7207  000DBC  EFE2  F006         	goto	u4131
  7208  000DC0  EFE5  F006         	goto	u4130
  7209  000DC4                     u4131:
  7210  000DC4  0E01               	movlw	1
  7211  000DC6  EFE6  F006         	goto	u4140
  7212  000DCA                     u4130:
  7213  000DCA  0E00               	movlw	0
  7214  000DCC                     u4140:
  7215  000DCC  6F92               	movwf	_vfpfcnvrt$1545& (0+255),b
  7216  000DCE  6B93               	clrf	(_vfpfcnvrt$1545+1)& (0+255),b
  7217  000DD0                     
  7218                           ; BSR set to: 0
  7219  000DD0  5192               	movf	_vfpfcnvrt$1545& (0+255),w,b
  7220  000DD2  1193               	iorwf	(_vfpfcnvrt$1545+1)& (0+255),w,b
  7221  000DD4  A4D8               	btfss	status,2,c
  7222  000DD6  EFEF  F006         	goto	u4151
  7223  000DDA  EFF1  F006         	goto	u4150
  7224  000DDE                     u4151:
  7225  000DDE  EFBC  F006         	goto	l4994
  7226  000DE2                     u4150:
  7227  000DE2                     l5002:
  7228                           
  7229                           ; BSR set to: 0
  7230                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  7231  000DE2  C03B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7232  000DE6  C03C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7233  000DEA  CFDE FFF6          	movff	postinc2,tblptrl
  7234  000DEE  CFDD FFF7          	movff	postdec2,tblptrh
  7235  000DF2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7236  000DF2  6AF8               	clrf	tblptru,c
  7237  000DF4                     	endif
  7238  000DF4                     	if	0	;tblptru may be non-zero
  7239  000DF4                     	endif
  7240  000DF4  0008               	tblrd		*
  7241  000DF6  50F5               	movf	tablat,w,c
  7242  000DF8  0A63               	xorlw	99
  7243  000DFA  A4D8               	btfss	status,2,c
  7244  000DFC  EF02  F007         	goto	u4161
  7245  000E00  EF04  F007         	goto	u4160
  7246  000E04                     u4161:
  7247  000E04  EF2B  F007         	goto	l5010
  7248  000E08                     u4160:
  7249  000E08                     
  7250                           ; BSR set to: 0
  7251                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  7252  000E08  C03B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7253  000E0C  C03C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7254  000E10  2ADE               	incf	postinc2,f,c
  7255  000E12  0E00               	movlw	0
  7256  000E14  22DD               	addwfc	postdec2,f,c
  7257                           
  7258                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  7259  000E16  C03D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7260  000E1A  C03E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7261  000E1E  CFDF F07C          	movff	indf2,??_vfpfcnvrt
  7262  000E22  0E02               	movlw	2
  7263  000E24  26DE               	addwf	postinc2,f,c
  7264  000E26  CFDF F07D          	movff	indf2,??_vfpfcnvrt+1
  7265  000E2A  0E00               	movlw	0
  7266  000E2C  22DD               	addwfc	postdec2,f,c
  7267  000E2E  C07C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7268  000E32  C07D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7269  000E36  50DF               	movf	indf2,w,c
  7270  000E38  6F94               	movwf	vfpfcnvrt@c& (0+255),b
  7271  000E3A                     
  7272                           ; BSR set to: 0
  7273                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  7274  000E3A  C039  F02E         	movff	vfpfcnvrt@fp,ctoa@fp
  7275  000E3E  C03A  F02F         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  7276  000E42  C094  F030         	movff	vfpfcnvrt@c,ctoa@c
  7277  000E46  EC80  F012         	call	_ctoa	;wreg free
  7278  000E4A  C02E  F039         	movff	?_ctoa,?_vfpfcnvrt
  7279  000E4E  C02F  F03A         	movff	?_ctoa+1,?_vfpfcnvrt+1
  7280  000E52  EF59  F008         	goto	l791
  7281  000E56                     l5010:
  7282                           
  7283                           ; BSR set to: 0
  7284                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  7285  000E56  C03B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7286  000E5A  C03C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7287  000E5E  CFDE FFF6          	movff	postinc2,tblptrl
  7288  000E62  CFDD FFF7          	movff	postdec2,tblptrh
  7289  000E66                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7290  000E66  6AF8               	clrf	tblptru,c
  7291  000E68                     	endif
  7292  000E68                     	if	0	;tblptru may be non-zero
  7293  000E68                     	endif
  7294  000E68  0008               	tblrd		*
  7295  000E6A  50F5               	movf	tablat,w,c
  7296  000E6C  0A64               	xorlw	100
  7297  000E6E  B4D8               	btfsc	status,2,c
  7298  000E70  EF3C  F007         	goto	u4171
  7299  000E74  EF3E  F007         	goto	u4170
  7300  000E78                     u4171:
  7301  000E78  EF51  F007         	goto	l5014
  7302  000E7C                     u4170:
  7303  000E7C                     
  7304                           ; BSR set to: 0
  7305  000E7C  C03B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7306  000E80  C03C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7307  000E84  CFDE FFF6          	movff	postinc2,tblptrl
  7308  000E88  CFDD FFF7          	movff	postdec2,tblptrh
  7309  000E8C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7310  000E8C  6AF8               	clrf	tblptru,c
  7311  000E8E                     	endif
  7312  000E8E                     	if	0	;tblptru may be non-zero
  7313  000E8E                     	endif
  7314  000E8E  0008               	tblrd		*
  7315  000E90  50F5               	movf	tablat,w,c
  7316  000E92  0A69               	xorlw	105
  7317  000E94  A4D8               	btfss	status,2,c
  7318  000E96  EF4F  F007         	goto	u4181
  7319  000E9A  EF51  F007         	goto	u4180
  7320  000E9E                     u4181:
  7321  000E9E  EF91  F007         	goto	l5020
  7322  000EA2                     u4180:
  7323  000EA2                     l5014:
  7324                           
  7325                           ; BSR set to: 0
  7326                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  7327  000EA2  C03B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7328  000EA6  C03C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7329  000EAA  2ADE               	incf	postinc2,f,c
  7330  000EAC  0E00               	movlw	0
  7331  000EAE  22DD               	addwfc	postdec2,f,c
  7332                           
  7333                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  7334  000EB0  C03D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7335  000EB4  C03E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7336  000EB8  CFDF F07C          	movff	indf2,??_vfpfcnvrt
  7337  000EBC  0E02               	movlw	2
  7338  000EBE  26DE               	addwf	postinc2,f,c
  7339  000EC0  CFDF F07D          	movff	indf2,??_vfpfcnvrt+1
  7340  000EC4  0E00               	movlw	0
  7341  000EC6  22DD               	addwfc	postdec2,f,c
  7342  000EC8  C07C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7343  000ECC  C07D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7344  000ED0  CFDE F080          	movff	postinc2,vfpfcnvrt@ll
  7345  000ED4  CFDD F081          	movff	postdec2,vfpfcnvrt@ll+1
  7346  000ED8  0E00               	movlw	0
  7347  000EDA  BF81               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  7348  000EDC  0EFF               	movlw	-1
  7349  000EDE  6F82               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  7350  000EE0  6F83               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  7351  000EE2  6F84               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  7352  000EE4  6F85               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  7353  000EE6  6F86               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  7354  000EE8  6F87               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  7355  000EEA                     
  7356                           ; BSR set to: 0
  7357                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  7358  000EEA  C039  F02E         	movff	vfpfcnvrt@fp,dtoa@fp
  7359  000EEE  C03A  F02F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  7360  000EF2  C080  F030         	movff	vfpfcnvrt@ll,dtoa@d
  7361  000EF6  C081  F031         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  7362  000EFA  C082  F032         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  7363  000EFE  C083  F033         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  7364  000F02  C084  F034         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  7365  000F06  C085  F035         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  7366  000F0A  C086  F036         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  7367  000F0E  C087  F037         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  7368  000F12  EC5A  F008         	call	_dtoa	;wreg free
  7369  000F16  C02E  F039         	movff	?_dtoa,?_vfpfcnvrt
  7370  000F1A  C02F  F03A         	movff	?_dtoa+1,?_vfpfcnvrt+1
  7371  000F1E  EF59  F008         	goto	l791
  7372  000F22                     l5020:
  7373                           
  7374                           ; BSR set to: 0
  7375                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  7376  000F22  C03B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7377  000F26  C03C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7378  000F2A  CFDE FFF6          	movff	postinc2,tblptrl
  7379  000F2E  CFDD FFF7          	movff	postdec2,tblptrh
  7380  000F32                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7381  000F32  6AF8               	clrf	tblptru,c
  7382  000F34                     	endif
  7383  000F34                     	if	0	;tblptru may be non-zero
  7384  000F34                     	endif
  7385  000F34  0008               	tblrd		*
  7386  000F36  50F5               	movf	tablat,w,c
  7387  000F38  0A78               	xorlw	120
  7388  000F3A  B4D8               	btfsc	status,2,c
  7389  000F3C  EFA2  F007         	goto	u4191
  7390  000F40  EFA4  F007         	goto	u4190
  7391  000F44                     u4191:
  7392  000F44  EFB7  F007         	goto	l5024
  7393  000F48                     u4190:
  7394  000F48                     
  7395                           ; BSR set to: 0
  7396  000F48  C03B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7397  000F4C  C03C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7398  000F50  CFDE FFF6          	movff	postinc2,tblptrl
  7399  000F54  CFDD FFF7          	movff	postdec2,tblptrh
  7400  000F58                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7401  000F58  6AF8               	clrf	tblptru,c
  7402  000F5A                     	endif
  7403  000F5A                     	if	0	;tblptru may be non-zero
  7404  000F5A                     	endif
  7405  000F5A  0008               	tblrd		*
  7406  000F5C  50F5               	movf	tablat,w,c
  7407  000F5E  0A58               	xorlw	88
  7408  000F60  A4D8               	btfss	status,2,c
  7409  000F62  EFB5  F007         	goto	u4201
  7410  000F66  EFB7  F007         	goto	u4200
  7411  000F6A                     u4201:
  7412  000F6A  EF06  F008         	goto	l5034
  7413  000F6E                     u4200:
  7414  000F6E                     l5024:
  7415                           
  7416                           ; BSR set to: 0
  7417                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  7418  000F6E  C03B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7419  000F72  C03C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7420  000F76  CFDE FFF6          	movff	postinc2,tblptrl
  7421  000F7A  CFDD FFF7          	movff	postdec2,tblptrh
  7422  000F7E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7423  000F7E  6AF8               	clrf	tblptru,c
  7424  000F80                     	endif
  7425  000F80                     	if	0	;tblptru may be non-zero
  7426  000F80                     	endif
  7427  000F80  0008               	tblrd		*
  7428  000F82  CFF5 F094          	movff	tablat,vfpfcnvrt@c
  7429  000F86                     
  7430                           ; BSR set to: 0
  7431                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  7432  000F86  C03B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7433  000F8A  C03C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7434  000F8E  2ADE               	incf	postinc2,f,c
  7435  000F90  0E00               	movlw	0
  7436  000F92  22DD               	addwfc	postdec2,f,c
  7437  000F94                     
  7438                           ; BSR set to: 0
  7439                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  7440  000F94  C03D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7441  000F98  C03E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7442  000F9C  CFDF F07C          	movff	indf2,??_vfpfcnvrt
  7443  000FA0  0E02               	movlw	2
  7444  000FA2  26DE               	addwf	postinc2,f,c
  7445  000FA4  CFDF F07D          	movff	indf2,??_vfpfcnvrt+1
  7446  000FA8  0E00               	movlw	0
  7447  000FAA  22DD               	addwfc	postdec2,f,c
  7448  000FAC  C07C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7449  000FB0  C07D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7450  000FB4  CFDE F07E          	movff	postinc2,??_vfpfcnvrt+2
  7451  000FB8  CFDD F07F          	movff	postdec2,??_vfpfcnvrt+3
  7452  000FBC  C07E  F088         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  7453  000FC0  C07F  F089         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  7454  000FC4  6B8A               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  7455  000FC6  6B8B               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  7456  000FC8  6B8C               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  7457  000FCA  6B8D               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  7458  000FCC  6B8E               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  7459  000FCE  6B8F               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  7460  000FD0                     
  7461                           ; BSR set to: 0
  7462                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  7463  000FD0  C039  F02E         	movff	vfpfcnvrt@fp,xtoa@fp
  7464  000FD4  C03A  F02F         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  7465  000FD8  C088  F030         	movff	vfpfcnvrt@llu,xtoa@d
  7466  000FDC  C089  F031         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  7467  000FE0  C08A  F032         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  7468  000FE4  C08B  F033         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  7469  000FE8  C08C  F034         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  7470  000FEC  C08D  F035         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  7471  000FF0  C08E  F036         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  7472  000FF4  C08F  F037         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  7473  000FF8  C094  F038         	movff	vfpfcnvrt@c,xtoa@x
  7474  000FFC  ECCB  F009         	call	_xtoa	;wreg free
  7475  001000  C02E  F039         	movff	?_xtoa,?_vfpfcnvrt
  7476  001004  C02F  F03A         	movff	?_xtoa+1,?_vfpfcnvrt+1
  7477  001008  EF59  F008         	goto	l791
  7478  00100C                     l5034:
  7479                           
  7480                           ; BSR set to: 0
  7481                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  7482  00100C  C03B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7483  001010  C03C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7484  001014  CFDE FFF6          	movff	postinc2,tblptrl
  7485  001018  CFDD FFF7          	movff	postdec2,tblptrh
  7486  00101C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7487  00101C  6AF8               	clrf	tblptru,c
  7488  00101E                     	endif
  7489  00101E                     	if	0	;tblptru may be non-zero
  7490  00101E                     	endif
  7491  00101E  0008               	tblrd		*
  7492  001020  50F5               	movf	tablat,w,c
  7493  001022  0A25               	xorlw	37
  7494  001024  A4D8               	btfss	status,2,c
  7495  001026  EF17  F008         	goto	u4211
  7496  00102A  EF19  F008         	goto	u4210
  7497  00102E                     u4211:
  7498  00102E  EF30  F008         	goto	l5044
  7499  001032                     u4210:
  7500  001032                     
  7501                           ; BSR set to: 0
  7502                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  7503  001032  C03B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7504  001036  C03C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7505  00103A  2ADE               	incf	postinc2,f,c
  7506  00103C  0E00               	movlw	0
  7507  00103E  22DD               	addwfc	postdec2,f,c
  7508  001040                     
  7509                           ; BSR set to: 0
  7510                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  7511  001040  0E00               	movlw	0
  7512  001042  6E14               	movwf	(fputc@c+1)^0,c
  7513  001044  0E25               	movlw	37
  7514  001046  6E13               	movwf	fputc@c^0,c
  7515  001048  C039  F015         	movff	vfpfcnvrt@fp,fputc@fp
  7516  00104C  C03A  F016         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7517  001050  EC5A  F011         	call	_fputc	;wreg free
  7518  001054                     l5040:
  7519                           
  7520                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  7521  001054  0E00               	movlw	0
  7522  001056  6E3A               	movwf	(?_vfpfcnvrt+1)^0,c
  7523  001058  0E01               	movlw	1
  7524  00105A  6E39               	movwf	?_vfpfcnvrt^0,c
  7525  00105C  EF59  F008         	goto	l791
  7526  001060                     l5044:
  7527                           
  7528                           ; BSR set to: 0
  7529                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  7530  001060  C03B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7531  001064  C03C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7532  001068  2ADE               	incf	postinc2,f,c
  7533  00106A  0E00               	movlw	0
  7534  00106C  22DD               	addwfc	postdec2,f,c
  7535  00106E                     
  7536                           ; BSR set to: 0
  7537                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  7538  00106E  0E00               	movlw	0
  7539  001070  6E3A               	movwf	(?_vfpfcnvrt+1)^0,c
  7540  001072  0E00               	movlw	0
  7541  001074  6E39               	movwf	?_vfpfcnvrt^0,c
  7542  001076  EF59  F008         	goto	l791
  7543  00107A                     l5050:
  7544                           
  7545                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  7546  00107A  C03B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7547  00107E  C03C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7548  001082  CFDE FFF6          	movff	postinc2,tblptrl
  7549  001086  CFDD FFF7          	movff	postdec2,tblptrh
  7550  00108A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7551  00108A  6AF8               	clrf	tblptru,c
  7552  00108C                     	endif
  7553  00108C                     	if	0	;tblptru may be non-zero
  7554  00108C                     	endif
  7555  00108C  0008               	tblrd		*
  7556  00108E  50F5               	movf	tablat,w,c
  7557  001090  6E13               	movwf	fputc@c^0,c
  7558  001092  6A14               	clrf	(fputc@c+1)^0,c
  7559  001094  C039  F015         	movff	vfpfcnvrt@fp,fputc@fp
  7560  001098  C03A  F016         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7561  00109C  EC5A  F011         	call	_fputc	;wreg free
  7562  0010A0                     
  7563                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  7564  0010A0  C03B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7565  0010A4  C03C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7566  0010A8  2ADE               	incf	postinc2,f,c
  7567  0010AA  0E00               	movlw	0
  7568  0010AC  22DD               	addwfc	postdec2,f,c
  7569  0010AE  EF2A  F008         	goto	l5040
  7570  0010B2                     l791:
  7571  0010B2  0012               	return		;funcret
  7572  0010B4                     __end_of_vfpfcnvrt:
  7573                           	opt callstack 0
  7574                           
  7575 ;; *************** function _xtoa *****************
  7576 ;; Defined at:
  7577 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7578 ;; Parameters:    Size  Location     Type
  7579 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  7580 ;;		 -> NULL(0), 
  7581 ;;  d               8   47[COMRAM] unsigned long long 
  7582 ;;  x               1   55[COMRAM] unsigned char 
  7583 ;; Auto vars:     Size  Location     Type
  7584 ;;  n               8   16[BANK0 ] unsigned long long 
  7585 ;;  c               2   26[BANK0 ] int 
  7586 ;;  i               2   24[BANK0 ] int 
  7587 ;;  w               2   14[BANK0 ] int 
  7588 ;;  p               2   12[BANK0 ] int 
  7589 ;; Return value:  Size  Location     Type
  7590 ;;                  2   45[COMRAM] int 
  7591 ;; Registers used:
  7592 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7593 ;; Tracked objects:
  7594 ;;		On entry : 0/0
  7595 ;;		On exit  : 0/0
  7596 ;;		Unchanged: 0/0
  7597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7598 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7599 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7600 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7601 ;;      Totals:        11      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7602 ;;Total ram usage:       39 bytes
  7603 ;; Hardware stack levels used:    1
  7604 ;; Hardware stack levels required when called:    9
  7605 ;; This function calls:
  7606 ;;		_isalpha
  7607 ;;		_isupper
  7608 ;;		_pad
  7609 ;;		_toupper
  7610 ;; This function is called by:
  7611 ;;		_vfpfcnvrt
  7612 ;; This function uses a non-reentrant model
  7613 ;;
  7614                           
  7615                           	psect	text27
  7616  001396                     __ptext27:
  7617                           	opt callstack 0
  7618  001396                     _xtoa:
  7619                           	opt callstack 18
  7620  001396                     
  7621                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  7622  001396  BE42               	btfsc	(_prec+1)^0,7,c
  7623  001398  EFD0  F009         	goto	u3841
  7624  00139C  EFD2  F009         	goto	u3840
  7625  0013A0                     u3841:
  7626  0013A0  EFD3  F009         	goto	l4840
  7627  0013A4                     u3840:
  7628  0013A4                     
  7629                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  7630  0013A4  9243               	bcf	_flags^0,1,c
  7631  0013A6                     l4840:
  7632                           
  7633                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  7634  0013A6  BE42               	btfsc	(_prec+1)^0,7,c
  7635  0013A8  EFE0  F009         	goto	u3850
  7636  0013AC  5042               	movf	(_prec+1)^0,w,c
  7637  0013AE  E106               	bnz	u3851
  7638  0013B0  0441               	decf	_prec^0,w,c
  7639  0013B2  B0D8               	btfsc	status,0,c
  7640  0013B4  EFDE  F009         	goto	u3851
  7641  0013B8  EFE0  F009         	goto	u3850
  7642  0013BC                     u3851:
  7643  0013BC  EFE7  F009         	goto	l739
  7644  0013C0                     u3850:
  7645  0013C0  0E00               	movlw	0
  7646  0013C2  0100               	movlb	0	; () banked
  7647  0013C4  6F6D               	movwf	(xtoa@p+1)& (0+255),b
  7648  0013C6  0E01               	movlw	1
  7649  0013C8  6F6C               	movwf	xtoa@p& (0+255),b
  7650  0013CA  EFEB  F009         	goto	l741
  7651  0013CE                     l739:
  7652  0013CE  C041  F06C         	movff	_prec,xtoa@p
  7653  0013D2  C042  F06D         	movff	_prec+1,xtoa@p+1
  7654  0013D6                     l741:
  7655                           
  7656                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  7657  0013D6  C03F  F06E         	movff	_width,xtoa@w
  7658  0013DA  C040  F06F         	movff	_width+1,xtoa@w+1
  7659                           
  7660                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  7661  0013DE  A843               	btfss	_flags^0,4,c
  7662  0013E0  EFF4  F009         	goto	u3861
  7663  0013E4  EFF6  F009         	goto	u3860
  7664  0013E8                     u3861:
  7665  0013E8  EFFB  F009         	goto	l4846
  7666  0013EC                     u3860:
  7667  0013EC                     
  7668                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  7669  0013EC  0100               	movlb	0	; () banked
  7670  0013EE  0EFE               	movlw	254
  7671  0013F0  276E               	addwf	xtoa@w& (0+255),f,b
  7672  0013F2  0EFF               	movlw	255
  7673  0013F4  236F               	addwfc	(xtoa@w+1)& (0+255),f,b
  7674  0013F6                     l4846:
  7675                           
  7676                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  7677  0013F6  C030  F070         	movff	xtoa@d,xtoa@n
  7678  0013FA  C031  F071         	movff	xtoa@d+1,xtoa@n+1
  7679  0013FE  C032  F072         	movff	xtoa@d+2,xtoa@n+2
  7680  001402  C033  F073         	movff	xtoa@d+3,xtoa@n+3
  7681  001406  C034  F074         	movff	xtoa@d+4,xtoa@n+4
  7682  00140A  C035  F075         	movff	xtoa@d+5,xtoa@n+5
  7683  00140E  C036  F076         	movff	xtoa@d+6,xtoa@n+6
  7684  001412  C037  F077         	movff	xtoa@d+7,xtoa@n+7
  7685  001416                     
  7686                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  7687  001416  0E00               	movlw	0
  7688  001418  0100               	movlb	0	; () banked
  7689  00141A  6F79               	movwf	(xtoa@i+1)& (0+255),b
  7690  00141C  0E1F               	movlw	31
  7691  00141E  6F78               	movwf	xtoa@i& (0+255),b
  7692  001420                     
  7693                           ; BSR set to: 0
  7694                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  7695  001420  0E00               	movlw	0
  7696  001422  6FF4               	movwf	(_dbuf+31)& (0+255),b
  7697                           
  7698                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7699  001424  EFC8  F00A         	goto	l4882
  7700  001428                     l4852:
  7701                           
  7702                           ; BSR set to: 0
  7703                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  7704  001428  0778               	decf	xtoa@i& (0+255),f,b
  7705  00142A  A0D8               	btfss	status,0,c
  7706  00142C  0779               	decf	(xtoa@i+1)& (0+255),f,b
  7707  00142E                     
  7708                           ; BSR set to: 0
  7709                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  7710  00142E  0E0F               	movlw	15
  7711  001430  1570               	andwf	xtoa@n& (0+255),w,b
  7712  001432  6F7A               	movwf	xtoa@c& (0+255),b
  7713  001434  6B7B               	clrf	(xtoa@c+1)& (0+255),b
  7714  001436                     
  7715                           ; BSR set to: 0
  7716                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  7717  001436  BF7B               	btfsc	(xtoa@c+1)& (0+255),7,b
  7718  001438  EF27  F00A         	goto	u3871
  7719  00143C  517B               	movf	(xtoa@c+1)& (0+255),w,b
  7720  00143E  E109               	bnz	u3870
  7721  001440  0E0A               	movlw	10
  7722  001442  5D7A               	subwf	xtoa@c& (0+255),w,b
  7723  001444  A0D8               	btfss	status,0,c
  7724  001446  EF27  F00A         	goto	u3871
  7725  00144A  EF29  F00A         	goto	u3870
  7726  00144E                     u3871:
  7727  00144E  EF31  F00A         	goto	l4860
  7728  001452                     u3870:
  7729  001452                     
  7730                           ; BSR set to: 0
  7731  001452  0E57               	movlw	87
  7732  001454  257A               	addwf	xtoa@c& (0+255),w,b
  7733  001456  6F7A               	movwf	xtoa@c& (0+255),b
  7734  001458  0E00               	movlw	0
  7735  00145A  217B               	addwfc	(xtoa@c+1)& (0+255),w,b
  7736  00145C  6F7B               	movwf	(xtoa@c+1)& (0+255),b
  7737  00145E  EF37  F00A         	goto	l748
  7738  001462                     l4860:
  7739                           
  7740                           ; BSR set to: 0
  7741  001462  0E30               	movlw	48
  7742  001464  257A               	addwf	xtoa@c& (0+255),w,b
  7743  001466  6F7A               	movwf	xtoa@c& (0+255),b
  7744  001468  0E00               	movlw	0
  7745  00146A  217B               	addwfc	(xtoa@c+1)& (0+255),w,b
  7746  00146C  6F7B               	movwf	(xtoa@c+1)& (0+255),b
  7747  00146E                     l748:
  7748                           
  7749                           ; BSR set to: 0
  7750  00146E  0EBF               	movlw	191
  7751  001470  6F60               	movwf	??_xtoa& (0+255),b
  7752  001472  0EFF               	movlw	255
  7753  001474  6F61               	movwf	(??_xtoa+1)& (0+255),b
  7754  001476  5038               	movf	xtoa@x^0,w,c
  7755  001478  6F62               	movwf	(??_xtoa+2)& (0+255),b
  7756  00147A  6B63               	clrf	(??_xtoa+3)& (0+255),b
  7757  00147C  5160               	movf	??_xtoa& (0+255),w,b
  7758  00147E  2762               	addwf	(??_xtoa+2)& (0+255),f,b
  7759  001480  5161               	movf	(??_xtoa+1)& (0+255),w,b
  7760  001482  2363               	addwfc	(??_xtoa+3)& (0+255),f,b
  7761  001484  5163               	movf	(??_xtoa+3)& (0+255),w,b
  7762  001486  E10A               	bnz	u3880
  7763  001488  0E1A               	movlw	26
  7764  00148A  5D62               	subwf	(??_xtoa+2)& (0+255),w,b
  7765  00148C  A0D8               	btfss	status,0,c
  7766  00148E  EF4B  F00A         	goto	u3881
  7767  001492  EF4E  F00A         	goto	u3880
  7768  001496                     u3881:
  7769  001496  0E01               	movlw	1
  7770  001498  EF4F  F00A         	goto	u3890
  7771  00149C                     u3880:
  7772  00149C  0E00               	movlw	0
  7773  00149E                     u3890:
  7774  00149E  6F68               	movwf	_xtoa$1530& (0+255),b
  7775  0014A0  6B69               	clrf	(_xtoa$1530+1)& (0+255),b
  7776  0014A2                     
  7777                           ; BSR set to: 0
  7778  0014A2  5168               	movf	_xtoa$1530& (0+255),w,b
  7779  0014A4  1169               	iorwf	(_xtoa$1530+1)& (0+255),w,b
  7780  0014A6  B4D8               	btfsc	status,2,c
  7781  0014A8  EF58  F00A         	goto	u3901
  7782  0014AC  EF5A  F00A         	goto	u3900
  7783  0014B0                     u3901:
  7784  0014B0  EF8A  F00A         	goto	l4874
  7785  0014B4                     u3900:
  7786  0014B4                     
  7787                           ; BSR set to: 0
  7788  0014B4  0E9F               	movlw	159
  7789  0014B6  6F60               	movwf	??_xtoa& (0+255),b
  7790  0014B8  0EFF               	movlw	255
  7791  0014BA  6F61               	movwf	(??_xtoa+1)& (0+255),b
  7792  0014BC  0E20               	movlw	32
  7793  0014BE  117A               	iorwf	xtoa@c& (0+255),w,b
  7794  0014C0  6F62               	movwf	(??_xtoa+2)& (0+255),b
  7795  0014C2  0E00               	movlw	0
  7796  0014C4  117B               	iorwf	(xtoa@c+1)& (0+255),w,b
  7797  0014C6  6F63               	movwf	(??_xtoa+3)& (0+255),b
  7798  0014C8  5160               	movf	??_xtoa& (0+255),w,b
  7799  0014CA  2762               	addwf	(??_xtoa+2)& (0+255),f,b
  7800  0014CC  5161               	movf	(??_xtoa+1)& (0+255),w,b
  7801  0014CE  2363               	addwfc	(??_xtoa+3)& (0+255),f,b
  7802  0014D0  5163               	movf	(??_xtoa+3)& (0+255),w,b
  7803  0014D2  E10A               	bnz	u3910
  7804  0014D4  0E1A               	movlw	26
  7805  0014D6  5D62               	subwf	(??_xtoa+2)& (0+255),w,b
  7806  0014D8  A0D8               	btfss	status,0,c
  7807  0014DA  EF71  F00A         	goto	u3911
  7808  0014DE  EF74  F00A         	goto	u3910
  7809  0014E2                     u3911:
  7810  0014E2  0E01               	movlw	1
  7811  0014E4  EF75  F00A         	goto	u3920
  7812  0014E8                     u3910:
  7813  0014E8  0E00               	movlw	0
  7814  0014EA                     u3920:
  7815  0014EA  6F6A               	movwf	_xtoa$1531& (0+255),b
  7816  0014EC  6B6B               	clrf	(_xtoa$1531+1)& (0+255),b
  7817  0014EE                     
  7818                           ; BSR set to: 0
  7819  0014EE  516A               	movf	_xtoa$1531& (0+255),w,b
  7820  0014F0  116B               	iorwf	(_xtoa$1531+1)& (0+255),w,b
  7821  0014F2  B4D8               	btfsc	status,2,c
  7822  0014F4  EF7E  F00A         	goto	u3931
  7823  0014F8  EF80  F00A         	goto	u3930
  7824  0014FC                     u3931:
  7825  0014FC  EF8A  F00A         	goto	l4874
  7826  001500                     u3930:
  7827  001500                     
  7828                           ; BSR set to: 0
  7829                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  7830  001500  C07A  F017         	movff	xtoa@c,toupper@c
  7831  001504  C07B  F018         	movff	xtoa@c+1,toupper@c+1
  7832  001508  EC51  F012         	call	_toupper	;wreg free
  7833  00150C  C017  F07A         	movff	?_toupper,xtoa@c
  7834  001510  C018  F07B         	movff	?_toupper+1,xtoa@c+1
  7835  001514                     l4874:
  7836                           
  7837                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  7838  001514  0ED5               	movlw	low _dbuf
  7839  001516  0100               	movlb	0	; () banked
  7840  001518  2578               	addwf	xtoa@i& (0+255),w,b
  7841  00151A  6ED9               	movwf	fsr2l,c
  7842  00151C  0E00               	movlw	high _dbuf
  7843  00151E  2179               	addwfc	(xtoa@i+1)& (0+255),w,b
  7844  001520  6EDA               	movwf	fsr2h,c
  7845  001522  C07A  FFDF         	movff	xtoa@c,indf2
  7846  001526                     
  7847                           ; BSR set to: 0
  7848                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  7849  001526  076C               	decf	xtoa@p& (0+255),f,b
  7850  001528  A0D8               	btfss	status,0,c
  7851  00152A  076D               	decf	(xtoa@p+1)& (0+255),f,b
  7852  00152C                     
  7853                           ; BSR set to: 0
  7854                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  7855  00152C  076E               	decf	xtoa@w& (0+255),f,b
  7856  00152E  A0D8               	btfss	status,0,c
  7857  001530  076F               	decf	(xtoa@w+1)& (0+255),f,b
  7858  001532                     
  7859                           ; BSR set to: 0
  7860                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  7861  001532  C070  F060         	movff	xtoa@n,??_xtoa
  7862  001536  C071  F061         	movff	xtoa@n+1,??_xtoa+1
  7863  00153A  C072  F062         	movff	xtoa@n+2,??_xtoa+2
  7864  00153E  C073  F063         	movff	xtoa@n+3,??_xtoa+3
  7865  001542  C074  F064         	movff	xtoa@n+4,??_xtoa+4
  7866  001546  C075  F065         	movff	xtoa@n+5,??_xtoa+5
  7867  00154A  C076  F066         	movff	xtoa@n+6,??_xtoa+6
  7868  00154E  C077  F067         	movff	xtoa@n+7,??_xtoa+7
  7869  001552  0E05               	movlw	5
  7870  001554  EFB5  F00A         	goto	u3940
  7871  001558                     u3945:
  7872  001558  90D8               	bcf	status,0,c
  7873  00155A  3367               	rrcf	(??_xtoa+7)& (0+255),f,b
  7874  00155C  3366               	rrcf	(??_xtoa+6)& (0+255),f,b
  7875  00155E  3365               	rrcf	(??_xtoa+5)& (0+255),f,b
  7876  001560  3364               	rrcf	(??_xtoa+4)& (0+255),f,b
  7877  001562  3363               	rrcf	(??_xtoa+3)& (0+255),f,b
  7878  001564  3362               	rrcf	(??_xtoa+2)& (0+255),f,b
  7879  001566  3361               	rrcf	(??_xtoa+1)& (0+255),f,b
  7880  001568  3360               	rrcf	??_xtoa& (0+255),f,b
  7881  00156A                     u3940:
  7882  00156A  2EE8               	decfsz	wreg,f,c
  7883  00156C  EFAC  F00A         	goto	u3945
  7884  001570  C060  F070         	movff	??_xtoa,xtoa@n
  7885  001574  C061  F071         	movff	??_xtoa+1,xtoa@n+1
  7886  001578  C062  F072         	movff	??_xtoa+2,xtoa@n+2
  7887  00157C  C063  F073         	movff	??_xtoa+3,xtoa@n+3
  7888  001580  C064  F074         	movff	??_xtoa+4,xtoa@n+4
  7889  001584  C065  F075         	movff	??_xtoa+5,xtoa@n+5
  7890  001588  C066  F076         	movff	??_xtoa+6,xtoa@n+6
  7891  00158C  C067  F077         	movff	??_xtoa+7,xtoa@n+7
  7892  001590                     l4882:
  7893                           
  7894                           ; BSR set to: 0
  7895                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7896  001590  BF79               	btfsc	(xtoa@i+1)& (0+255),7,b
  7897  001592  EFD4  F00A         	goto	u3951
  7898  001596  5179               	movf	(xtoa@i+1)& (0+255),w,b
  7899  001598  E109               	bnz	u3950
  7900  00159A  0E02               	movlw	2
  7901  00159C  5D78               	subwf	xtoa@i& (0+255),w,b
  7902  00159E  A0D8               	btfss	status,0,c
  7903  0015A0  EFD4  F00A         	goto	u3951
  7904  0015A4  EFD6  F00A         	goto	u3950
  7905  0015A8                     u3951:
  7906  0015A8  EF06  F00B         	goto	l762
  7907  0015AC                     u3950:
  7908  0015AC                     
  7909                           ; BSR set to: 0
  7910  0015AC  5170               	movf	xtoa@n& (0+255),w,b
  7911  0015AE  1171               	iorwf	(xtoa@n+1)& (0+255),w,b
  7912  0015B0  1172               	iorwf	(xtoa@n+2)& (0+255),w,b
  7913  0015B2  1173               	iorwf	(xtoa@n+3)& (0+255),w,b
  7914  0015B4  1174               	iorwf	(xtoa@n+4)& (0+255),w,b
  7915  0015B6  1175               	iorwf	(xtoa@n+5)& (0+255),w,b
  7916  0015B8  1176               	iorwf	(xtoa@n+6)& (0+255),w,b
  7917  0015BA  1177               	iorwf	(xtoa@n+7)& (0+255),w,b
  7918  0015BC  A4D8               	btfss	status,2,c
  7919  0015BE  EFE3  F00A         	goto	u3961
  7920  0015C2  EFE5  F00A         	goto	u3960
  7921  0015C6                     u3961:
  7922  0015C6  EF14  F00A         	goto	l4852
  7923  0015CA                     u3960:
  7924  0015CA                     
  7925                           ; BSR set to: 0
  7926  0015CA  BF6D               	btfsc	(xtoa@p+1)& (0+255),7,b
  7927  0015CC  EFF2  F00A         	goto	u3970
  7928  0015D0  516D               	movf	(xtoa@p+1)& (0+255),w,b
  7929  0015D2  E106               	bnz	u3971
  7930  0015D4  056C               	decf	xtoa@p& (0+255),w,b
  7931  0015D6  B0D8               	btfsc	status,0,c
  7932  0015D8  EFF0  F00A         	goto	u3971
  7933  0015DC  EFF2  F00A         	goto	u3970
  7934  0015E0                     u3971:
  7935  0015E0  EF14  F00A         	goto	l4852
  7936  0015E4                     u3970:
  7937  0015E4                     
  7938                           ; BSR set to: 0
  7939  0015E4  BF6F               	btfsc	(xtoa@w+1)& (0+255),7,b
  7940  0015E6  EFFD  F00A         	goto	u3981
  7941  0015EA  516F               	movf	(xtoa@w+1)& (0+255),w,b
  7942  0015EC  E108               	bnz	u3980
  7943  0015EE  056E               	decf	xtoa@w& (0+255),w,b
  7944  0015F0  A0D8               	btfss	status,0,c
  7945  0015F2  EFFD  F00A         	goto	u3981
  7946  0015F6  EFFF  F00A         	goto	u3980
  7947  0015FA                     u3981:
  7948  0015FA  EF06  F00B         	goto	l762
  7949  0015FE                     u3980:
  7950  0015FE                     
  7951                           ; BSR set to: 0
  7952  0015FE  B243               	btfsc	_flags^0,1,c
  7953  001600  EF04  F00B         	goto	u3991
  7954  001604  EF06  F00B         	goto	u3990
  7955  001608                     u3991:
  7956  001608  EF14  F00A         	goto	l4852
  7957  00160C                     u3990:
  7958  00160C                     l762:
  7959                           
  7960                           ; BSR set to: 0
  7961                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  7962  00160C  A843               	btfss	_flags^0,4,c
  7963  00160E  EF0B  F00B         	goto	u4001
  7964  001612  EF0D  F00B         	goto	u4000
  7965  001616                     u4001:
  7966  001616  EF23  F00B         	goto	l4898
  7967  00161A                     u4000:
  7968  00161A                     
  7969                           ; BSR set to: 0
  7970                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  7971  00161A  0778               	decf	xtoa@i& (0+255),f,b
  7972  00161C  A0D8               	btfss	status,0,c
  7973  00161E  0779               	decf	(xtoa@i+1)& (0+255),f,b
  7974  001620                     
  7975                           ; BSR set to: 0
  7976                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  7977  001620  0ED5               	movlw	low _dbuf
  7978  001622  2578               	addwf	xtoa@i& (0+255),w,b
  7979  001624  6ED9               	movwf	fsr2l,c
  7980  001626  0E00               	movlw	high _dbuf
  7981  001628  2179               	addwfc	(xtoa@i+1)& (0+255),w,b
  7982  00162A  6EDA               	movwf	fsr2h,c
  7983  00162C  C038  FFDF         	movff	xtoa@x,indf2
  7984  001630                     
  7985                           ; BSR set to: 0
  7986                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  7987  001630  0778               	decf	xtoa@i& (0+255),f,b
  7988  001632  A0D8               	btfss	status,0,c
  7989  001634  0779               	decf	(xtoa@i+1)& (0+255),f,b
  7990                           
  7991                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  7992  001636  0ED5               	movlw	low _dbuf
  7993  001638  2578               	addwf	xtoa@i& (0+255),w,b
  7994  00163A  6ED9               	movwf	fsr2l,c
  7995  00163C  0E00               	movlw	high _dbuf
  7996  00163E  2179               	addwfc	(xtoa@i+1)& (0+255),w,b
  7997  001640  6EDA               	movwf	fsr2h,c
  7998  001642  0E30               	movlw	48
  7999  001644  6EDF               	movwf	indf2,c
  8000  001646                     l4898:
  8001                           
  8002                           ; BSR set to: 0
  8003                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  8004  001646  C02E  F023         	movff	xtoa@fp,pad@fp
  8005  00164A  C02F  F024         	movff	xtoa@fp+1,pad@fp+1
  8006  00164E  0ED5               	movlw	low _dbuf
  8007  001650  2578               	addwf	xtoa@i& (0+255),w,b
  8008  001652  6E25               	movwf	pad@buf^0,c
  8009  001654  0E00               	movlw	high _dbuf
  8010  001656  2179               	addwfc	(xtoa@i+1)& (0+255),w,b
  8011  001658  6E26               	movwf	(pad@buf+1)^0,c
  8012  00165A  C06E  F027         	movff	xtoa@w,pad@p
  8013  00165E  C06F  F028         	movff	xtoa@w+1,pad@p+1
  8014  001662  EC0A  F010         	call	_pad	;wreg free
  8015  001666  C023  F02E         	movff	?_pad,?_xtoa
  8016  00166A  C024  F02F         	movff	?_pad+1,?_xtoa+1
  8017  00166E  0012               	return		;funcret
  8018  001670                     __end_of_xtoa:
  8019                           	opt callstack 0
  8020                           
  8021 ;; *************** function _toupper *****************
  8022 ;; Defined at:
  8023 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
  8024 ;; Parameters:    Size  Location     Type
  8025 ;;  c               2   22[COMRAM] int 
  8026 ;; Auto vars:     Size  Location     Type
  8027 ;;		None
  8028 ;; Return value:  Size  Location     Type
  8029 ;;                  2   22[COMRAM] int 
  8030 ;; Registers used:
  8031 ;;		wreg, status,2, status,0
  8032 ;; Tracked objects:
  8033 ;;		On entry : 0/0
  8034 ;;		On exit  : 0/0
  8035 ;;		Unchanged: 0/0
  8036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8037 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8038 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8039 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8040 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8041 ;;Total ram usage:        8 bytes
  8042 ;; Hardware stack levels used:    1
  8043 ;; Hardware stack levels required when called:    5
  8044 ;; This function calls:
  8045 ;;		_islower
  8046 ;; This function is called by:
  8047 ;;		_xtoa
  8048 ;; This function uses a non-reentrant model
  8049 ;;
  8050                           
  8051                           	psect	text28
  8052  0024A2                     __ptext28:
  8053                           	opt callstack 0
  8054  0024A2                     _toupper:
  8055                           	opt callstack 21
  8056  0024A2  0E9F               	movlw	159
  8057  0024A4  6E19               	movwf	??_toupper^0,c
  8058  0024A6  0EFF               	movlw	255
  8059  0024A8  6E1A               	movwf	(??_toupper+1)^0,c
  8060  0024AA  C017  F01B         	movff	toupper@c,??_toupper+2
  8061  0024AE  C018  F01C         	movff	toupper@c+1,??_toupper+3
  8062  0024B2  5019               	movf	??_toupper^0,w,c
  8063  0024B4  261B               	addwf	(??_toupper+2)^0,f,c
  8064  0024B6  501A               	movf	(??_toupper+1)^0,w,c
  8065  0024B8  221C               	addwfc	(??_toupper+3)^0,f,c
  8066  0024BA  501C               	movf	(??_toupper+3)^0,w,c
  8067  0024BC  E10A               	bnz	u3480
  8068  0024BE  0E1A               	movlw	26
  8069  0024C0  5C1B               	subwf	(??_toupper+2)^0,w,c
  8070  0024C2  A0D8               	btfss	status,0,c
  8071  0024C4  EF66  F012         	goto	u3481
  8072  0024C8  EF69  F012         	goto	u3480
  8073  0024CC                     u3481:
  8074  0024CC  0E01               	movlw	1
  8075  0024CE  EF6A  F012         	goto	u3490
  8076  0024D2                     u3480:
  8077  0024D2  0E00               	movlw	0
  8078  0024D4                     u3490:
  8079  0024D4  6E1D               	movwf	_toupper$2096^0,c
  8080  0024D6  6A1E               	clrf	(_toupper$2096+1)^0,c
  8081  0024D8  501D               	movf	_toupper$2096^0,w,c
  8082  0024DA  101E               	iorwf	(_toupper$2096+1)^0,w,c
  8083  0024DC  B4D8               	btfsc	status,2,c
  8084  0024DE  EF73  F012         	goto	u3501
  8085  0024E2  EF75  F012         	goto	u3500
  8086  0024E6                     u3501:
  8087  0024E6  EF7B  F012         	goto	l1580
  8088  0024EA                     u3500:
  8089  0024EA  0E5F               	movlw	95
  8090  0024EC  1417               	andwf	toupper@c^0,w,c
  8091  0024EE  6E17               	movwf	?_toupper^0,c
  8092  0024F0  6A18               	clrf	(?_toupper+1)^0,c
  8093  0024F2  EF7F  F012         	goto	l1585
  8094  0024F6                     l1580:
  8095  0024F6  C017  F017         	movff	toupper@c,?_toupper
  8096  0024FA  C018  F018         	movff	toupper@c+1,?_toupper+1
  8097  0024FE                     l1585:
  8098  0024FE  0012               	return		;funcret
  8099  002500                     __end_of_toupper:
  8100                           	opt callstack 0
  8101                           
  8102 ;; *************** function _islower *****************
  8103 ;; Defined at:
  8104 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
  8105 ;; Parameters:    Size  Location     Type
  8106 ;;  c               2   16[COMRAM] int 
  8107 ;; Auto vars:     Size  Location     Type
  8108 ;;		None
  8109 ;; Return value:  Size  Location     Type
  8110 ;;                  2   16[COMRAM] int 
  8111 ;; Registers used:
  8112 ;;		wreg, status,2, status,0
  8113 ;; Tracked objects:
  8114 ;;		On entry : 0/0
  8115 ;;		On exit  : 0/0
  8116 ;;		Unchanged: 0/0
  8117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8118 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8120 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8121 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8122 ;;Total ram usage:        6 bytes
  8123 ;; Hardware stack levels used:    1
  8124 ;; Hardware stack levels required when called:    4
  8125 ;; This function calls:
  8126 ;;		Nothing
  8127 ;; This function is called by:
  8128 ;;		_toupper
  8129 ;; This function uses a non-reentrant model
  8130 ;;
  8131                           
  8132                           	psect	text29
  8133  0026E4                     __ptext29:
  8134                           	opt callstack 0
  8135  0026E4                     _islower:
  8136                           	opt callstack 21
  8137  0026E4  0E9F               	movlw	159
  8138  0026E6  6E13               	movwf	??_islower^0,c
  8139  0026E8  0EFF               	movlw	255
  8140  0026EA  6E14               	movwf	(??_islower+1)^0,c
  8141  0026EC  C011  F015         	movff	islower@c,??_islower+2
  8142  0026F0  C012  F016         	movff	islower@c+1,??_islower+3
  8143  0026F4  5013               	movf	??_islower^0,w,c
  8144  0026F6  2615               	addwf	(??_islower+2)^0,f,c
  8145  0026F8  5014               	movf	(??_islower+1)^0,w,c
  8146  0026FA  2216               	addwfc	(??_islower+3)^0,f,c
  8147  0026FC  5016               	movf	(??_islower+3)^0,w,c
  8148  0026FE  E10A               	bnz	u3370
  8149  002700  0E1A               	movlw	26
  8150  002702  5C15               	subwf	(??_islower+2)^0,w,c
  8151  002704  A0D8               	btfss	status,0,c
  8152  002706  EF87  F013         	goto	u3371
  8153  00270A  EF8A  F013         	goto	u3370
  8154  00270E                     u3371:
  8155  00270E  0E01               	movlw	1
  8156  002710  EF8B  F013         	goto	u3380
  8157  002714                     u3370:
  8158  002714  0E00               	movlw	0
  8159  002716                     u3380:
  8160  002716  6E11               	movwf	?_islower^0,c
  8161  002718  6A12               	clrf	(?_islower+1)^0,c
  8162  00271A  0012               	return		;funcret
  8163  00271C                     __end_of_islower:
  8164                           	opt callstack 0
  8165                           
  8166 ;; *************** function _isupper *****************
  8167 ;; Defined at:
  8168 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  8169 ;; Parameters:    Size  Location     Type
  8170 ;;  c               2   16[COMRAM] int 
  8171 ;; Auto vars:     Size  Location     Type
  8172 ;;		None
  8173 ;; Return value:  Size  Location     Type
  8174 ;;                  2   16[COMRAM] int 
  8175 ;; Registers used:
  8176 ;;		wreg, status,2, status,0
  8177 ;; Tracked objects:
  8178 ;;		On entry : 0/0
  8179 ;;		On exit  : 0/0
  8180 ;;		Unchanged: 0/0
  8181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8182 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8184 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8185 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8186 ;;Total ram usage:        6 bytes
  8187 ;; Hardware stack levels used:    1
  8188 ;; Hardware stack levels required when called:    4
  8189 ;; This function calls:
  8190 ;;		Nothing
  8191 ;; This function is called by:
  8192 ;;		_xtoa
  8193 ;; This function uses a non-reentrant model
  8194 ;;
  8195                           
  8196                           	psect	text30
  8197  00271C                     __ptext30:
  8198                           	opt callstack 0
  8199  00271C                     _isupper:
  8200                           	opt callstack 22
  8201  00271C  0EBF               	movlw	191
  8202  00271E  6E13               	movwf	??_isupper^0,c
  8203  002720  0EFF               	movlw	255
  8204  002722  6E14               	movwf	(??_isupper+1)^0,c
  8205  002724  C011  F015         	movff	isupper@c,??_isupper+2
  8206  002728  C012  F016         	movff	isupper@c+1,??_isupper+3
  8207  00272C  5013               	movf	??_isupper^0,w,c
  8208  00272E  2615               	addwf	(??_isupper+2)^0,f,c
  8209  002730  5014               	movf	(??_isupper+1)^0,w,c
  8210  002732  2216               	addwfc	(??_isupper+3)^0,f,c
  8211  002734  5016               	movf	(??_isupper+3)^0,w,c
  8212  002736  E10A               	bnz	u3440
  8213  002738  0E1A               	movlw	26
  8214  00273A  5C15               	subwf	(??_isupper+2)^0,w,c
  8215  00273C  A0D8               	btfss	status,0,c
  8216  00273E  EFA3  F013         	goto	u3441
  8217  002742  EFA6  F013         	goto	u3440
  8218  002746                     u3441:
  8219  002746  0E01               	movlw	1
  8220  002748  EFA7  F013         	goto	u3450
  8221  00274C                     u3440:
  8222  00274C  0E00               	movlw	0
  8223  00274E                     u3450:
  8224  00274E  6E11               	movwf	?_isupper^0,c
  8225  002750  6A12               	clrf	(?_isupper+1)^0,c
  8226  002752  0012               	return		;funcret
  8227  002754                     __end_of_isupper:
  8228                           	opt callstack 0
  8229                           
  8230 ;; *************** function _isalpha *****************
  8231 ;; Defined at:
  8232 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
  8233 ;; Parameters:    Size  Location     Type
  8234 ;;  c               2   16[COMRAM] int 
  8235 ;; Auto vars:     Size  Location     Type
  8236 ;;		None
  8237 ;; Return value:  Size  Location     Type
  8238 ;;                  2   16[COMRAM] int 
  8239 ;; Registers used:
  8240 ;;		wreg, status,2, status,0
  8241 ;; Tracked objects:
  8242 ;;		On entry : 0/0
  8243 ;;		On exit  : 0/0
  8244 ;;		Unchanged: 0/0
  8245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8246 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8248 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8249 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8250 ;;Total ram usage:        6 bytes
  8251 ;; Hardware stack levels used:    1
  8252 ;; Hardware stack levels required when called:    4
  8253 ;; This function calls:
  8254 ;;		Nothing
  8255 ;; This function is called by:
  8256 ;;		_xtoa
  8257 ;; This function uses a non-reentrant model
  8258 ;;
  8259                           
  8260                           	psect	text31
  8261  002670                     __ptext31:
  8262                           	opt callstack 0
  8263  002670                     _isalpha:
  8264                           	opt callstack 22
  8265  002670  0E9F               	movlw	159
  8266  002672  6E13               	movwf	??_isalpha^0,c
  8267  002674  0EFF               	movlw	255
  8268  002676  6E14               	movwf	(??_isalpha+1)^0,c
  8269  002678  0E20               	movlw	32
  8270  00267A  1011               	iorwf	isalpha@c^0,w,c
  8271  00267C  6E15               	movwf	(??_isalpha+2)^0,c
  8272  00267E  0E00               	movlw	0
  8273  002680  1012               	iorwf	(isalpha@c+1)^0,w,c
  8274  002682  6E16               	movwf	(??_isalpha+3)^0,c
  8275  002684  5013               	movf	??_isalpha^0,w,c
  8276  002686  2615               	addwf	(??_isalpha+2)^0,f,c
  8277  002688  5014               	movf	(??_isalpha+1)^0,w,c
  8278  00268A  2216               	addwfc	(??_isalpha+3)^0,f,c
  8279  00268C  5016               	movf	(??_isalpha+3)^0,w,c
  8280  00268E  E10A               	bnz	u3460
  8281  002690  0E1A               	movlw	26
  8282  002692  5C15               	subwf	(??_isalpha+2)^0,w,c
  8283  002694  A0D8               	btfss	status,0,c
  8284  002696  EF4F  F013         	goto	u3461
  8285  00269A  EF52  F013         	goto	u3460
  8286  00269E                     u3461:
  8287  00269E  0E01               	movlw	1
  8288  0026A0  EF53  F013         	goto	u3470
  8289  0026A4                     u3460:
  8290  0026A4  0E00               	movlw	0
  8291  0026A6                     u3470:
  8292  0026A6  6E11               	movwf	?_isalpha^0,c
  8293  0026A8  6A12               	clrf	(?_isalpha+1)^0,c
  8294  0026AA  0012               	return		;funcret
  8295  0026AC                     __end_of_isalpha:
  8296                           	opt callstack 0
  8297                           
  8298 ;; *************** function _dtoa *****************
  8299 ;; Defined at:
  8300 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8301 ;; Parameters:    Size  Location     Type
  8302 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  8303 ;;		 -> NULL(0), 
  8304 ;;  d               8   47[COMRAM] long long 
  8305 ;; Auto vars:     Size  Location     Type
  8306 ;;  n               8   16[BANK0 ] long long 
  8307 ;;  i               2   24[BANK0 ] int 
  8308 ;;  s               2   14[BANK0 ] int 
  8309 ;;  w               2   12[BANK0 ] int 
  8310 ;;  p               2   10[BANK0 ] int 
  8311 ;; Return value:  Size  Location     Type
  8312 ;;                  2   45[COMRAM] int 
  8313 ;; Registers used:
  8314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8315 ;; Tracked objects:
  8316 ;;		On entry : 0/0
  8317 ;;		On exit  : 0/0
  8318 ;;		Unchanged: 0/0
  8319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8320 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8321 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8322 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8323 ;;      Totals:        10      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8324 ;;Total ram usage:       36 bytes
  8325 ;; Hardware stack levels used:    1
  8326 ;; Hardware stack levels required when called:    9
  8327 ;; This function calls:
  8328 ;;		___aodiv
  8329 ;;		___aomod
  8330 ;;		_abs
  8331 ;;		_pad
  8332 ;; This function is called by:
  8333 ;;		_vfpfcnvrt
  8334 ;; This function uses a non-reentrant model
  8335 ;;
  8336                           
  8337                           	psect	text32
  8338  0010B4                     __ptext32:
  8339                           	opt callstack 0
  8340  0010B4                     _dtoa:
  8341                           	opt callstack 18
  8342  0010B4                     
  8343                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  8344  0010B4  C030  F070         	movff	dtoa@d,dtoa@n
  8345  0010B8  C031  F071         	movff	dtoa@d+1,dtoa@n+1
  8346  0010BC  C032  F072         	movff	dtoa@d+2,dtoa@n+2
  8347  0010C0  C033  F073         	movff	dtoa@d+3,dtoa@n+3
  8348  0010C4  C034  F074         	movff	dtoa@d+4,dtoa@n+4
  8349  0010C8  C035  F075         	movff	dtoa@d+5,dtoa@n+5
  8350  0010CC  C036  F076         	movff	dtoa@d+6,dtoa@n+6
  8351  0010D0  C037  F077         	movff	dtoa@d+7,dtoa@n+7
  8352  0010D4                     
  8353                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  8354  0010D4  0100               	movlb	0	; () banked
  8355  0010D6  BF77               	btfsc	(dtoa@n+7)& (0+255),7,b
  8356  0010D8  EF70  F008         	goto	u3691
  8357  0010DC  EF73  F008         	goto	u3690
  8358  0010E0                     u3691:
  8359  0010E0  0E01               	movlw	1
  8360  0010E2  EF74  F008         	goto	u3700
  8361  0010E6                     u3690:
  8362  0010E6  0E00               	movlw	0
  8363  0010E8                     u3700:
  8364  0010E8  6F6E               	movwf	dtoa@s& (0+255),b
  8365  0010EA  6B6F               	clrf	(dtoa@s+1)& (0+255),b
  8366                           
  8367                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  8368  0010EC  516E               	movf	dtoa@s& (0+255),w,b
  8369  0010EE  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
  8370  0010F0  B4D8               	btfsc	status,2,c
  8371  0010F2  EF7D  F008         	goto	u3711
  8372  0010F6  EF7F  F008         	goto	u3710
  8373  0010FA                     u3711:
  8374  0010FA  EF8F  F008         	goto	l4780
  8375  0010FE                     u3710:
  8376  0010FE                     
  8377                           ; BSR set to: 0
  8378                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  8379  0010FE  1F77               	comf	(dtoa@n+7)& (0+255),f,b
  8380  001100  1F76               	comf	(dtoa@n+6)& (0+255),f,b
  8381  001102  1F75               	comf	(dtoa@n+5)& (0+255),f,b
  8382  001104  1F74               	comf	(dtoa@n+4)& (0+255),f,b
  8383  001106  1F73               	comf	(dtoa@n+3)& (0+255),f,b
  8384  001108  1F72               	comf	(dtoa@n+2)& (0+255),f,b
  8385  00110A  1F71               	comf	(dtoa@n+1)& (0+255),f,b
  8386  00110C  6D70               	negf	dtoa@n& (0+255),b
  8387  00110E  0E00               	movlw	0
  8388  001110  2371               	addwfc	(dtoa@n+1)& (0+255),f,b
  8389  001112  2372               	addwfc	(dtoa@n+2)& (0+255),f,b
  8390  001114  2373               	addwfc	(dtoa@n+3)& (0+255),f,b
  8391  001116  2374               	addwfc	(dtoa@n+4)& (0+255),f,b
  8392  001118  2375               	addwfc	(dtoa@n+5)& (0+255),f,b
  8393  00111A  2376               	addwfc	(dtoa@n+6)& (0+255),f,b
  8394  00111C  2377               	addwfc	(dtoa@n+7)& (0+255),f,b
  8395  00111E                     l4780:
  8396                           
  8397                           ; BSR set to: 0
  8398                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  8399  00111E  BE42               	btfsc	(_prec+1)^0,7,c
  8400  001120  EF94  F008         	goto	u3721
  8401  001124  EF96  F008         	goto	u3720
  8402  001128                     u3721:
  8403  001128  EF97  F008         	goto	l4784
  8404  00112C                     u3720:
  8405  00112C                     
  8406                           ; BSR set to: 0
  8407                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  8408  00112C  9243               	bcf	_flags^0,1,c
  8409  00112E                     l4784:
  8410                           
  8411                           ; BSR set to: 0
  8412                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  8413  00112E  BE42               	btfsc	(_prec+1)^0,7,c
  8414  001130  EFA4  F008         	goto	u3730
  8415  001134  5042               	movf	(_prec+1)^0,w,c
  8416  001136  E106               	bnz	u3731
  8417  001138  0441               	decf	_prec^0,w,c
  8418  00113A  B0D8               	btfsc	status,0,c
  8419  00113C  EFA2  F008         	goto	u3731
  8420  001140  EFA4  F008         	goto	u3730
  8421  001144                     u3731:
  8422  001144  EFAA  F008         	goto	l714
  8423  001148                     u3730:
  8424  001148                     
  8425                           ; BSR set to: 0
  8426  001148  0E00               	movlw	0
  8427  00114A  6F6B               	movwf	(dtoa@p+1)& (0+255),b
  8428  00114C  0E01               	movlw	1
  8429  00114E  6F6A               	movwf	dtoa@p& (0+255),b
  8430  001150  EFAE  F008         	goto	l716
  8431  001154                     l714:
  8432                           
  8433                           ; BSR set to: 0
  8434  001154  C041  F06A         	movff	_prec,dtoa@p
  8435  001158  C042  F06B         	movff	_prec+1,dtoa@p+1
  8436  00115C                     l716:
  8437                           
  8438                           ; BSR set to: 0
  8439                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  8440  00115C  C03F  F06C         	movff	_width,dtoa@w
  8441  001160  C040  F06D         	movff	_width+1,dtoa@w+1
  8442  001164                     
  8443                           ; BSR set to: 0
  8444                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  8445  001164  516E               	movf	dtoa@s& (0+255),w,b
  8446  001166  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
  8447  001168  A4D8               	btfss	status,2,c
  8448  00116A  EFB9  F008         	goto	u3741
  8449  00116E  EFBB  F008         	goto	u3740
  8450  001172                     u3741:
  8451  001172  EFC2  F008         	goto	l4792
  8452  001176                     u3740:
  8453  001176                     
  8454                           ; BSR set to: 0
  8455  001176  A443               	btfss	_flags^0,2,c
  8456  001178  EFC0  F008         	goto	u3751
  8457  00117C  EFC2  F008         	goto	u3750
  8458  001180                     u3751:
  8459  001180  EFC5  F008         	goto	l4794
  8460  001184                     u3750:
  8461  001184                     l4792:
  8462                           
  8463                           ; BSR set to: 0
  8464                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  8465  001184  076C               	decf	dtoa@w& (0+255),f,b
  8466  001186  A0D8               	btfss	status,0,c
  8467  001188  076D               	decf	(dtoa@w+1)& (0+255),f,b
  8468  00118A                     l4794:
  8469                           
  8470                           ; BSR set to: 0
  8471                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  8472  00118A  0E00               	movlw	0
  8473  00118C  6F79               	movwf	(dtoa@i+1)& (0+255),b
  8474  00118E  0E1F               	movlw	31
  8475  001190  6F78               	movwf	dtoa@i& (0+255),b
  8476  001192                     
  8477                           ; BSR set to: 0
  8478                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  8479  001192  0E00               	movlw	0
  8480  001194  6FF4               	movwf	(_dbuf+31)& (0+255),b
  8481                           
  8482                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8483  001196  EF4A  F009         	goto	l4808
  8484  00119A                     l4798:
  8485                           
  8486                           ; BSR set to: 0
  8487                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  8488  00119A  0778               	decf	dtoa@i& (0+255),f,b
  8489  00119C  A0D8               	btfss	status,0,c
  8490  00119E  0779               	decf	(dtoa@i+1)& (0+255),f,b
  8491  0011A0                     
  8492                           ; BSR set to: 0
  8493                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  8494  0011A0  0ED5               	movlw	low _dbuf
  8495  0011A2  2578               	addwf	dtoa@i& (0+255),w,b
  8496  0011A4  6ED9               	movwf	fsr2l,c
  8497  0011A6  0E00               	movlw	high _dbuf
  8498  0011A8  2179               	addwfc	(dtoa@i+1)& (0+255),w,b
  8499  0011AA  6EDA               	movwf	fsr2h,c
  8500  0011AC  C070  F011         	movff	dtoa@n,___aomod@dividend
  8501  0011B0  C071  F012         	movff	dtoa@n+1,___aomod@dividend+1
  8502  0011B4  C072  F013         	movff	dtoa@n+2,___aomod@dividend+2
  8503  0011B8  C073  F014         	movff	dtoa@n+3,___aomod@dividend+3
  8504  0011BC  C074  F015         	movff	dtoa@n+4,___aomod@dividend+4
  8505  0011C0  C075  F016         	movff	dtoa@n+5,___aomod@dividend+5
  8506  0011C4  C076  F017         	movff	dtoa@n+6,___aomod@dividend+6
  8507  0011C8  C077  F018         	movff	dtoa@n+7,___aomod@dividend+7
  8508  0011CC  0E0A               	movlw	10
  8509  0011CE  6E19               	movwf	___aomod@divisor^0,c
  8510  0011D0  0E00               	movlw	0
  8511  0011D2  6E1A               	movwf	(___aomod@divisor+1)^0,c
  8512  0011D4  0E00               	movlw	0
  8513  0011D6  6E1B               	movwf	(___aomod@divisor+2)^0,c
  8514  0011D8  0E00               	movlw	0
  8515  0011DA  6E1C               	movwf	(___aomod@divisor+3)^0,c
  8516  0011DC  0E00               	movlw	0
  8517  0011DE  6E1D               	movwf	(___aomod@divisor+4)^0,c
  8518  0011E0  0E00               	movlw	0
  8519  0011E2  6E1E               	movwf	(___aomod@divisor+5)^0,c
  8520  0011E4  0E00               	movlw	0
  8521  0011E6  6E1F               	movwf	(___aomod@divisor+6)^0,c
  8522  0011E8  0E00               	movlw	0
  8523  0011EA  6E20               	movwf	(___aomod@divisor+7)^0,c
  8524  0011EC  EC58  F00F         	call	___aomod	;wreg free
  8525  0011F0  C011  F060         	movff	?___aomod,??_dtoa
  8526  0011F4  C012  F061         	movff	?___aomod+1,??_dtoa+1
  8527  0011F8  C013  F062         	movff	?___aomod+2,??_dtoa+2
  8528  0011FC  C014  F063         	movff	?___aomod+3,??_dtoa+3
  8529  001200  C015  F064         	movff	?___aomod+4,??_dtoa+4
  8530  001204  C016  F065         	movff	?___aomod+5,??_dtoa+5
  8531  001208  C017  F066         	movff	?___aomod+6,??_dtoa+6
  8532  00120C  C018  F067         	movff	?___aomod+7,??_dtoa+7
  8533  001210  C060  F023         	movff	??_dtoa,abs@a
  8534  001214  C062  F024         	movff	??_dtoa+2,abs@a+1
  8535  001218  EC18  F013         	call	_abs	;wreg free
  8536  00121C  5023               	movf	?_abs^0,w,c
  8537  00121E  0F30               	addlw	48
  8538  001220  6EDF               	movwf	indf2,c
  8539  001222                     
  8540                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  8541  001222  0100               	movlb	0	; () banked
  8542  001224  076A               	decf	dtoa@p& (0+255),f,b
  8543  001226  A0D8               	btfss	status,0,c
  8544  001228  076B               	decf	(dtoa@p+1)& (0+255),f,b
  8545  00122A                     
  8546                           ; BSR set to: 0
  8547                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  8548  00122A  076C               	decf	dtoa@w& (0+255),f,b
  8549  00122C  A0D8               	btfss	status,0,c
  8550  00122E  076D               	decf	(dtoa@w+1)& (0+255),f,b
  8551  001230                     
  8552                           ; BSR set to: 0
  8553                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  8554  001230  C070  F011         	movff	dtoa@n,___aodiv@dividend
  8555  001234  C071  F012         	movff	dtoa@n+1,___aodiv@dividend+1
  8556  001238  C072  F013         	movff	dtoa@n+2,___aodiv@dividend+2
  8557  00123C  C073  F014         	movff	dtoa@n+3,___aodiv@dividend+3
  8558  001240  C074  F015         	movff	dtoa@n+4,___aodiv@dividend+4
  8559  001244  C075  F016         	movff	dtoa@n+5,___aodiv@dividend+5
  8560  001248  C076  F017         	movff	dtoa@n+6,___aodiv@dividend+6
  8561  00124C  C077  F018         	movff	dtoa@n+7,___aodiv@dividend+7
  8562  001250  0E0A               	movlw	10
  8563  001252  6E19               	movwf	___aodiv@divisor^0,c
  8564  001254  0E00               	movlw	0
  8565  001256  6E1A               	movwf	(___aodiv@divisor+1)^0,c
  8566  001258  0E00               	movlw	0
  8567  00125A  6E1B               	movwf	(___aodiv@divisor+2)^0,c
  8568  00125C  0E00               	movlw	0
  8569  00125E  6E1C               	movwf	(___aodiv@divisor+3)^0,c
  8570  001260  0E00               	movlw	0
  8571  001262  6E1D               	movwf	(___aodiv@divisor+4)^0,c
  8572  001264  0E00               	movlw	0
  8573  001266  6E1E               	movwf	(___aodiv@divisor+5)^0,c
  8574  001268  0E00               	movlw	0
  8575  00126A  6E1F               	movwf	(___aodiv@divisor+6)^0,c
  8576  00126C  0E00               	movlw	0
  8577  00126E  6E20               	movwf	(___aodiv@divisor+7)^0,c
  8578  001270  ECD1  F00D         	call	___aodiv	;wreg free
  8579  001274  C011  F070         	movff	?___aodiv,dtoa@n
  8580  001278  C012  F071         	movff	?___aodiv+1,dtoa@n+1
  8581  00127C  C013  F072         	movff	?___aodiv+2,dtoa@n+2
  8582  001280  C014  F073         	movff	?___aodiv+3,dtoa@n+3
  8583  001284  C015  F074         	movff	?___aodiv+4,dtoa@n+4
  8584  001288  C016  F075         	movff	?___aodiv+5,dtoa@n+5
  8585  00128C  C017  F076         	movff	?___aodiv+6,dtoa@n+6
  8586  001290  C018  F077         	movff	?___aodiv+7,dtoa@n+7
  8587  001294                     l4808:
  8588                           
  8589                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8590  001294  0100               	movlb	0	; () banked
  8591  001296  BF79               	btfsc	(dtoa@i+1)& (0+255),7,b
  8592  001298  EF56  F009         	goto	u3761
  8593  00129C  5179               	movf	(dtoa@i+1)& (0+255),w,b
  8594  00129E  E108               	bnz	u3760
  8595  0012A0  0578               	decf	dtoa@i& (0+255),w,b
  8596  0012A2  A0D8               	btfss	status,0,c
  8597  0012A4  EF56  F009         	goto	u3761
  8598  0012A8  EF58  F009         	goto	u3760
  8599  0012AC                     u3761:
  8600  0012AC  EF88  F009         	goto	l4818
  8601  0012B0                     u3760:
  8602  0012B0                     
  8603                           ; BSR set to: 0
  8604  0012B0  5170               	movf	dtoa@n& (0+255),w,b
  8605  0012B2  1171               	iorwf	(dtoa@n+1)& (0+255),w,b
  8606  0012B4  1172               	iorwf	(dtoa@n+2)& (0+255),w,b
  8607  0012B6  1173               	iorwf	(dtoa@n+3)& (0+255),w,b
  8608  0012B8  1174               	iorwf	(dtoa@n+4)& (0+255),w,b
  8609  0012BA  1175               	iorwf	(dtoa@n+5)& (0+255),w,b
  8610  0012BC  1176               	iorwf	(dtoa@n+6)& (0+255),w,b
  8611  0012BE  1177               	iorwf	(dtoa@n+7)& (0+255),w,b
  8612  0012C0  A4D8               	btfss	status,2,c
  8613  0012C2  EF65  F009         	goto	u3771
  8614  0012C6  EF67  F009         	goto	u3770
  8615  0012CA                     u3771:
  8616  0012CA  EFCD  F008         	goto	l4798
  8617  0012CE                     u3770:
  8618  0012CE                     
  8619                           ; BSR set to: 0
  8620  0012CE  BF6B               	btfsc	(dtoa@p+1)& (0+255),7,b
  8621  0012D0  EF74  F009         	goto	u3780
  8622  0012D4  516B               	movf	(dtoa@p+1)& (0+255),w,b
  8623  0012D6  E106               	bnz	u3781
  8624  0012D8  056A               	decf	dtoa@p& (0+255),w,b
  8625  0012DA  B0D8               	btfsc	status,0,c
  8626  0012DC  EF72  F009         	goto	u3781
  8627  0012E0  EF74  F009         	goto	u3780
  8628  0012E4                     u3781:
  8629  0012E4  EFCD  F008         	goto	l4798
  8630  0012E8                     u3780:
  8631  0012E8                     
  8632                           ; BSR set to: 0
  8633  0012E8  BF6D               	btfsc	(dtoa@w+1)& (0+255),7,b
  8634  0012EA  EF7F  F009         	goto	u3791
  8635  0012EE  516D               	movf	(dtoa@w+1)& (0+255),w,b
  8636  0012F0  E108               	bnz	u3790
  8637  0012F2  056C               	decf	dtoa@w& (0+255),w,b
  8638  0012F4  A0D8               	btfss	status,0,c
  8639  0012F6  EF7F  F009         	goto	u3791
  8640  0012FA  EF81  F009         	goto	u3790
  8641  0012FE                     u3791:
  8642  0012FE  EF88  F009         	goto	l4818
  8643  001302                     u3790:
  8644  001302                     
  8645                           ; BSR set to: 0
  8646  001302  B243               	btfsc	_flags^0,1,c
  8647  001304  EF86  F009         	goto	u3801
  8648  001308  EF88  F009         	goto	u3800
  8649  00130C                     u3801:
  8650  00130C  EFCD  F008         	goto	l4798
  8651  001310                     u3800:
  8652  001310                     l4818:
  8653                           
  8654                           ; BSR set to: 0
  8655                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  8656  001310  516E               	movf	dtoa@s& (0+255),w,b
  8657  001312  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
  8658  001314  A4D8               	btfss	status,2,c
  8659  001316  EF8F  F009         	goto	u3811
  8660  00131A  EF91  F009         	goto	u3810
  8661  00131E                     u3811:
  8662  00131E  EF98  F009         	goto	l4822
  8663  001322                     u3810:
  8664  001322                     
  8665                           ; BSR set to: 0
  8666  001322  A443               	btfss	_flags^0,2,c
  8667  001324  EF96  F009         	goto	u3821
  8668  001328  EF98  F009         	goto	u3820
  8669  00132C                     u3821:
  8670  00132C  EFB6  F009         	goto	l4832
  8671  001330                     u3820:
  8672  001330                     l4822:
  8673                           
  8674                           ; BSR set to: 0
  8675                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  8676  001330  0778               	decf	dtoa@i& (0+255),f,b
  8677  001332  A0D8               	btfss	status,0,c
  8678  001334  0779               	decf	(dtoa@i+1)& (0+255),f,b
  8679  001336                     
  8680                           ; BSR set to: 0
  8681                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  8682  001336  516E               	movf	dtoa@s& (0+255),w,b
  8683  001338  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
  8684  00133A  A4D8               	btfss	status,2,c
  8685  00133C  EFA2  F009         	goto	u3831
  8686  001340  EFA4  F009         	goto	u3830
  8687  001344                     u3831:
  8688  001344  EFAA  F009         	goto	l4828
  8689  001348                     u3830:
  8690  001348                     
  8691                           ; BSR set to: 0
  8692  001348  0E00               	movlw	0
  8693  00134A  6F69               	movwf	(_dtoa$1520+1)& (0+255),b
  8694  00134C  0E2B               	movlw	43
  8695  00134E  6F68               	movwf	_dtoa$1520& (0+255),b
  8696  001350  EFAE  F009         	goto	l4830
  8697  001354                     l4828:
  8698                           
  8699                           ; BSR set to: 0
  8700  001354  0E00               	movlw	0
  8701  001356  6F69               	movwf	(_dtoa$1520+1)& (0+255),b
  8702  001358  0E2D               	movlw	45
  8703  00135A  6F68               	movwf	_dtoa$1520& (0+255),b
  8704  00135C                     l4830:
  8705                           
  8706                           ; BSR set to: 0
  8707  00135C  0ED5               	movlw	low _dbuf
  8708  00135E  2578               	addwf	dtoa@i& (0+255),w,b
  8709  001360  6ED9               	movwf	fsr2l,c
  8710  001362  0E00               	movlw	high _dbuf
  8711  001364  2179               	addwfc	(dtoa@i+1)& (0+255),w,b
  8712  001366  6EDA               	movwf	fsr2h,c
  8713  001368  C068  FFDF         	movff	_dtoa$1520,indf2
  8714  00136C                     l4832:
  8715                           
  8716                           ; BSR set to: 0
  8717                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  8718  00136C  C02E  F023         	movff	dtoa@fp,pad@fp
  8719  001370  C02F  F024         	movff	dtoa@fp+1,pad@fp+1
  8720  001374  0ED5               	movlw	low _dbuf
  8721  001376  2578               	addwf	dtoa@i& (0+255),w,b
  8722  001378  6E25               	movwf	pad@buf^0,c
  8723  00137A  0E00               	movlw	high _dbuf
  8724  00137C  2179               	addwfc	(dtoa@i+1)& (0+255),w,b
  8725  00137E  6E26               	movwf	(pad@buf+1)^0,c
  8726  001380  C06C  F027         	movff	dtoa@w,pad@p
  8727  001384  C06D  F028         	movff	dtoa@w+1,pad@p+1
  8728  001388  EC0A  F010         	call	_pad	;wreg free
  8729  00138C  C023  F02E         	movff	?_pad,?_dtoa
  8730  001390  C024  F02F         	movff	?_pad+1,?_dtoa+1
  8731  001394  0012               	return		;funcret
  8732  001396                     __end_of_dtoa:
  8733                           	opt callstack 0
  8734                           
  8735 ;; *************** function _abs *****************
  8736 ;; Defined at:
  8737 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  8738 ;; Parameters:    Size  Location     Type
  8739 ;;  a               2   34[COMRAM] int 
  8740 ;; Auto vars:     Size  Location     Type
  8741 ;;		None
  8742 ;; Return value:  Size  Location     Type
  8743 ;;                  2   34[COMRAM] int 
  8744 ;; Registers used:
  8745 ;;		wreg, status,2, status,0
  8746 ;; Tracked objects:
  8747 ;;		On entry : 0/0
  8748 ;;		On exit  : 0/0
  8749 ;;		Unchanged: 0/0
  8750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8751 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8753 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8754 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8755 ;;Total ram usage:        4 bytes
  8756 ;; Hardware stack levels used:    1
  8757 ;; Hardware stack levels required when called:    4
  8758 ;; This function calls:
  8759 ;;		Nothing
  8760 ;; This function is called by:
  8761 ;;		_dtoa
  8762 ;; This function uses a non-reentrant model
  8763 ;;
  8764                           
  8765                           	psect	text33
  8766  002630                     __ptext33:
  8767                           	opt callstack 0
  8768  002630                     _abs:
  8769                           	opt callstack 22
  8770  002630  BE24               	btfsc	(abs@a+1)^0,7,c
  8771  002632  EF25  F013         	goto	u3430
  8772  002636  5024               	movf	(abs@a+1)^0,w,c
  8773  002638  E106               	bnz	u3431
  8774  00263A  0423               	decf	abs@a^0,w,c
  8775  00263C  B0D8               	btfsc	status,0,c
  8776  00263E  EF23  F013         	goto	u3431
  8777  002642  EF25  F013         	goto	u3430
  8778  002646                     u3431:
  8779  002646  EF33  F013         	goto	l1482
  8780  00264A                     u3430:
  8781  00264A  C023  F025         	movff	abs@a,??_abs
  8782  00264E  C024  F026         	movff	abs@a+1,??_abs+1
  8783  002652  1E25               	comf	??_abs^0,f,c
  8784  002654  1E26               	comf	(??_abs+1)^0,f,c
  8785  002656  4A25               	infsnz	??_abs^0,f,c
  8786  002658  2A26               	incf	(??_abs+1)^0,f,c
  8787  00265A  C025  F023         	movff	??_abs,?_abs
  8788  00265E  C026  F024         	movff	??_abs+1,?_abs+1
  8789  002662  EF37  F013         	goto	l1485
  8790  002666                     l1482:
  8791  002666  C023  F023         	movff	abs@a,?_abs
  8792  00266A  C024  F024         	movff	abs@a+1,?_abs+1
  8793  00266E                     l1485:
  8794  00266E  0012               	return		;funcret
  8795  002670                     __end_of_abs:
  8796                           	opt callstack 0
  8797                           
  8798 ;; *************** function ___aomod *****************
  8799 ;; Defined at:
  8800 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  8801 ;; Parameters:    Size  Location     Type
  8802 ;;  dividend        8   16[COMRAM] long long 
  8803 ;;  divisor         8   24[COMRAM] long long 
  8804 ;; Auto vars:     Size  Location     Type
  8805 ;;  sign            1   33[COMRAM] unsigned char 
  8806 ;;  counter         1   32[COMRAM] unsigned char 
  8807 ;; Return value:  Size  Location     Type
  8808 ;;                  8   16[COMRAM] long long 
  8809 ;; Registers used:
  8810 ;;		wreg, status,2, status,0
  8811 ;; Tracked objects:
  8812 ;;		On entry : 0/0
  8813 ;;		On exit  : 0/0
  8814 ;;		Unchanged: 0/0
  8815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8816 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8817 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8819 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8820 ;;Total ram usage:       18 bytes
  8821 ;; Hardware stack levels used:    1
  8822 ;; Hardware stack levels required when called:    4
  8823 ;; This function calls:
  8824 ;;		Nothing
  8825 ;; This function is called by:
  8826 ;;		_dtoa
  8827 ;; This function uses a non-reentrant model
  8828 ;;
  8829                           
  8830                           	psect	text34
  8831  001EB0                     __ptext34:
  8832                           	opt callstack 0
  8833  001EB0                     ___aomod:
  8834                           	opt callstack 22
  8835  001EB0  0E00               	movlw	0
  8836  001EB2  6E22               	movwf	___aomod@sign^0,c
  8837  001EB4  BE18               	btfsc	(___aomod@dividend+7)^0,7,c
  8838  001EB6  EF61  F00F         	goto	u3600
  8839  001EBA  EF5F  F00F         	goto	u3601
  8840  001EBE                     u3601:
  8841  001EBE  EF73  F00F         	goto	l4720
  8842  001EC2                     u3600:
  8843  001EC2  1E18               	comf	(___aomod@dividend+7)^0,f,c
  8844  001EC4  1E17               	comf	(___aomod@dividend+6)^0,f,c
  8845  001EC6  1E16               	comf	(___aomod@dividend+5)^0,f,c
  8846  001EC8  1E15               	comf	(___aomod@dividend+4)^0,f,c
  8847  001ECA  1E14               	comf	(___aomod@dividend+3)^0,f,c
  8848  001ECC  1E13               	comf	(___aomod@dividend+2)^0,f,c
  8849  001ECE  1E12               	comf	(___aomod@dividend+1)^0,f,c
  8850  001ED0  6C11               	negf	___aomod@dividend^0,c
  8851  001ED2  0E00               	movlw	0
  8852  001ED4  2212               	addwfc	(___aomod@dividend+1)^0,f,c
  8853  001ED6  2213               	addwfc	(___aomod@dividend+2)^0,f,c
  8854  001ED8  2214               	addwfc	(___aomod@dividend+3)^0,f,c
  8855  001EDA  2215               	addwfc	(___aomod@dividend+4)^0,f,c
  8856  001EDC  2216               	addwfc	(___aomod@dividend+5)^0,f,c
  8857  001EDE  2217               	addwfc	(___aomod@dividend+6)^0,f,c
  8858  001EE0  2218               	addwfc	(___aomod@dividend+7)^0,f,c
  8859  001EE2  0E01               	movlw	1
  8860  001EE4  6E22               	movwf	___aomod@sign^0,c
  8861  001EE6                     l4720:
  8862  001EE6  BE20               	btfsc	(___aomod@divisor+7)^0,7,c
  8863  001EE8  EF7A  F00F         	goto	u3610
  8864  001EEC  EF78  F00F         	goto	u3611
  8865  001EF0                     u3611:
  8866  001EF0  EF8A  F00F         	goto	l4724
  8867  001EF4                     u3610:
  8868  001EF4  1E20               	comf	(___aomod@divisor+7)^0,f,c
  8869  001EF6  1E1F               	comf	(___aomod@divisor+6)^0,f,c
  8870  001EF8  1E1E               	comf	(___aomod@divisor+5)^0,f,c
  8871  001EFA  1E1D               	comf	(___aomod@divisor+4)^0,f,c
  8872  001EFC  1E1C               	comf	(___aomod@divisor+3)^0,f,c
  8873  001EFE  1E1B               	comf	(___aomod@divisor+2)^0,f,c
  8874  001F00  1E1A               	comf	(___aomod@divisor+1)^0,f,c
  8875  001F02  6C19               	negf	___aomod@divisor^0,c
  8876  001F04  0E00               	movlw	0
  8877  001F06  221A               	addwfc	(___aomod@divisor+1)^0,f,c
  8878  001F08  221B               	addwfc	(___aomod@divisor+2)^0,f,c
  8879  001F0A  221C               	addwfc	(___aomod@divisor+3)^0,f,c
  8880  001F0C  221D               	addwfc	(___aomod@divisor+4)^0,f,c
  8881  001F0E  221E               	addwfc	(___aomod@divisor+5)^0,f,c
  8882  001F10  221F               	addwfc	(___aomod@divisor+6)^0,f,c
  8883  001F12  2220               	addwfc	(___aomod@divisor+7)^0,f,c
  8884  001F14                     l4724:
  8885  001F14  5019               	movf	___aomod@divisor^0,w,c
  8886  001F16  101A               	iorwf	(___aomod@divisor+1)^0,w,c
  8887  001F18  101B               	iorwf	(___aomod@divisor+2)^0,w,c
  8888  001F1A  101C               	iorwf	(___aomod@divisor+3)^0,w,c
  8889  001F1C  101D               	iorwf	(___aomod@divisor+4)^0,w,c
  8890  001F1E  101E               	iorwf	(___aomod@divisor+5)^0,w,c
  8891  001F20  101F               	iorwf	(___aomod@divisor+6)^0,w,c
  8892  001F22  1020               	iorwf	(___aomod@divisor+7)^0,w,c
  8893  001F24  B4D8               	btfsc	status,2,c
  8894  001F26  EF97  F00F         	goto	u3621
  8895  001F2A  EF99  F00F         	goto	u3620
  8896  001F2E                     u3621:
  8897  001F2E  EFE1  F00F         	goto	l4740
  8898  001F32                     u3620:
  8899  001F32  0E01               	movlw	1
  8900  001F34  6E21               	movwf	___aomod@counter^0,c
  8901  001F36  EFA7  F00F         	goto	l4730
  8902  001F3A                     l4728:
  8903  001F3A  90D8               	bcf	status,0,c
  8904  001F3C  3619               	rlcf	___aomod@divisor^0,f,c
  8905  001F3E  361A               	rlcf	(___aomod@divisor+1)^0,f,c
  8906  001F40  361B               	rlcf	(___aomod@divisor+2)^0,f,c
  8907  001F42  361C               	rlcf	(___aomod@divisor+3)^0,f,c
  8908  001F44  361D               	rlcf	(___aomod@divisor+4)^0,f,c
  8909  001F46  361E               	rlcf	(___aomod@divisor+5)^0,f,c
  8910  001F48  361F               	rlcf	(___aomod@divisor+6)^0,f,c
  8911  001F4A  3620               	rlcf	(___aomod@divisor+7)^0,f,c
  8912  001F4C  2A21               	incf	___aomod@counter^0,f,c
  8913  001F4E                     l4730:
  8914  001F4E  AE20               	btfss	(___aomod@divisor+7)^0,7,c
  8915  001F50  EFAC  F00F         	goto	u3631
  8916  001F54  EFAE  F00F         	goto	u3630
  8917  001F58                     u3631:
  8918  001F58  EF9D  F00F         	goto	l4728
  8919  001F5C                     u3630:
  8920  001F5C                     l4732:
  8921  001F5C  5019               	movf	___aomod@divisor^0,w,c
  8922  001F5E  5C11               	subwf	___aomod@dividend^0,w,c
  8923  001F60  501A               	movf	(___aomod@divisor+1)^0,w,c
  8924  001F62  5812               	subwfb	(___aomod@dividend+1)^0,w,c
  8925  001F64  501B               	movf	(___aomod@divisor+2)^0,w,c
  8926  001F66  5813               	subwfb	(___aomod@dividend+2)^0,w,c
  8927  001F68  501C               	movf	(___aomod@divisor+3)^0,w,c
  8928  001F6A  5814               	subwfb	(___aomod@dividend+3)^0,w,c
  8929  001F6C  501D               	movf	(___aomod@divisor+4)^0,w,c
  8930  001F6E  5815               	subwfb	(___aomod@dividend+4)^0,w,c
  8931  001F70  501E               	movf	(___aomod@divisor+5)^0,w,c
  8932  001F72  5816               	subwfb	(___aomod@dividend+5)^0,w,c
  8933  001F74  501F               	movf	(___aomod@divisor+6)^0,w,c
  8934  001F76  5817               	subwfb	(___aomod@dividend+6)^0,w,c
  8935  001F78  5020               	movf	(___aomod@divisor+7)^0,w,c
  8936  001F7A  5818               	subwfb	(___aomod@dividend+7)^0,w,c
  8937  001F7C  A0D8               	btfss	status,0,c
  8938  001F7E  EFC3  F00F         	goto	u3641
  8939  001F82  EFC5  F00F         	goto	u3640
  8940  001F86                     u3641:
  8941  001F86  EFD5  F00F         	goto	l4736
  8942  001F8A                     u3640:
  8943  001F8A  5019               	movf	___aomod@divisor^0,w,c
  8944  001F8C  5E11               	subwf	___aomod@dividend^0,f,c
  8945  001F8E  501A               	movf	(___aomod@divisor+1)^0,w,c
  8946  001F90  5A12               	subwfb	(___aomod@dividend+1)^0,f,c
  8947  001F92  501B               	movf	(___aomod@divisor+2)^0,w,c
  8948  001F94  5A13               	subwfb	(___aomod@dividend+2)^0,f,c
  8949  001F96  501C               	movf	(___aomod@divisor+3)^0,w,c
  8950  001F98  5A14               	subwfb	(___aomod@dividend+3)^0,f,c
  8951  001F9A  501D               	movf	(___aomod@divisor+4)^0,w,c
  8952  001F9C  5A15               	subwfb	(___aomod@dividend+4)^0,f,c
  8953  001F9E  501E               	movf	(___aomod@divisor+5)^0,w,c
  8954  001FA0  5A16               	subwfb	(___aomod@dividend+5)^0,f,c
  8955  001FA2  501F               	movf	(___aomod@divisor+6)^0,w,c
  8956  001FA4  5A17               	subwfb	(___aomod@dividend+6)^0,f,c
  8957  001FA6  5020               	movf	(___aomod@divisor+7)^0,w,c
  8958  001FA8  5A18               	subwfb	(___aomod@dividend+7)^0,f,c
  8959  001FAA                     l4736:
  8960  001FAA  90D8               	bcf	status,0,c
  8961  001FAC  3220               	rrcf	(___aomod@divisor+7)^0,f,c
  8962  001FAE  321F               	rrcf	(___aomod@divisor+6)^0,f,c
  8963  001FB0  321E               	rrcf	(___aomod@divisor+5)^0,f,c
  8964  001FB2  321D               	rrcf	(___aomod@divisor+4)^0,f,c
  8965  001FB4  321C               	rrcf	(___aomod@divisor+3)^0,f,c
  8966  001FB6  321B               	rrcf	(___aomod@divisor+2)^0,f,c
  8967  001FB8  321A               	rrcf	(___aomod@divisor+1)^0,f,c
  8968  001FBA  3219               	rrcf	___aomod@divisor^0,f,c
  8969  001FBC  2E21               	decfsz	___aomod@counter^0,f,c
  8970  001FBE  EFAE  F00F         	goto	l4732
  8971  001FC2                     l4740:
  8972  001FC2  5022               	movf	___aomod@sign^0,w,c
  8973  001FC4  B4D8               	btfsc	status,2,c
  8974  001FC6  EFE7  F00F         	goto	u3651
  8975  001FCA  EFE9  F00F         	goto	u3650
  8976  001FCE                     u3651:
  8977  001FCE  EFF9  F00F         	goto	l4744
  8978  001FD2                     u3650:
  8979  001FD2  1E18               	comf	(___aomod@dividend+7)^0,f,c
  8980  001FD4  1E17               	comf	(___aomod@dividend+6)^0,f,c
  8981  001FD6  1E16               	comf	(___aomod@dividend+5)^0,f,c
  8982  001FD8  1E15               	comf	(___aomod@dividend+4)^0,f,c
  8983  001FDA  1E14               	comf	(___aomod@dividend+3)^0,f,c
  8984  001FDC  1E13               	comf	(___aomod@dividend+2)^0,f,c
  8985  001FDE  1E12               	comf	(___aomod@dividend+1)^0,f,c
  8986  001FE0  6C11               	negf	___aomod@dividend^0,c
  8987  001FE2  0E00               	movlw	0
  8988  001FE4  2212               	addwfc	(___aomod@dividend+1)^0,f,c
  8989  001FE6  2213               	addwfc	(___aomod@dividend+2)^0,f,c
  8990  001FE8  2214               	addwfc	(___aomod@dividend+3)^0,f,c
  8991  001FEA  2215               	addwfc	(___aomod@dividend+4)^0,f,c
  8992  001FEC  2216               	addwfc	(___aomod@dividend+5)^0,f,c
  8993  001FEE  2217               	addwfc	(___aomod@dividend+6)^0,f,c
  8994  001FF0  2218               	addwfc	(___aomod@dividend+7)^0,f,c
  8995  001FF2                     l4744:
  8996  001FF2  C011  F011         	movff	___aomod@dividend,?___aomod
  8997  001FF6  C012  F012         	movff	___aomod@dividend+1,?___aomod+1
  8998  001FFA  C013  F013         	movff	___aomod@dividend+2,?___aomod+2
  8999  001FFE  C014  F014         	movff	___aomod@dividend+3,?___aomod+3
  9000  002002  C015  F015         	movff	___aomod@dividend+4,?___aomod+4
  9001  002006  C016  F016         	movff	___aomod@dividend+5,?___aomod+5
  9002  00200A  C017  F017         	movff	___aomod@dividend+6,?___aomod+6
  9003  00200E  C018  F018         	movff	___aomod@dividend+7,?___aomod+7
  9004  002012  0012               	return		;funcret
  9005  002014                     __end_of___aomod:
  9006                           	opt callstack 0
  9007                           
  9008 ;; *************** function ___aodiv *****************
  9009 ;; Defined at:
  9010 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  9011 ;; Parameters:    Size  Location     Type
  9012 ;;  dividend        8   16[COMRAM] long long 
  9013 ;;  divisor         8   24[COMRAM] long long 
  9014 ;; Auto vars:     Size  Location     Type
  9015 ;;  quotient        8   34[COMRAM] long long 
  9016 ;;  sign            1   33[COMRAM] unsigned char 
  9017 ;;  counter         1   32[COMRAM] unsigned char 
  9018 ;; Return value:  Size  Location     Type
  9019 ;;                  8   16[COMRAM] long long 
  9020 ;; Registers used:
  9021 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9022 ;; Tracked objects:
  9023 ;;		On entry : 0/0
  9024 ;;		On exit  : 0/0
  9025 ;;		Unchanged: 0/0
  9026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9027 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9028 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9030 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9031 ;;Total ram usage:       26 bytes
  9032 ;; Hardware stack levels used:    1
  9033 ;; Hardware stack levels required when called:    4
  9034 ;; This function calls:
  9035 ;;		Nothing
  9036 ;; This function is called by:
  9037 ;;		_dtoa
  9038 ;; This function uses a non-reentrant model
  9039 ;;
  9040                           
  9041                           	psect	text35
  9042  001BA2                     __ptext35:
  9043                           	opt callstack 0
  9044  001BA2                     ___aodiv:
  9045                           	opt callstack 22
  9046  001BA2  0E00               	movlw	0
  9047  001BA4  6E22               	movwf	___aodiv@sign^0,c
  9048  001BA6  BE20               	btfsc	(___aodiv@divisor+7)^0,7,c
  9049  001BA8  EFDA  F00D         	goto	u3530
  9050  001BAC  EFD8  F00D         	goto	u3531
  9051  001BB0                     u3531:
  9052  001BB0  EFEC  F00D         	goto	l4676
  9053  001BB4                     u3530:
  9054  001BB4  1E20               	comf	(___aodiv@divisor+7)^0,f,c
  9055  001BB6  1E1F               	comf	(___aodiv@divisor+6)^0,f,c
  9056  001BB8  1E1E               	comf	(___aodiv@divisor+5)^0,f,c
  9057  001BBA  1E1D               	comf	(___aodiv@divisor+4)^0,f,c
  9058  001BBC  1E1C               	comf	(___aodiv@divisor+3)^0,f,c
  9059  001BBE  1E1B               	comf	(___aodiv@divisor+2)^0,f,c
  9060  001BC0  1E1A               	comf	(___aodiv@divisor+1)^0,f,c
  9061  001BC2  6C19               	negf	___aodiv@divisor^0,c
  9062  001BC4  0E00               	movlw	0
  9063  001BC6  221A               	addwfc	(___aodiv@divisor+1)^0,f,c
  9064  001BC8  221B               	addwfc	(___aodiv@divisor+2)^0,f,c
  9065  001BCA  221C               	addwfc	(___aodiv@divisor+3)^0,f,c
  9066  001BCC  221D               	addwfc	(___aodiv@divisor+4)^0,f,c
  9067  001BCE  221E               	addwfc	(___aodiv@divisor+5)^0,f,c
  9068  001BD0  221F               	addwfc	(___aodiv@divisor+6)^0,f,c
  9069  001BD2  2220               	addwfc	(___aodiv@divisor+7)^0,f,c
  9070  001BD4  0E01               	movlw	1
  9071  001BD6  6E22               	movwf	___aodiv@sign^0,c
  9072  001BD8                     l4676:
  9073  001BD8  BE18               	btfsc	(___aodiv@dividend+7)^0,7,c
  9074  001BDA  EFF3  F00D         	goto	u3540
  9075  001BDE  EFF1  F00D         	goto	u3541
  9076  001BE2                     u3541:
  9077  001BE2  EF05  F00E         	goto	l4682
  9078  001BE6                     u3540:
  9079  001BE6  1E18               	comf	(___aodiv@dividend+7)^0,f,c
  9080  001BE8  1E17               	comf	(___aodiv@dividend+6)^0,f,c
  9081  001BEA  1E16               	comf	(___aodiv@dividend+5)^0,f,c
  9082  001BEC  1E15               	comf	(___aodiv@dividend+4)^0,f,c
  9083  001BEE  1E14               	comf	(___aodiv@dividend+3)^0,f,c
  9084  001BF0  1E13               	comf	(___aodiv@dividend+2)^0,f,c
  9085  001BF2  1E12               	comf	(___aodiv@dividend+1)^0,f,c
  9086  001BF4  6C11               	negf	___aodiv@dividend^0,c
  9087  001BF6  0E00               	movlw	0
  9088  001BF8  2212               	addwfc	(___aodiv@dividend+1)^0,f,c
  9089  001BFA  2213               	addwfc	(___aodiv@dividend+2)^0,f,c
  9090  001BFC  2214               	addwfc	(___aodiv@dividend+3)^0,f,c
  9091  001BFE  2215               	addwfc	(___aodiv@dividend+4)^0,f,c
  9092  001C00  2216               	addwfc	(___aodiv@dividend+5)^0,f,c
  9093  001C02  2217               	addwfc	(___aodiv@dividend+6)^0,f,c
  9094  001C04  2218               	addwfc	(___aodiv@dividend+7)^0,f,c
  9095  001C06  0E01               	movlw	1
  9096  001C08  1A22               	xorwf	___aodiv@sign^0,f,c
  9097  001C0A                     l4682:
  9098  001C0A  EE20  F023         	lfsr	2,___aodiv@quotient
  9099  001C0E  0E07               	movlw	7
  9100  001C10                     u3551:
  9101  001C10  6ADE               	clrf	postinc2,c
  9102  001C12  06E8               	decf	wreg,f,c
  9103  001C14  E2FD               	bc	u3551
  9104  001C16  5019               	movf	___aodiv@divisor^0,w,c
  9105  001C18  101A               	iorwf	(___aodiv@divisor+1)^0,w,c
  9106  001C1A  101B               	iorwf	(___aodiv@divisor+2)^0,w,c
  9107  001C1C  101C               	iorwf	(___aodiv@divisor+3)^0,w,c
  9108  001C1E  101D               	iorwf	(___aodiv@divisor+4)^0,w,c
  9109  001C20  101E               	iorwf	(___aodiv@divisor+5)^0,w,c
  9110  001C22  101F               	iorwf	(___aodiv@divisor+6)^0,w,c
  9111  001C24  1020               	iorwf	(___aodiv@divisor+7)^0,w,c
  9112  001C26  B4D8               	btfsc	status,2,c
  9113  001C28  EF18  F00E         	goto	u3561
  9114  001C2C  EF1A  F00E         	goto	u3560
  9115  001C30                     u3561:
  9116  001C30  EF6C  F00E         	goto	l4704
  9117  001C34                     u3560:
  9118  001C34  0E01               	movlw	1
  9119  001C36  6E21               	movwf	___aodiv@counter^0,c
  9120  001C38  EF28  F00E         	goto	l4690
  9121  001C3C                     l4688:
  9122  001C3C  90D8               	bcf	status,0,c
  9123  001C3E  3619               	rlcf	___aodiv@divisor^0,f,c
  9124  001C40  361A               	rlcf	(___aodiv@divisor+1)^0,f,c
  9125  001C42  361B               	rlcf	(___aodiv@divisor+2)^0,f,c
  9126  001C44  361C               	rlcf	(___aodiv@divisor+3)^0,f,c
  9127  001C46  361D               	rlcf	(___aodiv@divisor+4)^0,f,c
  9128  001C48  361E               	rlcf	(___aodiv@divisor+5)^0,f,c
  9129  001C4A  361F               	rlcf	(___aodiv@divisor+6)^0,f,c
  9130  001C4C  3620               	rlcf	(___aodiv@divisor+7)^0,f,c
  9131  001C4E  2A21               	incf	___aodiv@counter^0,f,c
  9132  001C50                     l4690:
  9133  001C50  AE20               	btfss	(___aodiv@divisor+7)^0,7,c
  9134  001C52  EF2D  F00E         	goto	u3571
  9135  001C56  EF2F  F00E         	goto	u3570
  9136  001C5A                     u3571:
  9137  001C5A  EF1E  F00E         	goto	l4688
  9138  001C5E                     u3570:
  9139  001C5E                     l4692:
  9140  001C5E  90D8               	bcf	status,0,c
  9141  001C60  3623               	rlcf	___aodiv@quotient^0,f,c
  9142  001C62  3624               	rlcf	(___aodiv@quotient+1)^0,f,c
  9143  001C64  3625               	rlcf	(___aodiv@quotient+2)^0,f,c
  9144  001C66  3626               	rlcf	(___aodiv@quotient+3)^0,f,c
  9145  001C68  3627               	rlcf	(___aodiv@quotient+4)^0,f,c
  9146  001C6A  3628               	rlcf	(___aodiv@quotient+5)^0,f,c
  9147  001C6C  3629               	rlcf	(___aodiv@quotient+6)^0,f,c
  9148  001C6E  362A               	rlcf	(___aodiv@quotient+7)^0,f,c
  9149  001C70  5019               	movf	___aodiv@divisor^0,w,c
  9150  001C72  5C11               	subwf	___aodiv@dividend^0,w,c
  9151  001C74  501A               	movf	(___aodiv@divisor+1)^0,w,c
  9152  001C76  5812               	subwfb	(___aodiv@dividend+1)^0,w,c
  9153  001C78  501B               	movf	(___aodiv@divisor+2)^0,w,c
  9154  001C7A  5813               	subwfb	(___aodiv@dividend+2)^0,w,c
  9155  001C7C  501C               	movf	(___aodiv@divisor+3)^0,w,c
  9156  001C7E  5814               	subwfb	(___aodiv@dividend+3)^0,w,c
  9157  001C80  501D               	movf	(___aodiv@divisor+4)^0,w,c
  9158  001C82  5815               	subwfb	(___aodiv@dividend+4)^0,w,c
  9159  001C84  501E               	movf	(___aodiv@divisor+5)^0,w,c
  9160  001C86  5816               	subwfb	(___aodiv@dividend+5)^0,w,c
  9161  001C88  501F               	movf	(___aodiv@divisor+6)^0,w,c
  9162  001C8A  5817               	subwfb	(___aodiv@dividend+6)^0,w,c
  9163  001C8C  5020               	movf	(___aodiv@divisor+7)^0,w,c
  9164  001C8E  5818               	subwfb	(___aodiv@dividend+7)^0,w,c
  9165  001C90  A0D8               	btfss	status,0,c
  9166  001C92  EF4D  F00E         	goto	u3581
  9167  001C96  EF4F  F00E         	goto	u3580
  9168  001C9A                     u3581:
  9169  001C9A  EF60  F00E         	goto	l4700
  9170  001C9E                     u3580:
  9171  001C9E  5019               	movf	___aodiv@divisor^0,w,c
  9172  001CA0  5E11               	subwf	___aodiv@dividend^0,f,c
  9173  001CA2  501A               	movf	(___aodiv@divisor+1)^0,w,c
  9174  001CA4  5A12               	subwfb	(___aodiv@dividend+1)^0,f,c
  9175  001CA6  501B               	movf	(___aodiv@divisor+2)^0,w,c
  9176  001CA8  5A13               	subwfb	(___aodiv@dividend+2)^0,f,c
  9177  001CAA  501C               	movf	(___aodiv@divisor+3)^0,w,c
  9178  001CAC  5A14               	subwfb	(___aodiv@dividend+3)^0,f,c
  9179  001CAE  501D               	movf	(___aodiv@divisor+4)^0,w,c
  9180  001CB0  5A15               	subwfb	(___aodiv@dividend+4)^0,f,c
  9181  001CB2  501E               	movf	(___aodiv@divisor+5)^0,w,c
  9182  001CB4  5A16               	subwfb	(___aodiv@dividend+5)^0,f,c
  9183  001CB6  501F               	movf	(___aodiv@divisor+6)^0,w,c
  9184  001CB8  5A17               	subwfb	(___aodiv@dividend+6)^0,f,c
  9185  001CBA  5020               	movf	(___aodiv@divisor+7)^0,w,c
  9186  001CBC  5A18               	subwfb	(___aodiv@dividend+7)^0,f,c
  9187  001CBE  8023               	bsf	___aodiv@quotient^0,0,c
  9188  001CC0                     l4700:
  9189  001CC0  90D8               	bcf	status,0,c
  9190  001CC2  3220               	rrcf	(___aodiv@divisor+7)^0,f,c
  9191  001CC4  321F               	rrcf	(___aodiv@divisor+6)^0,f,c
  9192  001CC6  321E               	rrcf	(___aodiv@divisor+5)^0,f,c
  9193  001CC8  321D               	rrcf	(___aodiv@divisor+4)^0,f,c
  9194  001CCA  321C               	rrcf	(___aodiv@divisor+3)^0,f,c
  9195  001CCC  321B               	rrcf	(___aodiv@divisor+2)^0,f,c
  9196  001CCE  321A               	rrcf	(___aodiv@divisor+1)^0,f,c
  9197  001CD0  3219               	rrcf	___aodiv@divisor^0,f,c
  9198  001CD2  2E21               	decfsz	___aodiv@counter^0,f,c
  9199  001CD4  EF2F  F00E         	goto	l4692
  9200  001CD8                     l4704:
  9201  001CD8  5022               	movf	___aodiv@sign^0,w,c
  9202  001CDA  B4D8               	btfsc	status,2,c
  9203  001CDC  EF72  F00E         	goto	u3591
  9204  001CE0  EF74  F00E         	goto	u3590
  9205  001CE4                     u3591:
  9206  001CE4  EF84  F00E         	goto	l4708
  9207  001CE8                     u3590:
  9208  001CE8  1E2A               	comf	(___aodiv@quotient+7)^0,f,c
  9209  001CEA  1E29               	comf	(___aodiv@quotient+6)^0,f,c
  9210  001CEC  1E28               	comf	(___aodiv@quotient+5)^0,f,c
  9211  001CEE  1E27               	comf	(___aodiv@quotient+4)^0,f,c
  9212  001CF0  1E26               	comf	(___aodiv@quotient+3)^0,f,c
  9213  001CF2  1E25               	comf	(___aodiv@quotient+2)^0,f,c
  9214  001CF4  1E24               	comf	(___aodiv@quotient+1)^0,f,c
  9215  001CF6  6C23               	negf	___aodiv@quotient^0,c
  9216  001CF8  0E00               	movlw	0
  9217  001CFA  2224               	addwfc	(___aodiv@quotient+1)^0,f,c
  9218  001CFC  2225               	addwfc	(___aodiv@quotient+2)^0,f,c
  9219  001CFE  2226               	addwfc	(___aodiv@quotient+3)^0,f,c
  9220  001D00  2227               	addwfc	(___aodiv@quotient+4)^0,f,c
  9221  001D02  2228               	addwfc	(___aodiv@quotient+5)^0,f,c
  9222  001D04  2229               	addwfc	(___aodiv@quotient+6)^0,f,c
  9223  001D06  222A               	addwfc	(___aodiv@quotient+7)^0,f,c
  9224  001D08                     l4708:
  9225  001D08  C023  F011         	movff	___aodiv@quotient,?___aodiv
  9226  001D0C  C024  F012         	movff	___aodiv@quotient+1,?___aodiv+1
  9227  001D10  C025  F013         	movff	___aodiv@quotient+2,?___aodiv+2
  9228  001D14  C026  F014         	movff	___aodiv@quotient+3,?___aodiv+3
  9229  001D18  C027  F015         	movff	___aodiv@quotient+4,?___aodiv+4
  9230  001D1C  C028  F016         	movff	___aodiv@quotient+5,?___aodiv+5
  9231  001D20  C029  F017         	movff	___aodiv@quotient+6,?___aodiv+6
  9232  001D24  C02A  F018         	movff	___aodiv@quotient+7,?___aodiv+7
  9233  001D28  0012               	return		;funcret
  9234  001D2A                     __end_of___aodiv:
  9235                           	opt callstack 0
  9236                           
  9237 ;; *************** function _ctoa *****************
  9238 ;; Defined at:
  9239 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  9240 ;; Parameters:    Size  Location     Type
  9241 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  9242 ;;		 -> NULL(0), 
  9243 ;;  c               1   47[COMRAM] unsigned char 
  9244 ;; Auto vars:     Size  Location     Type
  9245 ;;  w               2   48[COMRAM] int 
  9246 ;;  l               2    0        int 
  9247 ;; Return value:  Size  Location     Type
  9248 ;;                  2   45[COMRAM] int 
  9249 ;; Registers used:
  9250 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9251 ;; Tracked objects:
  9252 ;;		On entry : 0/0
  9253 ;;		On exit  : 0/0
  9254 ;;		Unchanged: 0/0
  9255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9256 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9257 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9259 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9260 ;;Total ram usage:        5 bytes
  9261 ;; Hardware stack levels used:    1
  9262 ;; Hardware stack levels required when called:    9
  9263 ;; This function calls:
  9264 ;;		_pad
  9265 ;; This function is called by:
  9266 ;;		_vfpfcnvrt
  9267 ;; This function uses a non-reentrant model
  9268 ;;
  9269                           
  9270                           	psect	text36
  9271  002500                     __ptext36:
  9272                           	opt callstack 0
  9273  002500                     _ctoa:
  9274                           	opt callstack 18
  9275  002500                     
  9276                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  9277  002500  503F               	movf	_width^0,w,c
  9278  002502  1040               	iorwf	(_width+1)^0,w,c
  9279  002504  A4D8               	btfss	status,2,c
  9280  002506  EF87  F012         	goto	u3681
  9281  00250A  EF89  F012         	goto	u3680
  9282  00250E                     u3681:
  9283  00250E  EF8F  F012         	goto	l4764
  9284  002512                     u3680:
  9285  002512  C03F  F031         	movff	_width,ctoa@w
  9286  002516  C040  F032         	movff	_width+1,ctoa@w+1
  9287  00251A  EF95  F012         	goto	l4766
  9288  00251E                     l4764:
  9289  00251E  0EFF               	movlw	255
  9290  002520  243F               	addwf	_width^0,w,c
  9291  002522  6E31               	movwf	ctoa@w^0,c
  9292  002524  0EFF               	movlw	255
  9293  002526  2040               	addwfc	(_width+1)^0,w,c
  9294  002528  6E32               	movwf	(ctoa@w+1)^0,c
  9295  00252A                     l4766:
  9296                           
  9297                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  9298  00252A  C030  F0D5         	movff	ctoa@c,_dbuf
  9299  00252E                     
  9300                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  9301  00252E  0E00               	movlw	0
  9302  002530  0100               	movlb	0	; () banked
  9303  002532  6FD6               	movwf	(_dbuf+1)& (0+255),b
  9304  002534                     
  9305                           ; BSR set to: 0
  9306                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  9307  002534  C02E  F023         	movff	ctoa@fp,pad@fp
  9308  002538  C02F  F024         	movff	ctoa@fp+1,pad@fp+1
  9309  00253C  0ED5               	movlw	low _dbuf
  9310  00253E  6E25               	movwf	pad@buf^0,c
  9311  002540  0E00               	movlw	high _dbuf
  9312  002542  6E26               	movwf	(pad@buf+1)^0,c
  9313  002544  C031  F027         	movff	ctoa@w,pad@p
  9314  002548  C032  F028         	movff	ctoa@w+1,pad@p+1
  9315  00254C  EC0A  F010         	call	_pad	;wreg free
  9316  002550  C023  F02E         	movff	?_pad,?_ctoa
  9317  002554  C024  F02F         	movff	?_pad+1,?_ctoa+1
  9318  002558  0012               	return		;funcret
  9319  00255A                     __end_of_ctoa:
  9320                           	opt callstack 0
  9321                           
  9322 ;; *************** function _pad *****************
  9323 ;; Defined at:
  9324 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  9325 ;; Parameters:    Size  Location     Type
  9326 ;;  fp              2   34[COMRAM] PTR struct _IO_FILE
  9327 ;;		 -> NULL(0), 
  9328 ;;  buf             2   36[COMRAM] PTR unsigned char 
  9329 ;;		 -> dbuf(32), 
  9330 ;;  p               2   38[COMRAM] int 
  9331 ;; Auto vars:     Size  Location     Type
  9332 ;;  w               2   43[COMRAM] int 
  9333 ;;  i               2   41[COMRAM] int 
  9334 ;; Return value:  Size  Location     Type
  9335 ;;                  2   34[COMRAM] int 
  9336 ;; Registers used:
  9337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9338 ;; Tracked objects:
  9339 ;;		On entry : 0/0
  9340 ;;		On exit  : 0/0
  9341 ;;		Unchanged: 0/0
  9342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9343 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9344 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9345 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9346 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9347 ;;Total ram usage:       11 bytes
  9348 ;; Hardware stack levels used:    1
  9349 ;; Hardware stack levels required when called:    8
  9350 ;; This function calls:
  9351 ;;		_fputc
  9352 ;;		_fputs
  9353 ;;		_strlen
  9354 ;; This function is called by:
  9355 ;;		_ctoa
  9356 ;;		_dtoa
  9357 ;;		_xtoa
  9358 ;; This function uses a non-reentrant model
  9359 ;;
  9360                           
  9361                           	psect	text37
  9362  002014                     __ptext37:
  9363                           	opt callstack 0
  9364  002014                     _pad:
  9365                           	opt callstack 18
  9366  002014                     
  9367                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  9368  002014  A043               	btfss	_flags^0,0,c
  9369  002016  EF0F  F010         	goto	u3391
  9370  00201A  EF11  F010         	goto	u3390
  9371  00201E                     u3391:
  9372  00201E  EF1B  F010         	goto	l4618
  9373  002022                     u3390:
  9374  002022                     
  9375                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  9376  002022  C025  F01C         	movff	pad@buf,fputs@s
  9377  002026  C026  F01D         	movff	pad@buf+1,fputs@s+1
  9378  00202A  C023  F01E         	movff	pad@fp,fputs@fp
  9379  00202E  C024  F01F         	movff	pad@fp+1,fputs@fp+1
  9380  002032  ECD6  F012         	call	_fputs	;wreg free
  9381  002036                     l4618:
  9382                           
  9383                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  9384  002036  BE28               	btfsc	(pad@p+1)^0,7,c
  9385  002038  EF20  F010         	goto	u3401
  9386  00203C  EF22  F010         	goto	u3400
  9387  002040                     u3401:
  9388  002040  EF28  F010         	goto	l4622
  9389  002044                     u3400:
  9390  002044  C027  F02C         	movff	pad@p,pad@w
  9391  002048  C028  F02D         	movff	pad@p+1,pad@w+1
  9392  00204C  EF2C  F010         	goto	l696
  9393  002050                     l4622:
  9394  002050  0E00               	movlw	0
  9395  002052  6E2D               	movwf	(pad@w+1)^0,c
  9396  002054  0E00               	movlw	0
  9397  002056  6E2C               	movwf	pad@w^0,c
  9398  002058                     l696:
  9399                           
  9400                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  9401  002058  0E00               	movlw	0
  9402  00205A  6E2B               	movwf	(pad@i+1)^0,c
  9403  00205C  0E00               	movlw	0
  9404  00205E  6E2A               	movwf	pad@i^0,c
  9405                           
  9406                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9407  002060  EF3E  F010         	goto	l4628
  9408  002064                     l4624:
  9409                           
  9410                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  9411  002064  0E00               	movlw	0
  9412  002066  6E14               	movwf	(fputc@c+1)^0,c
  9413  002068  0E20               	movlw	32
  9414  00206A  6E13               	movwf	fputc@c^0,c
  9415  00206C  C023  F015         	movff	pad@fp,fputc@fp
  9416  002070  C024  F016         	movff	pad@fp+1,fputc@fp+1
  9417  002074  EC5A  F011         	call	_fputc	;wreg free
  9418  002078                     
  9419                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  9420  002078  4A2A               	infsnz	pad@i^0,f,c
  9421  00207A  2A2B               	incf	(pad@i+1)^0,f,c
  9422  00207C                     l4628:
  9423                           
  9424                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9425  00207C  502C               	movf	pad@w^0,w,c
  9426  00207E  5C2A               	subwf	pad@i^0,w,c
  9427  002080  502B               	movf	(pad@i+1)^0,w,c
  9428  002082  0A80               	xorlw	128
  9429  002084  6E29               	movwf	??_pad^0,c
  9430  002086  502D               	movf	(pad@w+1)^0,w,c
  9431  002088  0A80               	xorlw	128
  9432  00208A  5829               	subwfb	??_pad^0,w,c
  9433  00208C  A0D8               	btfss	status,0,c
  9434  00208E  EF4B  F010         	goto	u3411
  9435  002092  EF4D  F010         	goto	u3410
  9436  002096                     u3411:
  9437  002096  EF32  F010         	goto	l4624
  9438  00209A                     u3410:
  9439  00209A                     
  9440                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  9441  00209A  B043               	btfsc	_flags^0,0,c
  9442  00209C  EF52  F010         	goto	u3421
  9443  0020A0  EF54  F010         	goto	u3420
  9444  0020A4                     u3421:
  9445  0020A4  EF5E  F010         	goto	l4632
  9446  0020A8                     u3420:
  9447  0020A8                     
  9448                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  9449  0020A8  C025  F01C         	movff	pad@buf,fputs@s
  9450  0020AC  C026  F01D         	movff	pad@buf+1,fputs@s+1
  9451  0020B0  C023  F01E         	movff	pad@fp,fputs@fp
  9452  0020B4  C024  F01F         	movff	pad@fp+1,fputs@fp+1
  9453  0020B8  ECD6  F012         	call	_fputs	;wreg free
  9454  0020BC                     l4632:
  9455                           
  9456                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  9457  0020BC  C025  F011         	movff	pad@buf,strlen@s
  9458  0020C0  C026  F012         	movff	pad@buf+1,strlen@s+1
  9459  0020C4  ECE2  F013         	call	_strlen	;wreg free
  9460  0020C8  502C               	movf	pad@w^0,w,c
  9461  0020CA  2411               	addwf	?_strlen^0,w,c
  9462  0020CC  6E23               	movwf	?_pad^0,c
  9463  0020CE  502D               	movf	(pad@w+1)^0,w,c
  9464  0020D0  2012               	addwfc	(?_strlen+1)^0,w,c
  9465  0020D2  6E24               	movwf	(?_pad+1)^0,c
  9466  0020D4  0012               	return		;funcret
  9467  0020D6                     __end_of_pad:
  9468                           	opt callstack 0
  9469                           
  9470 ;; *************** function _strlen *****************
  9471 ;; Defined at:
  9472 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  9473 ;; Parameters:    Size  Location     Type
  9474 ;;  s               2   16[COMRAM] PTR const unsigned char 
  9475 ;;		 -> dbuf(32), 
  9476 ;; Auto vars:     Size  Location     Type
  9477 ;;  a               2   18[COMRAM] PTR const unsigned char 
  9478 ;;		 -> dbuf(32), 
  9479 ;; Return value:  Size  Location     Type
  9480 ;;                  2   16[COMRAM] unsigned int 
  9481 ;; Registers used:
  9482 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9483 ;; Tracked objects:
  9484 ;;		On entry : 0/0
  9485 ;;		On exit  : 0/0
  9486 ;;		Unchanged: 0/0
  9487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9488 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9489 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9491 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9492 ;;Total ram usage:        4 bytes
  9493 ;; Hardware stack levels used:    1
  9494 ;; Hardware stack levels required when called:    4
  9495 ;; This function calls:
  9496 ;;		Nothing
  9497 ;; This function is called by:
  9498 ;;		_pad
  9499 ;; This function uses a non-reentrant model
  9500 ;;
  9501                           
  9502                           	psect	text38
  9503  0027C4                     __ptext38:
  9504                           	opt callstack 0
  9505  0027C4                     _strlen:
  9506                           	opt callstack 21
  9507  0027C4  C011  F013         	movff	strlen@s,strlen@a
  9508  0027C8  C012  F014         	movff	strlen@s+1,strlen@a+1
  9509  0027CC  EFEA  F013         	goto	l4604
  9510  0027D0                     l4602:
  9511  0027D0  4A11               	infsnz	strlen@s^0,f,c
  9512  0027D2  2A12               	incf	(strlen@s+1)^0,f,c
  9513  0027D4                     l4604:
  9514  0027D4  C011  FFD9         	movff	strlen@s,fsr2l
  9515  0027D8  C012  FFDA         	movff	strlen@s+1,fsr2h
  9516  0027DC  50DF               	movf	indf2,w,c
  9517  0027DE  A4D8               	btfss	status,2,c
  9518  0027E0  EFF4  F013         	goto	u3361
  9519  0027E4  EFF6  F013         	goto	u3360
  9520  0027E8                     u3361:
  9521  0027E8  EFE8  F013         	goto	l4602
  9522  0027EC                     u3360:
  9523  0027EC  5013               	movf	strlen@a^0,w,c
  9524  0027EE  5C11               	subwf	strlen@s^0,w,c
  9525  0027F0  6E11               	movwf	?_strlen^0,c
  9526  0027F2  5014               	movf	(strlen@a+1)^0,w,c
  9527  0027F4  5812               	subwfb	(strlen@s+1)^0,w,c
  9528  0027F6  6E12               	movwf	(?_strlen+1)^0,c
  9529  0027F8  0012               	return		;funcret
  9530  0027FA                     __end_of_strlen:
  9531                           	opt callstack 0
  9532                           
  9533 ;; *************** function _fputs *****************
  9534 ;; Defined at:
  9535 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  9536 ;; Parameters:    Size  Location     Type
  9537 ;;  s               2   27[COMRAM] PTR const unsigned char 
  9538 ;;		 -> dbuf(32), 
  9539 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  9540 ;;		 -> NULL(0), 
  9541 ;; Auto vars:     Size  Location     Type
  9542 ;;  i               2   32[COMRAM] int 
  9543 ;;  c               1   31[COMRAM] unsigned char 
  9544 ;; Return value:  Size  Location     Type
  9545 ;;                  2   27[COMRAM] int 
  9546 ;; Registers used:
  9547 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9548 ;; Tracked objects:
  9549 ;;		On entry : 0/0
  9550 ;;		On exit  : 0/0
  9551 ;;		Unchanged: 0/0
  9552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9553 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9554 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9556 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9557 ;;Total ram usage:        7 bytes
  9558 ;; Hardware stack levels used:    1
  9559 ;; Hardware stack levels required when called:    7
  9560 ;; This function calls:
  9561 ;;		_fputc
  9562 ;; This function is called by:
  9563 ;;		_pad
  9564 ;; This function uses a non-reentrant model
  9565 ;;
  9566                           
  9567                           	psect	text39
  9568  0025AC                     __ptext39:
  9569                           	opt callstack 0
  9570  0025AC                     _fputs:
  9571                           	opt callstack 18
  9572  0025AC  0E00               	movlw	0
  9573  0025AE  6E22               	movwf	(fputs@i+1)^0,c
  9574  0025B0  0E00               	movlw	0
  9575  0025B2  6E21               	movwf	fputs@i^0,c
  9576  0025B4  EFE7  F012         	goto	l4598
  9577  0025B8                     l4594:
  9578  0025B8  C020  F013         	movff	fputs@c,fputc@c
  9579  0025BC  6A14               	clrf	(fputc@c+1)^0,c
  9580  0025BE  C01E  F015         	movff	fputs@fp,fputc@fp
  9581  0025C2  C01F  F016         	movff	fputs@fp+1,fputc@fp+1
  9582  0025C6  EC5A  F011         	call	_fputc	;wreg free
  9583  0025CA  4A21               	infsnz	fputs@i^0,f,c
  9584  0025CC  2A22               	incf	(fputs@i+1)^0,f,c
  9585  0025CE                     l4598:
  9586  0025CE  5021               	movf	fputs@i^0,w,c
  9587  0025D0  241C               	addwf	fputs@s^0,w,c
  9588  0025D2  6ED9               	movwf	fsr2l,c
  9589  0025D4  5022               	movf	(fputs@i+1)^0,w,c
  9590  0025D6  201D               	addwfc	(fputs@s+1)^0,w,c
  9591  0025D8  6EDA               	movwf	fsr2h,c
  9592  0025DA  50DF               	movf	indf2,w,c
  9593  0025DC  6E20               	movwf	fputs@c^0,c
  9594  0025DE  5020               	movf	fputs@c^0,w,c
  9595  0025E0  A4D8               	btfss	status,2,c
  9596  0025E2  EFF5  F012         	goto	u3351
  9597  0025E6  EFF7  F012         	goto	u3350
  9598  0025EA                     u3351:
  9599  0025EA  EFDC  F012         	goto	l4594
  9600  0025EE                     u3350:
  9601  0025EE  0012               	return		;funcret
  9602  0025F0                     __end_of_fputs:
  9603                           	opt callstack 0
  9604                           
  9605 ;; *************** function _fputc *****************
  9606 ;; Defined at:
  9607 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  9608 ;; Parameters:    Size  Location     Type
  9609 ;;  c               2   18[COMRAM] int 
  9610 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  9611 ;;		 -> NULL(0), 
  9612 ;; Auto vars:     Size  Location     Type
  9613 ;;		None
  9614 ;; Return value:  Size  Location     Type
  9615 ;;                  2   18[COMRAM] int 
  9616 ;; Registers used:
  9617 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9618 ;; Tracked objects:
  9619 ;;		On entry : 0/0
  9620 ;;		On exit  : 0/0
  9621 ;;		Unchanged: 0/0
  9622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9623 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9625 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9626 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9627 ;;Total ram usage:        9 bytes
  9628 ;; Hardware stack levels used:    1
  9629 ;; Hardware stack levels required when called:    6
  9630 ;; This function calls:
  9631 ;;		_putch
  9632 ;; This function is called by:
  9633 ;;		_pad
  9634 ;;		_vfpfcnvrt
  9635 ;;		_fputs
  9636 ;; This function uses a non-reentrant model
  9637 ;;
  9638                           
  9639                           	psect	text40
  9640  0022B4                     __ptext40:
  9641                           	opt callstack 0
  9642  0022B4                     _fputc:
  9643                           	opt callstack 18
  9644  0022B4  5015               	movf	fputc@fp^0,w,c
  9645  0022B6  1016               	iorwf	(fputc@fp+1)^0,w,c
  9646  0022B8  B4D8               	btfsc	status,2,c
  9647  0022BA  EF61  F011         	goto	u3311
  9648  0022BE  EF63  F011         	goto	u3310
  9649  0022C2                     u3311:
  9650  0022C2  EF6C  F011         	goto	l4582
  9651  0022C6                     u3310:
  9652  0022C6  5015               	movf	fputc@fp^0,w,c
  9653  0022C8  1016               	iorwf	(fputc@fp+1)^0,w,c
  9654  0022CA  A4D8               	btfss	status,2,c
  9655  0022CC  EF6A  F011         	goto	u3321
  9656  0022D0  EF6C  F011         	goto	u3320
  9657  0022D4                     u3321:
  9658  0022D4  EF71  F011         	goto	l4584
  9659  0022D8                     u3320:
  9660  0022D8                     l4582:
  9661  0022D8  5013               	movf	fputc@c^0,w,c
  9662  0022DA  EC30  F015         	call	_putch
  9663  0022DE  EFA4  F011         	goto	l1554
  9664  0022E2                     l4584:
  9665  0022E2  EE20 F004          	lfsr	2,4
  9666  0022E6  5015               	movf	fputc@fp^0,w,c
  9667  0022E8  26D9               	addwf	fsr2l,f,c
  9668  0022EA  5016               	movf	(fputc@fp+1)^0,w,c
  9669  0022EC  22DA               	addwfc	fsr2h,f,c
  9670  0022EE  50DE               	movf	postinc2,w,c
  9671  0022F0  10DE               	iorwf	postinc2,w,c
  9672  0022F2  B4D8               	btfsc	status,2,c
  9673  0022F4  EF7E  F011         	goto	u3331
  9674  0022F8  EF80  F011         	goto	u3330
  9675  0022FC                     u3331:
  9676  0022FC  EF9B  F011         	goto	l4588
  9677  002300                     u3330:
  9678  002300  EE20 F004          	lfsr	2,4
  9679  002304  5015               	movf	fputc@fp^0,w,c
  9680  002306  26D9               	addwf	fsr2l,f,c
  9681  002308  5016               	movf	(fputc@fp+1)^0,w,c
  9682  00230A  22DA               	addwfc	fsr2h,f,c
  9683  00230C  EE10 F002          	lfsr	1,2
  9684  002310  5015               	movf	fputc@fp^0,w,c
  9685  002312  26E1               	addwf	fsr1l,f,c
  9686  002314  5016               	movf	(fputc@fp+1)^0,w,c
  9687  002316  22E2               	addwfc	fsr1h,f,c
  9688  002318  50DE               	movf	postinc2,w,c
  9689  00231A  5CE6               	subwf	postinc1,w,c
  9690  00231C  50E6               	movf	postinc1,w,c
  9691  00231E  0A80               	xorlw	128
  9692  002320  6E1B               	movwf	(??_fputc+4)^0,c
  9693  002322  50DE               	movf	postinc2,w,c
  9694  002324  0A80               	xorlw	128
  9695  002326  581B               	subwfb	(??_fputc+4)^0,w,c
  9696  002328  B0D8               	btfsc	status,0,c
  9697  00232A  EF99  F011         	goto	u3341
  9698  00232E  EF9B  F011         	goto	u3340
  9699  002332                     u3341:
  9700  002332  EFA4  F011         	goto	l1554
  9701  002336                     u3340:
  9702  002336                     l4588:
  9703  002336  EE20 F002          	lfsr	2,2
  9704  00233A  5015               	movf	fputc@fp^0,w,c
  9705  00233C  26D9               	addwf	fsr2l,f,c
  9706  00233E  5016               	movf	(fputc@fp+1)^0,w,c
  9707  002340  22DA               	addwfc	fsr2h,f,c
  9708  002342  2ADE               	incf	postinc2,f,c
  9709  002344  0E00               	movlw	0
  9710  002346  22DD               	addwfc	postdec2,f,c
  9711  002348                     l1554:
  9712  002348  0012               	return		;funcret
  9713  00234A                     __end_of_fputc:
  9714                           	opt callstack 0
  9715                           
  9716 ;; *************** function _putch *****************
  9717 ;; Defined at:
  9718 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  9719 ;; Parameters:    Size  Location     Type
  9720 ;;  txData          1    wreg     unsigned char 
  9721 ;; Auto vars:     Size  Location     Type
  9722 ;;  txData          1   17[COMRAM] unsigned char 
  9723 ;; Return value:  Size  Location     Type
  9724 ;;                  1    wreg      void 
  9725 ;; Registers used:
  9726 ;;		wreg, status,2, cstack
  9727 ;; Tracked objects:
  9728 ;;		On entry : 0/0
  9729 ;;		On exit  : 0/0
  9730 ;;		Unchanged: 0/0
  9731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9733 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9735 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9736 ;;Total ram usage:        1 bytes
  9737 ;; Hardware stack levels used:    1
  9738 ;; Hardware stack levels required when called:    5
  9739 ;; This function calls:
  9740 ;;		_EUSART1_Write
  9741 ;; This function is called by:
  9742 ;;		_fputc
  9743 ;; This function uses a non-reentrant model
  9744 ;;
  9745                           
  9746                           	psect	text41
  9747  002A60                     __ptext41:
  9748                           	opt callstack 0
  9749  002A60                     _putch:
  9750                           	opt callstack 18
  9751                           
  9752                           ;incstack = 0
  9753                           ;putch@txData stored from wreg
  9754  002A60  6E12               	movwf	putch@txData^0,c
  9755  002A62                     
  9756                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  9757  002A62  5012               	movf	putch@txData^0,w,c
  9758  002A64  ECF1  F014         	call	_EUSART1_Write
  9759  002A68  0012               	return		;funcret
  9760  002A6A                     __end_of_putch:
  9761                           	opt callstack 0
  9762                           
  9763 ;; *************** function _EUSART1_Write *****************
  9764 ;; Defined at:
  9765 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  9766 ;; Parameters:    Size  Location     Type
  9767 ;;  txData          1    wreg     unsigned char 
  9768 ;; Auto vars:     Size  Location     Type
  9769 ;;  txData          1   16[COMRAM] unsigned char 
  9770 ;; Return value:  Size  Location     Type
  9771 ;;                  1    wreg      void 
  9772 ;; Registers used:
  9773 ;;		wreg
  9774 ;; Tracked objects:
  9775 ;;		On entry : 0/0
  9776 ;;		On exit  : 0/0
  9777 ;;		Unchanged: 0/0
  9778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9780 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9782 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9783 ;;Total ram usage:        1 bytes
  9784 ;; Hardware stack levels used:    1
  9785 ;; Hardware stack levels required when called:    4
  9786 ;; This function calls:
  9787 ;;		Nothing
  9788 ;; This function is called by:
  9789 ;;		_putch
  9790 ;; This function uses a non-reentrant model
  9791 ;;
  9792                           
  9793                           	psect	text42
  9794  0029E2                     __ptext42:
  9795                           	opt callstack 0
  9796  0029E2                     _EUSART1_Write:
  9797                           	opt callstack 18
  9798                           
  9799                           ;incstack = 0
  9800                           ;EUSART1_Write@txData stored from wreg
  9801  0029E2  6E11               	movwf	EUSART1_Write@txData^0,c
  9802  0029E4                     l515:
  9803                           
  9804                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  9805  0029E4  A89E               	btfss	158,4,c	;volatile
  9806  0029E6  EFF7  F014         	goto	u3301
  9807  0029EA  EFF9  F014         	goto	u3300
  9808  0029EE                     u3301:
  9809  0029EE  EFF2  F014         	goto	l515
  9810  0029F2                     u3300:
  9811  0029F2                     
  9812                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  9813  0029F2  C011  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  9814  0029F6  0012               	return		;funcret
  9815  0029F8                     __end_of_EUSART1_Write:
  9816                           	opt callstack 0
  9817                           
  9818 ;; *************** function _atoi *****************
  9819 ;; Defined at:
  9820 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  9821 ;; Parameters:    Size  Location     Type
  9822 ;;  s               2   23[COMRAM] PTR const unsigned char 
  9823 ;;		 -> STR_113(3), STR_112(3), STR_111(2), STR_110(4), 
  9824 ;;		 -> STR_109(6), STR_108(3), STR_107(3), STR_106(2), 
  9825 ;;		 -> STR_105(3), STR_104(2), STR_103(4), STR_102(27), 
  9826 ;;		 -> STR_101(29), STR_100(35), STR_99(23), STR_98(22), 
  9827 ;;		 -> STR_97(21), STR_96(3), STR_95(3), STR_94(28), 
  9828 ;;		 -> STR_93(26), STR_92(17), STR_91(10), STR_90(10), 
  9829 ;;		 -> STR_89(14), STR_88(58), STR_87(16), STR_86(24), 
  9830 ;;		 -> STR_85(18), STR_84(29), STR_83(58), STR_82(3), 
  9831 ;;		 -> STR_81(47), STR_80(35), STR_79(5), STR_78(25), 
  9832 ;;		 -> STR_77(16), STR_76(71), STR_75(46), STR_74(18), 
  9833 ;;		 -> STR_73(29), STR_72(58), STR_71(3), STR_70(68), 
  9834 ;;		 -> STR_69(57), STR_68(17), STR_67(3), STR_66(5), 
  9835 ;;		 -> STR_65(2), STR_64(5), STR_63(17), STR_62(15), 
  9836 ;;		 -> STR_61(3), STR_60(5), STR_59(2), STR_58(5), 
  9837 ;;		 -> STR_57(17), STR_56(15), STR_55(20), STR_54(78), 
  9838 ;;		 -> STR_53(46), STR_52(3), STR_51(5), STR_50(2), 
  9839 ;;		 -> STR_49(5), STR_48(17), STR_47(15), STR_46(3), 
  9840 ;;		 -> STR_45(5), STR_44(2), STR_43(5), STR_42(17), 
  9841 ;;		 -> STR_41(15), STR_40(3), STR_39(5), STR_38(2), 
  9842 ;;		 -> STR_37(5), STR_36(19), STR_35(11), STR_34(11), 
  9843 ;;		 -> STR_33(29), STR_32(42), STR_31(2), STR_30(2), 
  9844 ;;		 -> STR_29(8), STR_28(52), STR_27(46), STR_26(42), 
  9845 ;;		 -> STR_25(50), STR_24(52), STR_23(32), STR_22(52), 
  9846 ;;		 -> STR_21(55), STR_20(43), STR_19(37), STR_18(52), 
  9847 ;;		 -> STR_17(24), STR_16(52), STR_15(24), STR_14(21), 
  9848 ;;		 -> STR_13(7), STR_12(15), STR_11(52), STR_10(3), 
  9849 ;;		 -> STR_9(5), STR_8(2), STR_7(5), STR_6(19), 
  9850 ;;		 -> STR_5(54), STR_4(5), STR_3(31), STR_2(18), 
  9851 ;;		 -> STR_1(20), 
  9852 ;; Auto vars:     Size  Location     Type
  9853 ;;  n               2   36[COMRAM] int 
  9854 ;;  neg             2   29[COMRAM] int 
  9855 ;; Return value:  Size  Location     Type
  9856 ;;                  2   23[COMRAM] int 
  9857 ;; Registers used:
  9858 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9859 ;; Tracked objects:
  9860 ;;		On entry : 0/0
  9861 ;;		On exit  : 0/0
  9862 ;;		Unchanged: 0/0
  9863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9864 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9865 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9866 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9867 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9868 ;;Total ram usage:       15 bytes
  9869 ;; Hardware stack levels used:    1
  9870 ;; Hardware stack levels required when called:    5
  9871 ;; This function calls:
  9872 ;;		___wmul
  9873 ;;		_isdigit
  9874 ;;		_isspace
  9875 ;; This function is called by:
  9876 ;;		_vfpfcnvrt
  9877 ;; This function uses a non-reentrant model
  9878 ;;
  9879                           
  9880                           	psect	text43
  9881  001A08                     __ptext43:
  9882                           	opt callstack 0
  9883  001A08                     _atoi:
  9884                           	opt callstack 22
  9885  001A08  0E00               	movlw	0
  9886  001A0A  6E26               	movwf	(atoi@n+1)^0,c
  9887  001A0C  0E00               	movlw	0
  9888  001A0E  6E25               	movwf	atoi@n^0,c
  9889  001A10  0E00               	movlw	0
  9890  001A12  6E1F               	movwf	(atoi@neg+1)^0,c
  9891  001A14  0E00               	movlw	0
  9892  001A16  6E1E               	movwf	atoi@neg^0,c
  9893  001A18  EF10  F00D         	goto	l4906
  9894  001A1C                     l4904:
  9895  001A1C  4A18               	infsnz	atoi@s^0,f,c
  9896  001A1E  2A19               	incf	(atoi@s+1)^0,f,c
  9897  001A20                     l4906:
  9898  001A20  0E01               	movlw	1
  9899  001A22  6E24               	movwf	_atoi$2005^0,c
  9900  001A24  C018  FFF6         	movff	atoi@s,tblptrl
  9901  001A28  C019  FFF7         	movff	atoi@s+1,tblptrh
  9902  001A2C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9903  001A2C  6AF8               	clrf	tblptru,c
  9904  001A2E                     	endif
  9905  001A2E                     	if	0	;tblptru may be non-zero
  9906  001A2E                     	endif
  9907  001A2E  0008               	tblrd		*
  9908  001A30  50F5               	movf	tablat,w,c
  9909  001A32  0A20               	xorlw	32
  9910  001A34  B4D8               	btfsc	status,2,c
  9911  001A36  EF1F  F00D         	goto	u4011
  9912  001A3A  EF21  F00D         	goto	u4010
  9913  001A3E                     u4011:
  9914  001A3E  EF3F  F00D         	goto	l4914
  9915  001A42                     u4010:
  9916  001A42  0EF7               	movlw	247
  9917  001A44  6E1A               	movwf	??_atoi^0,c
  9918  001A46  0EFF               	movlw	255
  9919  001A48  6E1B               	movwf	(??_atoi+1)^0,c
  9920  001A4A  C018  FFF6         	movff	atoi@s,tblptrl
  9921  001A4E  C019  FFF7         	movff	atoi@s+1,tblptrh
  9922  001A52                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9923  001A52  6AF8               	clrf	tblptru,c
  9924  001A54                     	endif
  9925  001A54                     	if	0	;tblptru may be non-zero
  9926  001A54                     	endif
  9927  001A54  0008               	tblrd		*
  9928  001A56  50F5               	movf	tablat,w,c
  9929  001A58  6E1C               	movwf	(??_atoi+2)^0,c
  9930  001A5A  6A1D               	clrf	(??_atoi+3)^0,c
  9931  001A5C  501A               	movf	??_atoi^0,w,c
  9932  001A5E  261C               	addwf	(??_atoi+2)^0,f,c
  9933  001A60  501B               	movf	(??_atoi+1)^0,w,c
  9934  001A62  221D               	addwfc	(??_atoi+3)^0,f,c
  9935  001A64  501D               	movf	(??_atoi+3)^0,w,c
  9936  001A66  E109               	bnz	u4020
  9937  001A68  0E05               	movlw	5
  9938  001A6A  5C1C               	subwf	(??_atoi+2)^0,w,c
  9939  001A6C  A0D8               	btfss	status,0,c
  9940  001A6E  EF3B  F00D         	goto	u4021
  9941  001A72  EF3D  F00D         	goto	u4020
  9942  001A76                     u4021:
  9943  001A76  EF3F  F00D         	goto	l4914
  9944  001A7A                     u4020:
  9945  001A7A  0E00               	movlw	0
  9946  001A7C  6E24               	movwf	_atoi$2005^0,c
  9947  001A7E                     l4914:
  9948  001A7E  C024  F020         	movff	_atoi$2005,_atoi$2004
  9949  001A82  6A21               	clrf	(_atoi$2004+1)^0,c
  9950  001A84  5020               	movf	_atoi$2004^0,w,c
  9951  001A86  1021               	iorwf	(_atoi$2004+1)^0,w,c
  9952  001A88  A4D8               	btfss	status,2,c
  9953  001A8A  EF49  F00D         	goto	u4031
  9954  001A8E  EF4B  F00D         	goto	u4030
  9955  001A92                     u4031:
  9956  001A92  EF0E  F00D         	goto	l4904
  9957  001A96                     u4030:
  9958  001A96  EF55  F00D         	goto	l4924
  9959  001A9A                     l4920:
  9960  001A9A  0E00               	movlw	0
  9961  001A9C  6E1F               	movwf	(atoi@neg+1)^0,c
  9962  001A9E  0E01               	movlw	1
  9963  001AA0  6E1E               	movwf	atoi@neg^0,c
  9964  001AA2                     l4922:
  9965  001AA2  4A18               	infsnz	atoi@s^0,f,c
  9966  001AA4  2A19               	incf	(atoi@s+1)^0,f,c
  9967  001AA6  EF8C  F00D         	goto	l4930
  9968  001AAA                     l4924:
  9969  001AAA  C018  FFF6         	movff	atoi@s,tblptrl
  9970  001AAE  C019  FFF7         	movff	atoi@s+1,tblptrh
  9971  001AB2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9972  001AB2  6AF8               	clrf	tblptru,c
  9973  001AB4                     	endif
  9974  001AB4                     	if	0	;tblptru may be non-zero
  9975  001AB4                     	endif
  9976  001AB4  0008               	tblrd		*
  9977  001AB6  50F5               	movf	tablat,w,c
  9978  001AB8  6E1A               	movwf	??_atoi^0,c
  9979  001ABA  6A1B               	clrf	(??_atoi+1)^0,c
  9980                           
  9981                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9982                           ; Switch size 1, requested type "simple"
  9983                           ; Number of cases is 1, Range of values is 0 to 0
  9984                           ; switch strategies available:
  9985                           ; Name         Instructions Cycles
  9986                           ; simple_byte            4     3 (average)
  9987                           ;	Chosen strategy is simple_byte
  9988  001ABC  501B               	movf	(??_atoi+1)^0,w,c
  9989  001ABE  0A00               	xorlw	0	; case 0
  9990  001AC0  B4D8               	btfsc	status,2,c
  9991  001AC2  EF65  F00D         	goto	l5682
  9992  001AC6  EF8C  F00D         	goto	l4930
  9993  001ACA                     l5682:
  9994                           
  9995                           ; Switch size 1, requested type "simple"
  9996                           ; Number of cases is 2, Range of values is 43 to 45
  9997                           ; switch strategies available:
  9998                           ; Name         Instructions Cycles
  9999                           ; simple_byte            7     4 (average)
 10000                           ;	Chosen strategy is simple_byte
 10001  001ACA  501A               	movf	??_atoi^0,w,c
 10002  001ACC  0A2B               	xorlw	43	; case 43
 10003  001ACE  B4D8               	btfsc	status,2,c
 10004  001AD0  EF51  F00D         	goto	l4922
 10005  001AD4  0A06               	xorlw	6	; case 45
 10006  001AD6  B4D8               	btfsc	status,2,c
 10007  001AD8  EF4D  F00D         	goto	l4920
 10008  001ADC  EF8C  F00D         	goto	l4930
 10009  001AE0                     l4926:
 10010  001AE0  C025  F011         	movff	atoi@n,___wmul@multiplier
 10011  001AE4  C026  F012         	movff	atoi@n+1,___wmul@multiplier+1
 10012  001AE8  0E00               	movlw	0
 10013  001AEA  6E14               	movwf	(___wmul@multiplicand+1)^0,c
 10014  001AEC  0E0A               	movlw	10
 10015  001AEE  6E13               	movwf	___wmul@multiplicand^0,c
 10016  001AF0  EC99  F014         	call	___wmul	;wreg free
 10017  001AF4  C018  FFF6         	movff	atoi@s,tblptrl
 10018  001AF8  C019  FFF7         	movff	atoi@s+1,tblptrh
 10019  001AFC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10020  001AFC  6AF8               	clrf	tblptru,c
 10021  001AFE                     	endif
 10022  001AFE                     	if	0	;tblptru may be non-zero
 10023  001AFE                     	endif
 10024  001AFE  0008               	tblrd		*
 10025  001B00  50F5               	movf	tablat,w,c
 10026  001B02  5E11               	subwf	?___wmul^0,f,c
 10027  001B04  0E00               	movlw	0
 10028  001B06  5A12               	subwfb	(?___wmul+1)^0,f,c
 10029  001B08  0E30               	movlw	48
 10030  001B0A  2411               	addwf	?___wmul^0,w,c
 10031  001B0C  6E25               	movwf	atoi@n^0,c
 10032  001B0E  0E00               	movlw	0
 10033  001B10  2012               	addwfc	(?___wmul+1)^0,w,c
 10034  001B12  6E26               	movwf	(atoi@n+1)^0,c
 10035  001B14  EF51  F00D         	goto	l4922
 10036  001B18                     l4930:
 10037  001B18  0ED0               	movlw	208
 10038  001B1A  6E1A               	movwf	??_atoi^0,c
 10039  001B1C  0EFF               	movlw	255
 10040  001B1E  6E1B               	movwf	(??_atoi+1)^0,c
 10041  001B20  C018  FFF6         	movff	atoi@s,tblptrl
 10042  001B24  C019  FFF7         	movff	atoi@s+1,tblptrh
 10043  001B28                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10044  001B28  6AF8               	clrf	tblptru,c
 10045  001B2A                     	endif
 10046  001B2A                     	if	0	;tblptru may be non-zero
 10047  001B2A                     	endif
 10048  001B2A  0008               	tblrd		*
 10049  001B2C  50F5               	movf	tablat,w,c
 10050  001B2E  6E1C               	movwf	(??_atoi+2)^0,c
 10051  001B30  6A1D               	clrf	(??_atoi+3)^0,c
 10052  001B32  501A               	movf	??_atoi^0,w,c
 10053  001B34  261C               	addwf	(??_atoi+2)^0,f,c
 10054  001B36  501B               	movf	(??_atoi+1)^0,w,c
 10055  001B38  221D               	addwfc	(??_atoi+3)^0,f,c
 10056  001B3A  501D               	movf	(??_atoi+3)^0,w,c
 10057  001B3C  E10A               	bnz	u4040
 10058  001B3E  0E0A               	movlw	10
 10059  001B40  5C1C               	subwf	(??_atoi+2)^0,w,c
 10060  001B42  A0D8               	btfss	status,0,c
 10061  001B44  EFA6  F00D         	goto	u4041
 10062  001B48  EFA9  F00D         	goto	u4040
 10063  001B4C                     u4041:
 10064  001B4C  0E01               	movlw	1
 10065  001B4E  EFAA  F00D         	goto	u4050
 10066  001B52                     u4040:
 10067  001B52  0E00               	movlw	0
 10068  001B54                     u4050:
 10069  001B54  6E22               	movwf	_atoi$2006^0,c
 10070  001B56  6A23               	clrf	(_atoi$2006+1)^0,c
 10071  001B58  5022               	movf	_atoi$2006^0,w,c
 10072  001B5A  1023               	iorwf	(_atoi$2006+1)^0,w,c
 10073  001B5C  A4D8               	btfss	status,2,c
 10074  001B5E  EFB3  F00D         	goto	u4061
 10075  001B62  EFB5  F00D         	goto	u4060
 10076  001B66                     u4061:
 10077  001B66  EF70  F00D         	goto	l4926
 10078  001B6A                     u4060:
 10079  001B6A  501E               	movf	atoi@neg^0,w,c
 10080  001B6C  101F               	iorwf	(atoi@neg+1)^0,w,c
 10081  001B6E  A4D8               	btfss	status,2,c
 10082  001B70  EFBC  F00D         	goto	u4071
 10083  001B74  EFBE  F00D         	goto	u4070
 10084  001B78                     u4071:
 10085  001B78  EFCC  F00D         	goto	l1513
 10086  001B7C                     u4070:
 10087  001B7C  C025  F01A         	movff	atoi@n,??_atoi
 10088  001B80  C026  F01B         	movff	atoi@n+1,??_atoi+1
 10089  001B84  1E1A               	comf	??_atoi^0,f,c
 10090  001B86  1E1B               	comf	(??_atoi+1)^0,f,c
 10091  001B88  4A1A               	infsnz	??_atoi^0,f,c
 10092  001B8A  2A1B               	incf	(??_atoi+1)^0,f,c
 10093  001B8C  C01A  F018         	movff	??_atoi,?_atoi
 10094  001B90  C01B  F019         	movff	??_atoi+1,?_atoi+1
 10095  001B94  EFD0  F00D         	goto	l1516
 10096  001B98                     l1513:
 10097  001B98  C025  F018         	movff	atoi@n,?_atoi
 10098  001B9C  C026  F019         	movff	atoi@n+1,?_atoi+1
 10099  001BA0                     l1516:
 10100  001BA0  0012               	return		;funcret
 10101  001BA2                     __end_of_atoi:
 10102                           	opt callstack 0
 10103                           
 10104 ;; *************** function _isspace *****************
 10105 ;; Defined at:
 10106 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 10107 ;; Parameters:    Size  Location     Type
 10108 ;;  c               2   16[COMRAM] int 
 10109 ;; Auto vars:     Size  Location     Type
 10110 ;;		None
 10111 ;; Return value:  Size  Location     Type
 10112 ;;                  2   16[COMRAM] int 
 10113 ;; Registers used:
 10114 ;;		wreg, status,2, status,0
 10115 ;; Tracked objects:
 10116 ;;		On entry : 0/0
 10117 ;;		On exit  : 0/0
 10118 ;;		Unchanged: 0/0
 10119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10120 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10121 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10122 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10123 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10124 ;;Total ram usage:        7 bytes
 10125 ;; Hardware stack levels used:    1
 10126 ;; Hardware stack levels required when called:    4
 10127 ;; This function calls:
 10128 ;;		Nothing
 10129 ;; This function is called by:
 10130 ;;		_atoi
 10131 ;; This function uses a non-reentrant model
 10132 ;;
 10133                           
 10134                           	psect	text44
 10135  00255A                     __ptext44:
 10136                           	opt callstack 0
 10137  00255A                     _isspace:
 10138                           	opt callstack 22
 10139  00255A  0E01               	movlw	1
 10140  00255C  6E17               	movwf	_isspace$2031^0,c
 10141  00255E  0E20               	movlw	32
 10142  002560  1811               	xorwf	isspace@c^0,w,c
 10143  002562  1012               	iorwf	(isspace@c+1)^0,w,c
 10144  002564  B4D8               	btfsc	status,2,c
 10145  002566  EFB7  F012         	goto	u3661
 10146  00256A  EFB9  F012         	goto	u3660
 10147  00256E                     u3661:
 10148  00256E  EFD2  F012         	goto	l4756
 10149  002572                     u3660:
 10150  002572  0EF7               	movlw	247
 10151  002574  6E13               	movwf	??_isspace^0,c
 10152  002576  0EFF               	movlw	255
 10153  002578  6E14               	movwf	(??_isspace+1)^0,c
 10154  00257A  C011  F015         	movff	isspace@c,??_isspace+2
 10155  00257E  C012  F016         	movff	isspace@c+1,??_isspace+3
 10156  002582  5013               	movf	??_isspace^0,w,c
 10157  002584  2615               	addwf	(??_isspace+2)^0,f,c
 10158  002586  5014               	movf	(??_isspace+1)^0,w,c
 10159  002588  2216               	addwfc	(??_isspace+3)^0,f,c
 10160  00258A  5016               	movf	(??_isspace+3)^0,w,c
 10161  00258C  E109               	bnz	u3670
 10162  00258E  0E05               	movlw	5
 10163  002590  5C15               	subwf	(??_isspace+2)^0,w,c
 10164  002592  A0D8               	btfss	status,0,c
 10165  002594  EFCE  F012         	goto	u3671
 10166  002598  EFD0  F012         	goto	u3670
 10167  00259C                     u3671:
 10168  00259C  EFD2  F012         	goto	l4756
 10169  0025A0                     u3670:
 10170  0025A0  0E00               	movlw	0
 10171  0025A2  6E17               	movwf	_isspace$2031^0,c
 10172  0025A4                     l4756:
 10173  0025A4  C017  F011         	movff	_isspace$2031,?_isspace
 10174  0025A8  6A12               	clrf	(?_isspace+1)^0,c
 10175  0025AA  0012               	return		;funcret
 10176  0025AC                     __end_of_isspace:
 10177                           	opt callstack 0
 10178                           
 10179 ;; *************** function _isdigit *****************
 10180 ;; Defined at:
 10181 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 10182 ;; Parameters:    Size  Location     Type
 10183 ;;  c               2   16[COMRAM] int 
 10184 ;; Auto vars:     Size  Location     Type
 10185 ;;		None
 10186 ;; Return value:  Size  Location     Type
 10187 ;;                  2   16[COMRAM] int 
 10188 ;; Registers used:
 10189 ;;		wreg, status,2, status,0
 10190 ;; Tracked objects:
 10191 ;;		On entry : 0/0
 10192 ;;		On exit  : 0/0
 10193 ;;		Unchanged: 0/0
 10194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10195 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10197 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10198 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10199 ;;Total ram usage:        6 bytes
 10200 ;; Hardware stack levels used:    1
 10201 ;; Hardware stack levels required when called:    4
 10202 ;; This function calls:
 10203 ;;		Nothing
 10204 ;; This function is called by:
 10205 ;;		_vfpfcnvrt
 10206 ;;		_atoi
 10207 ;; This function uses a non-reentrant model
 10208 ;;
 10209                           
 10210                           	psect	text45
 10211  002754                     __ptext45:
 10212                           	opt callstack 0
 10213  002754                     _isdigit:
 10214                           	opt callstack 23
 10215  002754  0ED0               	movlw	208
 10216  002756  6E13               	movwf	??_isdigit^0,c
 10217  002758  0EFF               	movlw	255
 10218  00275A  6E14               	movwf	(??_isdigit+1)^0,c
 10219  00275C  C011  F015         	movff	isdigit@c,??_isdigit+2
 10220  002760  C012  F016         	movff	isdigit@c+1,??_isdigit+3
 10221  002764  5013               	movf	??_isdigit^0,w,c
 10222  002766  2615               	addwf	(??_isdigit+2)^0,f,c
 10223  002768  5014               	movf	(??_isdigit+1)^0,w,c
 10224  00276A  2216               	addwfc	(??_isdigit+3)^0,f,c
 10225  00276C  5016               	movf	(??_isdigit+3)^0,w,c
 10226  00276E  E10A               	bnz	u3510
 10227  002770  0E0A               	movlw	10
 10228  002772  5C15               	subwf	(??_isdigit+2)^0,w,c
 10229  002774  A0D8               	btfss	status,0,c
 10230  002776  EFBF  F013         	goto	u3511
 10231  00277A  EFC2  F013         	goto	u3510
 10232  00277E                     u3511:
 10233  00277E  0E01               	movlw	1
 10234  002780  EFC3  F013         	goto	u3520
 10235  002784                     u3510:
 10236  002784  0E00               	movlw	0
 10237  002786                     u3520:
 10238  002786  6E11               	movwf	?_isdigit^0,c
 10239  002788  6A12               	clrf	(?_isdigit+1)^0,c
 10240  00278A  0012               	return		;funcret
 10241  00278C                     __end_of_isdigit:
 10242                           	opt callstack 0
 10243                           
 10244 ;; *************** function ___wmul *****************
 10245 ;; Defined at:
 10246 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 10247 ;; Parameters:    Size  Location     Type
 10248 ;;  multiplier      2   16[COMRAM] unsigned int 
 10249 ;;  multiplicand    2   18[COMRAM] unsigned int 
 10250 ;; Auto vars:     Size  Location     Type
 10251 ;;  product         2   20[COMRAM] unsigned int 
 10252 ;; Return value:  Size  Location     Type
 10253 ;;                  2   16[COMRAM] unsigned int 
 10254 ;; Registers used:
 10255 ;;		wreg, status,2, status,0, prodl, prodh
 10256 ;; Tracked objects:
 10257 ;;		On entry : 0/0
 10258 ;;		On exit  : 0/0
 10259 ;;		Unchanged: 0/0
 10260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10261 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10262 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10264 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10265 ;;Total ram usage:        6 bytes
 10266 ;; Hardware stack levels used:    1
 10267 ;; Hardware stack levels required when called:    4
 10268 ;; This function calls:
 10269 ;;		Nothing
 10270 ;; This function is called by:
 10271 ;;		_atoi
 10272 ;; This function uses a non-reentrant model
 10273 ;;
 10274                           
 10275                           	psect	text46
 10276  002932                     __ptext46:
 10277                           	opt callstack 0
 10278  002932                     ___wmul:
 10279                           	opt callstack 22
 10280  002932  5011               	movf	___wmul@multiplier^0,w,c
 10281  002934  0213               	mulwf	___wmul@multiplicand^0,c
 10282  002936  CFF3 F015          	movff	prodl,___wmul@product
 10283  00293A  CFF4 F016          	movff	prodh,___wmul@product+1
 10284  00293E  5011               	movf	___wmul@multiplier^0,w,c
 10285  002940  0214               	mulwf	(___wmul@multiplicand+1)^0,c
 10286  002942  50F3               	movf	243,w,c
 10287  002944  2616               	addwf	(___wmul@product+1)^0,f,c
 10288  002946  5012               	movf	(___wmul@multiplier+1)^0,w,c
 10289  002948  0213               	mulwf	___wmul@multiplicand^0,c
 10290  00294A  50F3               	movf	243,w,c
 10291  00294C  2616               	addwf	(___wmul@product+1)^0,f,c
 10292  00294E  C015  F011         	movff	___wmul@product,?___wmul
 10293  002952  C016  F012         	movff	___wmul@product+1,?___wmul+1
 10294  002956  0012               	return		;funcret
 10295  002958                     __end_of___wmul:
 10296                           	opt callstack 0
 10297                           
 10298 ;; *************** function _SPI2_ExchangeByte *****************
 10299 ;; Defined at:
 10300 ;;		line 92 in file "mcc_generated_files/spi2.c"
 10301 ;; Parameters:    Size  Location     Type
 10302 ;;  data            1    wreg     unsigned char 
 10303 ;; Auto vars:     Size  Location     Type
 10304 ;;  data            1   16[COMRAM] unsigned char 
 10305 ;; Return value:  Size  Location     Type
 10306 ;;                  1    wreg      unsigned char 
 10307 ;; Registers used:
 10308 ;;		wreg, status,2
 10309 ;; Tracked objects:
 10310 ;;		On entry : 0/0
 10311 ;;		On exit  : 0/0
 10312 ;;		Unchanged: 0/0
 10313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10315 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10317 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10318 ;;Total ram usage:        1 bytes
 10319 ;; Hardware stack levels used:    1
 10320 ;; Hardware stack levels required when called:    4
 10321 ;; This function calls:
 10322 ;;		Nothing
 10323 ;; This function is called by:
 10324 ;;		_SDCARD_ReadBlock
 10325 ;;		_SDCARD_WriteBlock
 10326 ;;		_SDCARD_PollWriteComplete
 10327 ;;		_SDCARD_HCInitialize
 10328 ;;		_SDCARD_SetIdle
 10329 ;;		_SDCARD_Initialize
 10330 ;;		_SDCARD_SetBlockLength
 10331 ;;		_SPI2_WriteBlock
 10332 ;;		_SPI2_ReadBlock
 10333 ;; This function uses a non-reentrant model
 10334 ;;
 10335                           
 10336                           	psect	text47
 10337  0029B2                     __ptext47:
 10338                           	opt callstack 0
 10339  0029B2                     _SPI2_ExchangeByte:
 10340                           	opt callstack 25
 10341                           
 10342                           ;incstack = 0
 10343                           ;SPI2_ExchangeByte@data stored from wreg
 10344  0029B2  6E11               	movwf	SPI2_ExchangeByte@data^0,c
 10345  0029B4                     
 10346                           ;mcc_generated_files/spi2.c: 92: uint8_t SPI2_ExchangeByte(uint8_t data);mcc_generated_f
      +                          iles/spi2.c: 93: {;mcc_generated_files/spi2.c: 94:     SSP2BUF = data;
 10347  0029B4  C011  FF6F         	movff	SPI2_ExchangeByte@data,3951	;volatile
 10348  0029B8                     l589:
 10349  0029B8  AEA4               	btfss	164,7,c	;volatile
 10350  0029BA  EFE1  F014         	goto	u2621
 10351  0029BE  EFE3  F014         	goto	u2620
 10352  0029C2                     u2621:
 10353  0029C2  EFDC  F014         	goto	l589
 10354  0029C6                     u2620:
 10355  0029C6                     
 10356                           ;mcc_generated_files/spi2.c: 96:     PIR3bits.SSP2IF = 0;
 10357  0029C6  9EA4               	bcf	164,7,c	;volatile
 10358                           
 10359                           ;mcc_generated_files/spi2.c: 97:     return SSP2BUF;
 10360  0029C8  506F               	movf	111,w,c	;volatile
 10361  0029CA  0012               	return		;funcret
 10362  0029CC                     __end_of_SPI2_ExchangeByte:
 10363                           	opt callstack 0
 10364                           
 10365 ;; *************** function _EUSART1_is_rx_ready *****************
 10366 ;; Defined at:
 10367 ;;		line 99 in file "mcc_generated_files/eusart1.c"
 10368 ;; Parameters:    Size  Location     Type
 10369 ;;		None
 10370 ;; Auto vars:     Size  Location     Type
 10371 ;;		None
 10372 ;; Return value:  Size  Location     Type
 10373 ;;                  1    wreg      _Bool 
 10374 ;; Registers used:
 10375 ;;		wreg
 10376 ;; Tracked objects:
 10377 ;;		On entry : 0/0
 10378 ;;		On exit  : 0/0
 10379 ;;		Unchanged: 0/0
 10380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10385 ;;Total ram usage:        0 bytes
 10386 ;; Hardware stack levels used:    1
 10387 ;; Hardware stack levels required when called:    4
 10388 ;; This function calls:
 10389 ;;		Nothing
 10390 ;; This function is called by:
 10391 ;;		_main
 10392 ;; This function uses a non-reentrant model
 10393 ;;
 10394                           
 10395                           	psect	text48
 10396  0029F8                     __ptext48:
 10397                           	opt callstack 0
 10398  0029F8                     _EUSART1_is_rx_ready:
 10399                           	opt callstack 26
 10400  0029F8                     
 10401                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
 10402  0029F8  BA9E               	btfsc	158,5,c	;volatile
 10403  0029FA  EF01  F015         	goto	u2741
 10404  0029FE  EF04  F015         	goto	u2740
 10405  002A02                     u2741:
 10406  002A02  0E01               	movlw	1
 10407  002A04  EF05  F015         	goto	u2746
 10408  002A08                     u2740:
 10409  002A08  0E00               	movlw	0
 10410  002A0A                     u2746:
 10411  002A0A  0012               	return		;funcret
 10412  002A0C                     __end_of_EUSART1_is_rx_ready:
 10413                           	opt callstack 0
 10414                           
 10415 ;; *************** function _EUSART1_Read *****************
 10416 ;; Defined at:
 10417 ;;		line 113 in file "mcc_generated_files/eusart1.c"
 10418 ;; Parameters:    Size  Location     Type
 10419 ;;		None
 10420 ;; Auto vars:     Size  Location     Type
 10421 ;;		None
 10422 ;; Return value:  Size  Location     Type
 10423 ;;                  1    wreg      unsigned char 
 10424 ;; Registers used:
 10425 ;;		wreg, status,2
 10426 ;; Tracked objects:
 10427 ;;		On entry : 0/0
 10428 ;;		On exit  : 0/0
 10429 ;;		Unchanged: 0/0
 10430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10435 ;;Total ram usage:        0 bytes
 10436 ;; Hardware stack levels used:    1
 10437 ;; Hardware stack levels required when called:    4
 10438 ;; This function calls:
 10439 ;;		Nothing
 10440 ;; This function is called by:
 10441 ;;		_main
 10442 ;;		_getch
 10443 ;; This function uses a non-reentrant model
 10444 ;;
 10445                           
 10446                           	psect	text49
 10447  0028BA                     __ptext49:
 10448                           	opt callstack 0
 10449  0028BA                     _EUSART1_Read:
 10450                           	opt callstack 26
 10451  0028BA                     l508:
 10452                           
 10453                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
 10454  0028BA  AA9E               	btfss	158,5,c	;volatile
 10455  0028BC  EF62  F014         	goto	u2751
 10456  0028C0  EF64  F014         	goto	u2750
 10457  0028C4                     u2751:
 10458  0028C4  EF5D  F014         	goto	l508
 10459  0028C8                     u2750:
 10460  0028C8                     
 10461                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
 10462  0028C8  0E00               	movlw	0
 10463  0028CA  0100               	movlb	0	; () banked
 10464  0028CC  6FCF               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 10465  0028CE                     
 10466                           ; BSR set to: 0
 10467                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
 10468  0028CE  A2AB               	btfss	171,1,c	;volatile
 10469  0028D0  EF6C  F014         	goto	u2761
 10470  0028D4  EF6E  F014         	goto	u2760
 10471  0028D8                     u2761:
 10472  0028D8  EF70  F014         	goto	l3826
 10473  0028DC                     u2760:
 10474  0028DC                     
 10475                           ; BSR set to: 0
 10476                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
 10477  0028DC  98AB               	bcf	171,4,c	;volatile
 10478                           
 10479                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
 10480  0028DE  88AB               	bsf	171,4,c	;volatile
 10481  0028E0                     l3826:
 10482                           
 10483                           ; BSR set to: 0
 10484                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
 10485  0028E0  50AE               	movf	174,w,c	;volatile
 10486  0028E2                     
 10487                           ; BSR set to: 0
 10488  0028E2  0012               	return		;funcret
 10489  0028E4                     __end_of_EUSART1_Read:
 10490                           	opt callstack 0
 10491                           
 10492 ;; *************** function _EPWM1_LoadDutyValue *****************
 10493 ;; Defined at:
 10494 ;;		line 90 in file "mcc_generated_files/epwm1.c"
 10495 ;; Parameters:    Size  Location     Type
 10496 ;;  dutyValue       2   16[COMRAM] unsigned short 
 10497 ;; Auto vars:     Size  Location     Type
 10498 ;;		None
 10499 ;; Return value:  Size  Location     Type
 10500 ;;                  1    wreg      void 
 10501 ;; Registers used:
 10502 ;;		wreg, status,2, status,0
 10503 ;; Tracked objects:
 10504 ;;		On entry : 0/0
 10505 ;;		On exit  : 0/0
 10506 ;;		Unchanged: 0/0
 10507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10508 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10510 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10511 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10512 ;;Total ram usage:        4 bytes
 10513 ;; Hardware stack levels used:    1
 10514 ;; Hardware stack levels required when called:    4
 10515 ;; This function calls:
 10516 ;;		Nothing
 10517 ;; This function is called by:
 10518 ;;		_main
 10519 ;; This function uses a non-reentrant model
 10520 ;;
 10521                           
 10522                           	psect	text50
 10523  00282E                     __ptext50:
 10524                           	opt callstack 0
 10525  00282E                     _EPWM1_LoadDutyValue:
 10526                           	opt callstack 26
 10527  00282E                     
 10528                           ;mcc_generated_files/epwm1.c: 90: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 91: {;mcc_generated_files/epwm1.c: 93:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
 10529  00282E  C011  F013         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
 10530  002832  C012  F014         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
 10531  002836  90D8               	bcf	status,0,c
 10532  002838  3214               	rrcf	(??_EPWM1_LoadDutyValue+1)^0,f,c
 10533  00283A  3213               	rrcf	??_EPWM1_LoadDutyValue^0,f,c
 10534  00283C  90D8               	bcf	status,0,c
 10535  00283E  3214               	rrcf	(??_EPWM1_LoadDutyValue+1)^0,f,c
 10536  002840  3213               	rrcf	??_EPWM1_LoadDutyValue^0,f,c
 10537  002842  5013               	movf	??_EPWM1_LoadDutyValue^0,w,c
 10538  002844  6EBE               	movwf	190,c	;volatile
 10539                           
 10540                           ;mcc_generated_files/epwm1.c: 96:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
 10541  002846  C011  F013         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
 10542  00284A  0E03               	movlw	3
 10543  00284C  1613               	andwf	??_EPWM1_LoadDutyValue^0,f,c
 10544  00284E  3A13               	swapf	??_EPWM1_LoadDutyValue^0,f,c
 10545  002850  0EF0               	movlw	240
 10546  002852  1613               	andwf	??_EPWM1_LoadDutyValue^0,f,c
 10547  002854  50BD               	movf	189,w,c	;volatile
 10548  002856  0BCF               	andlw	207
 10549  002858  1013               	iorwf	??_EPWM1_LoadDutyValue^0,w,c
 10550  00285A  6EBD               	movwf	189,c	;volatile
 10551  00285C  0012               	return		;funcret
 10552  00285E                     __end_of_EPWM1_LoadDutyValue:
 10553                           	opt callstack 0
 10554                           
 10555 ;; *************** function _INTERRUPT_InterruptManager *****************
 10556 ;; Defined at:
 10557 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 10558 ;; Parameters:    Size  Location     Type
 10559 ;;		None
 10560 ;; Auto vars:     Size  Location     Type
 10561 ;;		None
 10562 ;; Return value:  Size  Location     Type
 10563 ;;                  1    wreg      void 
 10564 ;; Registers used:
 10565 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 10566 ;; Tracked objects:
 10567 ;;		On entry : 0/0
 10568 ;;		On exit  : 0/0
 10569 ;;		Unchanged: 0/0
 10570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10573 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10574 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10575 ;;Total ram usage:        4 bytes
 10576 ;; Hardware stack levels used:    1
 10577 ;; Hardware stack levels required when called:    3
 10578 ;; This function calls:
 10579 ;;		_TMR0_ISR
 10580 ;; This function is called by:
 10581 ;;		Interrupt level 2
 10582 ;; This function uses a non-reentrant model
 10583 ;;
 10584                           
 10585                           	psect	intcode
 10586  000008                     __pintcode:
 10587                           	opt callstack 0
 10588  000008                     _INTERRUPT_InterruptManager:
 10589                           	opt callstack 16
 10590                           
 10591                           ;incstack = 0
 10592  000008  824F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10593  00000A  CFFA F00D          	movff	pclath,??_INTERRUPT_InterruptManager
 10594  00000E  CFFB F00E          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 10595  000012  CFD9 F00F          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 10596  000016  CFDA F010          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 10597  00001A                     
 10598                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
 10599  00001A  AAF2               	btfss	242,5,c	;volatile
 10600  00001C  EF12  F000         	goto	i2u326_41
 10601  000020  EF14  F000         	goto	i2u326_40
 10602  000024                     i2u326_41:
 10603  000024  EF1D  F000         	goto	i2l558
 10604  000028                     i2u326_40:
 10605  000028  A4F2               	btfss	242,2,c	;volatile
 10606  00002A  EF19  F000         	goto	i2u327_41
 10607  00002E  EF1B  F000         	goto	i2u327_40
 10608  000032                     i2u327_41:
 10609  000032  EF1D  F000         	goto	i2l558
 10610  000036                     i2u327_40:
 10611  000036                     
 10612                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
 10613  000036  ECC6  F013         	call	_TMR0_ISR	;wreg free
 10614  00003A                     i2l558:
 10615  00003A  C010  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 10616  00003E  C00F  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 10617  000042  C00E  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 10618  000046  C00D  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 10619  00004A  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10620  00004C  0011               	retfie		f
 10621  00004E                     __end_of_INTERRUPT_InterruptManager:
 10622                           	opt callstack 0
 10623                           
 10624 ;; *************** function _TMR0_ISR *****************
 10625 ;; Defined at:
 10626 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 10627 ;; Parameters:    Size  Location     Type
 10628 ;;		None
 10629 ;; Auto vars:     Size  Location     Type
 10630 ;;		None
 10631 ;; Return value:  Size  Location     Type
 10632 ;;                  1    wreg      void 
 10633 ;; Registers used:
 10634 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 10635 ;; Tracked objects:
 10636 ;;		On entry : 0/0
 10637 ;;		On exit  : 0/0
 10638 ;;		Unchanged: 0/0
 10639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10644 ;;Total ram usage:        0 bytes
 10645 ;; Hardware stack levels used:    1
 10646 ;; Hardware stack levels required when called:    2
 10647 ;; This function calls:
 10648 ;;		Absolute function
 10649 ;;		_TMR0_DefaultInterruptHandler
 10650 ;;		_myTMR0ISR
 10651 ;; This function is called by:
 10652 ;;		_INTERRUPT_InterruptManager
 10653 ;; This function uses a non-reentrant model
 10654 ;;
 10655                           
 10656                           	psect	text52
 10657  00278C                     __ptext52:
 10658                           	opt callstack 0
 10659  00278C                     _TMR0_ISR:
 10660                           	opt callstack 16
 10661  00278C                     
 10662                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
 10663  00278C  94F2               	bcf	242,2,c	;volatile
 10664  00278E                     
 10665                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
 10666  00278E  5046               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
 10667  002790  6ED7               	movwf	215,c	;volatile
 10668  002792                     
 10669                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
 10670  002792  C045  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 10671  002796                     
 10672                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
 10673  002796  0100               	movlb	0	; () banked
 10674  002798  51CD               	movf	_TMR0_InterruptHandler& (0+255),w,b
 10675  00279A  11CE               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 10676  00279C  B4D8               	btfsc	status,2,c
 10677  00279E  EFD3  F013         	goto	i2u296_41
 10678  0027A2  EFD5  F013         	goto	i2u296_40
 10679  0027A6                     i2u296_41:
 10680  0027A6  EFE1  F013         	goto	i2l390
 10681  0027AA                     i2u296_40:
 10682  0027AA                     
 10683                           ; BSR set to: 0
 10684                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
 10685  0027AA  D802               	call	i2u297_48
 10686  0027AC  EFE1  F013         	goto	i2u297_49
 10687  0027B0                     i2u297_48:
 10688  0027B0  0005               	push	
 10689  0027B2  6EFA               	movwf	pclath,c
 10690  0027B4  51CD               	movf	_TMR0_InterruptHandler& (0+255),w,b
 10691  0027B6  6EFD               	movwf	tosl,c
 10692  0027B8  51CE               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 10693  0027BA  6EFE               	movwf	tosh,c
 10694  0027BC  6AFF               	clrf	tosu,c
 10695  0027BE  50FA               	movf	pclath,w,c
 10696  0027C0  0012               	return		;indir
 10697  0027C2                     i2u297_49:
 10698  0027C2                     i2l390:
 10699  0027C2  0012               	return		;funcret
 10700  0027C4                     __end_of_TMR0_ISR:
 10701                           	opt callstack 0
 10702                           
 10703 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 10704 ;; Defined at:
 10705 ;;		line 160 in file "mcc_generated_files/tmr0.c"
 10706 ;; Parameters:    Size  Location     Type
 10707 ;;		None
 10708 ;; Auto vars:     Size  Location     Type
 10709 ;;		None
 10710 ;; Return value:  Size  Location     Type
 10711 ;;                  1    wreg      void 
 10712 ;; Registers used:
 10713 ;;		None
 10714 ;; Tracked objects:
 10715 ;;		On entry : 0/0
 10716 ;;		On exit  : 0/0
 10717 ;;		Unchanged: 0/0
 10718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10723 ;;Total ram usage:        0 bytes
 10724 ;; Hardware stack levels used:    1
 10725 ;; This function calls:
 10726 ;;		Nothing
 10727 ;; This function is called by:
 10728 ;;		_TMR0_Initialize
 10729 ;;		_TMR0_ISR
 10730 ;; This function uses a non-reentrant model
 10731 ;;
 10732                           
 10733                           	psect	text53
 10734  002A80                     __ptext53:
 10735                           	opt callstack 0
 10736  002A80                     _TMR0_DefaultInterruptHandler:
 10737                           	opt callstack 17
 10738  002A80  0012               	return		;funcret
 10739  002A82                     __end_of_TMR0_DefaultInterruptHandler:
 10740                           	opt callstack 0
 10741                           
 10742 ;; *************** function _myTMR0ISR *****************
 10743 ;; Defined at:
 10744 ;;		line 387 in file "main.c"
 10745 ;; Parameters:    Size  Location     Type
 10746 ;;		None
 10747 ;; Auto vars:     Size  Location     Type
 10748 ;;		None
 10749 ;; Return value:  Size  Location     Type
 10750 ;;                  1    wreg      void 
 10751 ;; Registers used:
 10752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10753 ;; Tracked objects:
 10754 ;;		On entry : 0/0
 10755 ;;		On exit  : 0/0
 10756 ;;		Unchanged: 0/0
 10757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10760 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10761 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10762 ;;Total ram usage:        2 bytes
 10763 ;; Hardware stack levels used:    1
 10764 ;; Hardware stack levels required when called:    1
 10765 ;; This function calls:
 10766 ;;		_TMR0_ReadTimer
 10767 ;;		i2_EPWM1_LoadDutyValue
 10768 ;;		i2_TMR0_WriteTimer
 10769 ;; This function is called by:
 10770 ;;		_main
 10771 ;;		_TMR0_ISR
 10772 ;; This function uses a non-reentrant model
 10773 ;;
 10774                           
 10775                           	psect	text54
 10776  00185C                     __ptext54:
 10777                           	opt callstack 0
 10778  00185C                     _myTMR0ISR:
 10779                           	opt callstack 16
 10780  00185C                     
 10781                           ;main.c: 388:     static uint16_t sampleBufferIndex = 0;;main.c: 389:     static uint16_
      +                          t pullBufferIndex = 0;;main.c: 390:     static activeBuffer_t activeBuffersample = RED;;
      +                          main.c: 391:     static activeBuffer_t activeBufferpull = RED;;main.c: 392:     if(fillB
      +                          uffer) {
 10782  00185C  504C               	movf	_fillBuffer^0,w,c
 10783  00185E  B4D8               	btfsc	status,2,c
 10784  001860  EF34  F00C         	goto	i2u263_41
 10785  001864  EF36  F00C         	goto	i2u263_40
 10786  001868                     i2u263_41:
 10787  001868  EF8D  F00C         	goto	i2l157
 10788  00186C                     i2u263_40:
 10789  00186C  EF4C  F00C         	goto	i2l3674
 10790  001870                     i2l3668:
 10791                           
 10792                           ;main.c: 395:                 sdCardBufferRed[sampleBufferIndex] = ADRESH;
 10793  001870  0EF7               	movlw	low _sdCardBufferRed
 10794  001872  2449               	addwf	myTMR0ISR@sampleBufferIndex^0,w,c
 10795  001874  6ED9               	movwf	fsr2l,c
 10796  001876  0E02               	movlw	high _sdCardBufferRed
 10797  001878  204A               	addwfc	(myTMR0ISR@sampleBufferIndex+1)^0,w,c
 10798  00187A  6EDA               	movwf	fsr2h,c
 10799  00187C  CFC4 FFDF          	movff	4036,indf2	;volatile
 10800                           
 10801                           ;main.c: 396:                 break;
 10802  001880  EF61  F00C         	goto	i2l3676
 10803  001884                     i2l3670:
 10804                           
 10805                           ;main.c: 398:                 sdCardBufferBlue[sampleBufferIndex] = ADRESH;
 10806  001884  0EF7               	movlw	low _sdCardBufferBlue
 10807  001886  2449               	addwf	myTMR0ISR@sampleBufferIndex^0,w,c
 10808  001888  6ED9               	movwf	fsr2l,c
 10809  00188A  0E00               	movlw	high _sdCardBufferBlue
 10810  00188C  204A               	addwfc	(myTMR0ISR@sampleBufferIndex+1)^0,w,c
 10811  00188E  6EDA               	movwf	fsr2h,c
 10812  001890  CFC4 FFDF          	movff	4036,indf2	;volatile
 10813                           
 10814                           ;main.c: 399:                 break;
 10815  001894  EF61  F00C         	goto	i2l3676
 10816  001898                     i2l3674:
 10817  001898  504E               	movf	myTMR0ISR@activeBuffersample^0,w,c
 10818  00189A  6E0B               	movwf	??_myTMR0ISR^0,c
 10819  00189C  6A0C               	clrf	(??_myTMR0ISR+1)^0,c
 10820                           
 10821                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10822                           ; Switch size 1, requested type "simple"
 10823                           ; Number of cases is 1, Range of values is 0 to 0
 10824                           ; switch strategies available:
 10825                           ; Name         Instructions Cycles
 10826                           ; simple_byte            4     3 (average)
 10827                           ;	Chosen strategy is simple_byte
 10828  00189E  500C               	movf	(??_myTMR0ISR+1)^0,w,c
 10829  0018A0  0A00               	xorlw	0	; case 0
 10830  0018A2  B4D8               	btfsc	status,2,c
 10831  0018A4  EF56  F00C         	goto	i2l5684
 10832  0018A8  EF61  F00C         	goto	i2l3676
 10833  0018AC                     i2l5684:
 10834                           
 10835                           ; Switch size 1, requested type "simple"
 10836                           ; Number of cases is 2, Range of values is 0 to 1
 10837                           ; switch strategies available:
 10838                           ; Name         Instructions Cycles
 10839                           ; simple_byte            7     4 (average)
 10840                           ;	Chosen strategy is simple_byte
 10841  0018AC  500B               	movf	??_myTMR0ISR^0,w,c
 10842  0018AE  0A00               	xorlw	0	; case 0
 10843  0018B0  B4D8               	btfsc	status,2,c
 10844  0018B2  EF42  F00C         	goto	i2l3670
 10845  0018B6  0A01               	xorlw	1	; case 1
 10846  0018B8  B4D8               	btfsc	status,2,c
 10847  0018BA  EF38  F00C         	goto	i2l3668
 10848  0018BE  EF61  F00C         	goto	i2l3676
 10849  0018C2                     i2l3676:
 10850                           
 10851                           ;main.c: 402:         sampleBufferIndex += 1;
 10852  0018C2  4A49               	infsnz	myTMR0ISR@sampleBufferIndex^0,f,c
 10853  0018C4  2A4A               	incf	(myTMR0ISR@sampleBufferIndex+1)^0,f,c
 10854  0018C6                     
 10855                           ;main.c: 403:         if(sampleBufferIndex == 512){
 10856  0018C6  0E02               	movlw	2
 10857  0018C8  184A               	xorwf	(myTMR0ISR@sampleBufferIndex+1)^0,w,c
 10858  0018CA  1049               	iorwf	myTMR0ISR@sampleBufferIndex^0,w,c
 10859  0018CC  A4D8               	btfss	status,2,c
 10860  0018CE  EF6B  F00C         	goto	i2u264_41
 10861  0018D2  EF6D  F00C         	goto	i2u264_40
 10862  0018D6                     i2u264_41:
 10863  0018D6  EF8D  F00C         	goto	i2l157
 10864  0018DA                     i2u264_40:
 10865  0018DA                     
 10866                           ;main.c: 404:             if(activeBuffersample == RED){
 10867  0018DA  044E               	decf	myTMR0ISR@activeBuffersample^0,w,c
 10868  0018DC  A4D8               	btfss	status,2,c
 10869  0018DE  EF73  F00C         	goto	i2u265_41
 10870  0018E2  EF75  F00C         	goto	i2u265_40
 10871  0018E6                     i2u265_41:
 10872  0018E6  EF7C  F00C         	goto	i2l3684
 10873  0018EA                     i2u265_40:
 10874  0018EA                     
 10875                           ;main.c: 405:                 activeBuffersample = BLUE;
 10876  0018EA  0E00               	movlw	0
 10877  0018EC  6E4E               	movwf	myTMR0ISR@activeBuffersample^0,c
 10878                           
 10879                           ;main.c: 406:                 redBufferFull = 1;
 10880  0018EE  0E01               	movlw	1
 10881  0018F0  0100               	movlb	0	; () banked
 10882  0018F2  6FD4               	movwf	_redBufferFull& (0+255),b
 10883                           
 10884                           ;main.c: 407:             }else if(activeBuffersample == BLUE){
 10885  0018F4  EF89  F00C         	goto	i2l164
 10886  0018F8                     i2l3684:
 10887  0018F8  504E               	movf	myTMR0ISR@activeBuffersample^0,w,c
 10888  0018FA  A4D8               	btfss	status,2,c
 10889  0018FC  EF82  F00C         	goto	i2u266_41
 10890  001900  EF84  F00C         	goto	i2u266_40
 10891  001904                     i2u266_41:
 10892  001904  EF89  F00C         	goto	i2l164
 10893  001908                     i2u266_40:
 10894  001908                     
 10895                           ;main.c: 408:                 activeBuffersample = RED;
 10896  001908  0E01               	movlw	1
 10897  00190A  6E4E               	movwf	myTMR0ISR@activeBuffersample^0,c
 10898                           
 10899                           ;main.c: 409:                 blueBufferFull = 1;
 10900  00190C  0E01               	movlw	1
 10901  00190E  0100               	movlb	0	; () banked
 10902  001910  6FD3               	movwf	_blueBufferFull& (0+255),b
 10903  001912                     i2l164:
 10904                           
 10905                           ;main.c: 411:             sampleBufferIndex = 0;
 10906  001912  0E00               	movlw	0
 10907  001914  6E4A               	movwf	(myTMR0ISR@sampleBufferIndex+1)^0,c
 10908  001916  0E00               	movlw	0
 10909  001918  6E49               	movwf	myTMR0ISR@sampleBufferIndex^0,c
 10910  00191A                     i2l157:
 10911                           
 10912                           ;main.c: 414:     if(pullBuffer){
 10913  00191A  504B               	movf	_pullBuffer^0,w,c
 10914  00191C  B4D8               	btfsc	status,2,c
 10915  00191E  EF93  F00C         	goto	i2u267_41
 10916  001922  EF95  F00C         	goto	i2u267_40
 10917  001926                     i2u267_41:
 10918  001926  EFF6  F00C         	goto	i2l3710
 10919  00192A                     i2u267_40:
 10920  00192A  EFB5  F00C         	goto	i2l3696
 10921  00192E                     i2l3690:
 10922                           
 10923                           ;main.c: 417:                 EPWM1_LoadDutyValue(sdCardBufferRed[pullBufferIndex]);
 10924  00192E  0EF7               	movlw	low _sdCardBufferRed
 10925  001930  2447               	addwf	myTMR0ISR@pullBufferIndex^0,w,c
 10926  001932  6ED9               	movwf	fsr2l,c
 10927  001934  0E02               	movlw	high _sdCardBufferRed
 10928  001936  2048               	addwfc	(myTMR0ISR@pullBufferIndex+1)^0,w,c
 10929  001938  6EDA               	movwf	fsr2h,c
 10930  00193A  50DF               	movf	indf2,w,c
 10931  00193C  6E0B               	movwf	??_myTMR0ISR^0,c
 10932  00193E  500B               	movf	??_myTMR0ISR^0,w,c
 10933  001940  6E01               	movwf	i2EPWM1_LoadDutyValue@dutyValue^0,c
 10934  001942  6A02               	clrf	(i2EPWM1_LoadDutyValue@dutyValue+1)^0,c
 10935  001944  EC2F  F014         	call	i2_EPWM1_LoadDutyValue	;wreg free
 10936                           
 10937                           ;main.c: 418:                 break;
 10938  001948  EFCA  F00C         	goto	i2l3698
 10939  00194C                     i2l3692:
 10940                           
 10941                           ;main.c: 420:                 EPWM1_LoadDutyValue(sdCardBufferBlue[pullBufferIndex]);
 10942  00194C  0EF7               	movlw	low _sdCardBufferBlue
 10943  00194E  2447               	addwf	myTMR0ISR@pullBufferIndex^0,w,c
 10944  001950  6ED9               	movwf	fsr2l,c
 10945  001952  0E00               	movlw	high _sdCardBufferBlue
 10946  001954  2048               	addwfc	(myTMR0ISR@pullBufferIndex+1)^0,w,c
 10947  001956  6EDA               	movwf	fsr2h,c
 10948  001958  50DF               	movf	indf2,w,c
 10949  00195A  6E0B               	movwf	??_myTMR0ISR^0,c
 10950  00195C  500B               	movf	??_myTMR0ISR^0,w,c
 10951  00195E  6E01               	movwf	i2EPWM1_LoadDutyValue@dutyValue^0,c
 10952  001960  6A02               	clrf	(i2EPWM1_LoadDutyValue@dutyValue+1)^0,c
 10953  001962  EC2F  F014         	call	i2_EPWM1_LoadDutyValue	;wreg free
 10954                           
 10955                           ;main.c: 421:                 break;
 10956  001966  EFCA  F00C         	goto	i2l3698
 10957  00196A                     i2l3696:
 10958  00196A  504D               	movf	myTMR0ISR@activeBufferpull^0,w,c
 10959  00196C  6E0B               	movwf	??_myTMR0ISR^0,c
 10960  00196E  6A0C               	clrf	(??_myTMR0ISR+1)^0,c
 10961                           
 10962                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10963                           ; Switch size 1, requested type "simple"
 10964                           ; Number of cases is 1, Range of values is 0 to 0
 10965                           ; switch strategies available:
 10966                           ; Name         Instructions Cycles
 10967                           ; simple_byte            4     3 (average)
 10968                           ;	Chosen strategy is simple_byte
 10969  001970  500C               	movf	(??_myTMR0ISR+1)^0,w,c
 10970  001972  0A00               	xorlw	0	; case 0
 10971  001974  B4D8               	btfsc	status,2,c
 10972  001976  EFBF  F00C         	goto	i2l5686
 10973  00197A  EFCA  F00C         	goto	i2l3698
 10974  00197E                     i2l5686:
 10975                           
 10976                           ; Switch size 1, requested type "simple"
 10977                           ; Number of cases is 2, Range of values is 0 to 1
 10978                           ; switch strategies available:
 10979                           ; Name         Instructions Cycles
 10980                           ; simple_byte            7     4 (average)
 10981                           ;	Chosen strategy is simple_byte
 10982  00197E  500B               	movf	??_myTMR0ISR^0,w,c
 10983  001980  0A00               	xorlw	0	; case 0
 10984  001982  B4D8               	btfsc	status,2,c
 10985  001984  EFA6  F00C         	goto	i2l3692
 10986  001988  0A01               	xorlw	1	; case 1
 10987  00198A  B4D8               	btfsc	status,2,c
 10988  00198C  EF97  F00C         	goto	i2l3690
 10989  001990  EFCA  F00C         	goto	i2l3698
 10990  001994                     i2l3698:
 10991                           
 10992                           ;main.c: 424:         pullBufferIndex += 1;
 10993  001994  4A47               	infsnz	myTMR0ISR@pullBufferIndex^0,f,c
 10994  001996  2A48               	incf	(myTMR0ISR@pullBufferIndex+1)^0,f,c
 10995  001998                     
 10996                           ;main.c: 425:         if(pullBufferIndex == 512){
 10997  001998  0E02               	movlw	2
 10998  00199A  1848               	xorwf	(myTMR0ISR@pullBufferIndex+1)^0,w,c
 10999  00199C  1047               	iorwf	myTMR0ISR@pullBufferIndex^0,w,c
 11000  00199E  A4D8               	btfss	status,2,c
 11001  0019A0  EFD4  F00C         	goto	i2u268_41
 11002  0019A4  EFD6  F00C         	goto	i2u268_40
 11003  0019A8                     i2u268_41:
 11004  0019A8  EFF6  F00C         	goto	i2l3710
 11005  0019AC                     i2u268_40:
 11006  0019AC                     
 11007                           ;main.c: 426:             if(activeBufferpull == RED){
 11008  0019AC  044D               	decf	myTMR0ISR@activeBufferpull^0,w,c
 11009  0019AE  A4D8               	btfss	status,2,c
 11010  0019B0  EFDC  F00C         	goto	i2u269_41
 11011  0019B4  EFDE  F00C         	goto	i2u269_40
 11012  0019B8                     i2u269_41:
 11013  0019B8  EFE5  F00C         	goto	i2l3706
 11014  0019BC                     i2u269_40:
 11015  0019BC                     
 11016                           ;main.c: 427:                 activeBufferpull = BLUE;
 11017  0019BC  0E00               	movlw	0
 11018  0019BE  6E4D               	movwf	myTMR0ISR@activeBufferpull^0,c
 11019                           
 11020                           ;main.c: 428:                 redBufferEmpty = 1;
 11021  0019C0  0E01               	movlw	1
 11022  0019C2  0100               	movlb	0	; () banked
 11023  0019C4  6FD2               	movwf	_redBufferEmpty& (0+255),b
 11024                           
 11025                           ;main.c: 429:             }else if(activeBufferpull == BLUE){
 11026  0019C6  EFF2  F00C         	goto	i2l173
 11027  0019CA                     i2l3706:
 11028  0019CA  504D               	movf	myTMR0ISR@activeBufferpull^0,w,c
 11029  0019CC  A4D8               	btfss	status,2,c
 11030  0019CE  EFEB  F00C         	goto	i2u270_41
 11031  0019D2  EFED  F00C         	goto	i2u270_40
 11032  0019D6                     i2u270_41:
 11033  0019D6  EFF2  F00C         	goto	i2l173
 11034  0019DA                     i2u270_40:
 11035  0019DA                     
 11036                           ;main.c: 430:                 activeBufferpull = RED;
 11037  0019DA  0E01               	movlw	1
 11038  0019DC  6E4D               	movwf	myTMR0ISR@activeBufferpull^0,c
 11039                           
 11040                           ;main.c: 431:                 blueBufferEmpty = 1;
 11041  0019DE  0E01               	movlw	1
 11042  0019E0  0100               	movlb	0	; () banked
 11043  0019E2  6FD1               	movwf	_blueBufferEmpty& (0+255),b
 11044  0019E4                     i2l173:
 11045                           
 11046                           ;main.c: 433:             pullBufferIndex = 0;
 11047  0019E4  0E00               	movlw	0
 11048  0019E6  6E48               	movwf	(myTMR0ISR@pullBufferIndex+1)^0,c
 11049  0019E8  0E00               	movlw	0
 11050  0019EA  6E47               	movwf	myTMR0ISR@pullBufferIndex^0,c
 11051  0019EC                     i2l3710:
 11052                           
 11053                           ;main.c: 437:     TMR0_WriteTimer(TMR0_ReadTimer() + (0x10000 - sampleRate));
 11054  0019EC  ECBC  F014         	call	_TMR0_ReadTimer	;wreg free
 11055  0019F0  0100               	movlb	0	; () banked
 11056  0019F2  51F5               	movf	_sampleRate& (0+255),w,b
 11057  0019F4  5C01               	subwf	?_TMR0_ReadTimer^0,w,c
 11058  0019F6  6E09               	movwf	i2TMR0_WriteTimer@timerVal^0,c
 11059  0019F8  51F6               	movf	(_sampleRate+1)& (0+255),w,b
 11060  0019FA  5802               	subwfb	(?_TMR0_ReadTimer+1)^0,w,c
 11061  0019FC  6E0A               	movwf	(i2TMR0_WriteTimer@timerVal+1)^0,c
 11062  0019FE  EC35  F015         	call	i2_TMR0_WriteTimer	;wreg free
 11063  001A02                     
 11064                           ;main.c: 438:     ADCON0bits.GO_NOT_DONE = 1;
 11065  001A02  82C2               	bsf	194,1,c	;volatile
 11066  001A04                     
 11067                           ;main.c: 439:     INTCONbits.TMR0IF = 0;
 11068  001A04  94F2               	bcf	242,2,c	;volatile
 11069  001A06  0012               	return		;funcret
 11070  001A08                     __end_of_myTMR0ISR:
 11071                           	opt callstack 0
 11072                           
 11073 ;; *************** function i2_TMR0_WriteTimer *****************
 11074 ;; Defined at:
 11075 ;;		line 122 in file "mcc_generated_files/tmr0.c"
 11076 ;; Parameters:    Size  Location     Type
 11077 ;;  timerVal        2    8[COMRAM] unsigned short 
 11078 ;; Auto vars:     Size  Location     Type
 11079 ;;		None
 11080 ;; Return value:  Size  Location     Type
 11081 ;;                  1    wreg      void 
 11082 ;; Registers used:
 11083 ;;		wreg, status,2
 11084 ;; Tracked objects:
 11085 ;;		On entry : 0/0
 11086 ;;		On exit  : 0/0
 11087 ;;		Unchanged: 0/0
 11088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11089 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11092 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11093 ;;Total ram usage:        2 bytes
 11094 ;; Hardware stack levels used:    1
 11095 ;; This function calls:
 11096 ;;		Nothing
 11097 ;; This function is called by:
 11098 ;;		_myTMR0ISR
 11099 ;; This function uses a non-reentrant model
 11100 ;;
 11101                           
 11102                           	psect	text55
 11103  002A6A                     __ptext55:
 11104                           	opt callstack 0
 11105  002A6A                     i2_TMR0_WriteTimer:
 11106                           	opt callstack 16
 11107  002A6A                     
 11108                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
 11109  002A6A  500A               	movf	(i2TMR0_WriteTimer@timerVal+1)^0,w,c
 11110  002A6C  6ED7               	movwf	215,c	;volatile
 11111  002A6E                     
 11112                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
 11113  002A6E  C009  FFD6         	movff	i2TMR0_WriteTimer@timerVal,4054	;volatile
 11114  002A72  0012               	return		;funcret
 11115  002A74                     __end_ofi2_TMR0_WriteTimer:
 11116                           	opt callstack 0
 11117                           
 11118 ;; *************** function i2_EPWM1_LoadDutyValue *****************
 11119 ;; Defined at:
 11120 ;;		line 90 in file "mcc_generated_files/epwm1.c"
 11121 ;; Parameters:    Size  Location     Type
 11122 ;;  dutyValue       2    0[COMRAM] unsigned short 
 11123 ;; Auto vars:     Size  Location     Type
 11124 ;;		None
 11125 ;; Return value:  Size  Location     Type
 11126 ;;                  1    wreg      void 
 11127 ;; Registers used:
 11128 ;;		wreg, status,2, status,0
 11129 ;; Tracked objects:
 11130 ;;		On entry : 0/0
 11131 ;;		On exit  : 0/0
 11132 ;;		Unchanged: 0/0
 11133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11134 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11136 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11137 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11138 ;;Total ram usage:        4 bytes
 11139 ;; Hardware stack levels used:    1
 11140 ;; This function calls:
 11141 ;;		Nothing
 11142 ;; This function is called by:
 11143 ;;		_myTMR0ISR
 11144 ;; This function uses a non-reentrant model
 11145 ;;
 11146                           
 11147                           	psect	text56
 11148  00285E                     __ptext56:
 11149                           	opt callstack 0
 11150  00285E                     i2_EPWM1_LoadDutyValue:
 11151                           	opt callstack 16
 11152  00285E                     
 11153                           ;mcc_generated_files/epwm1.c: 90: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 91: {;mcc_generated_files/epwm1.c: 93:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
 11154  00285E  C001  F003         	movff	i2EPWM1_LoadDutyValue@dutyValue,??i2_EPWM1_LoadDutyValue
 11155  002862  C002  F004         	movff	i2EPWM1_LoadDutyValue@dutyValue+1,??i2_EPWM1_LoadDutyValue+1
 11156  002866  90D8               	bcf	status,0,c
 11157  002868  3204               	rrcf	(??i2_EPWM1_LoadDutyValue+1)^0,f,c
 11158  00286A  3203               	rrcf	??i2_EPWM1_LoadDutyValue^0,f,c
 11159  00286C  90D8               	bcf	status,0,c
 11160  00286E  3204               	rrcf	(??i2_EPWM1_LoadDutyValue+1)^0,f,c
 11161  002870  3203               	rrcf	??i2_EPWM1_LoadDutyValue^0,f,c
 11162  002872  5003               	movf	??i2_EPWM1_LoadDutyValue^0,w,c
 11163  002874  6EBE               	movwf	190,c	;volatile
 11164                           
 11165                           ;mcc_generated_files/epwm1.c: 96:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
 11166  002876  C001  F003         	movff	i2EPWM1_LoadDutyValue@dutyValue,??i2_EPWM1_LoadDutyValue
 11167  00287A  0E03               	movlw	3
 11168  00287C  1603               	andwf	??i2_EPWM1_LoadDutyValue^0,f,c
 11169  00287E  3A03               	swapf	??i2_EPWM1_LoadDutyValue^0,f,c
 11170  002880  0EF0               	movlw	240
 11171  002882  1603               	andwf	??i2_EPWM1_LoadDutyValue^0,f,c
 11172  002884  50BD               	movf	189,w,c	;volatile
 11173  002886  0BCF               	andlw	207
 11174  002888  1003               	iorwf	??i2_EPWM1_LoadDutyValue^0,w,c
 11175  00288A  6EBD               	movwf	189,c	;volatile
 11176  00288C  0012               	return		;funcret
 11177  00288E                     __end_ofi2_EPWM1_LoadDutyValue:
 11178                           	opt callstack 0
 11179                           
 11180 ;; *************** function _TMR0_ReadTimer *****************
 11181 ;; Defined at:
 11182 ;;		line 109 in file "mcc_generated_files/tmr0.c"
 11183 ;; Parameters:    Size  Location     Type
 11184 ;;		None
 11185 ;; Auto vars:     Size  Location     Type
 11186 ;;  readVal         2    4[COMRAM] unsigned short 
 11187 ;;  readValHigh     1    7[COMRAM] unsigned char 
 11188 ;;  readValLow      1    6[COMRAM] unsigned char 
 11189 ;; Return value:  Size  Location     Type
 11190 ;;                  2    0[COMRAM] unsigned short 
 11191 ;; Registers used:
 11192 ;;		wreg, status,2
 11193 ;; Tracked objects:
 11194 ;;		On entry : 0/0
 11195 ;;		On exit  : 0/0
 11196 ;;		Unchanged: 0/0
 11197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11198 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11199 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11200 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11201 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11202 ;;Total ram usage:        8 bytes
 11203 ;; Hardware stack levels used:    1
 11204 ;; This function calls:
 11205 ;;		Nothing
 11206 ;; This function is called by:
 11207 ;;		_myTMR0ISR
 11208 ;; This function uses a non-reentrant model
 11209 ;;
 11210                           
 11211                           	psect	text57
 11212  002978                     __ptext57:
 11213                           	opt callstack 0
 11214  002978                     _TMR0_ReadTimer:
 11215                           	opt callstack 16
 11216  002978                     
 11217                           ;mcc_generated_files/tmr0.c: 111:     uint16_t readVal;;mcc_generated_files/tmr0.c: 112:
      +                               uint8_t readValLow;;mcc_generated_files/tmr0.c: 113:     uint8_t readValHigh;;mcc_g
      +                          enerated_files/tmr0.c: 115:     readValLow = TMR0L;
 11218  002978  CFD6 F007          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
 11219                           
 11220                           ;mcc_generated_files/tmr0.c: 116:     readValHigh = TMR0H;
 11221  00297C  CFD7 F008          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
 11222  002980                     
 11223                           ;mcc_generated_files/tmr0.c: 117:     readVal = ((uint16_t)readValHigh << 8) + readValLo
      +                          w;
 11224  002980  5008               	movf	TMR0_ReadTimer@readValHigh^0,w,c
 11225  002982  6E03               	movwf	??_TMR0_ReadTimer^0,c
 11226  002984  5007               	movf	TMR0_ReadTimer@readValLow^0,w,c
 11227  002986  6E05               	movwf	TMR0_ReadTimer@readVal^0,c
 11228  002988  C003  F006         	movff	??_TMR0_ReadTimer,TMR0_ReadTimer@readVal+1
 11229  00298C                     
 11230                           ;mcc_generated_files/tmr0.c: 119:     return readVal;
 11231  00298C  C005  F001         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
 11232  002990  C006  F002         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
 11233  002994  0012               	return		;funcret
 11234  002996                     __end_of_TMR0_ReadTimer:
 11235                           	opt callstack 0
 11236                           
 11237                           	psect	text58
 11238  000000                     __ptext58:
 11239                           	opt callstack 0
 11240  000000                     
 11241                           	psect	rparam
 11242  0000                     
 11243                           	psect	temp
 11244  00004F                     btemp:
 11245                           	opt callstack 0
 11246  00004F                     	ds	1
 11247  0000                     int$flags	set	btemp
 11248  0000                     wtemp8	set	btemp+1
 11249  0000                     ttemp5	set	btemp+1
 11250  0000                     ttemp6	set	btemp+4
 11251  0000                     ttemp7	set	btemp+8
 11252                           tosu	equ	0xFFF
 11253                           tosh	equ	0xFFE
 11254                           tosl	equ	0xFFD
 11255                           stkptr	equ	0xFFC
 11256                           pclatu	equ	0xFFB
 11257                           pclath	equ	0xFFA
 11258                           pcl	equ	0xFF9
 11259                           tblptru	equ	0xFF8
 11260                           tblptrh	equ	0xFF7
 11261                           tblptrl	equ	0xFF6
 11262                           tablat	equ	0xFF5
 11263                           prodh	equ	0xFF4
 11264                           prodl	equ	0xFF3
 11265                           indf0	equ	0xFEF
 11266                           postinc0	equ	0xFEE
 11267                           postdec0	equ	0xFED
 11268                           preinc0	equ	0xFEC
 11269                           plusw0	equ	0xFEB
 11270                           fsr0h	equ	0xFEA
 11271                           fsr0l	equ	0xFE9
 11272                           wreg	equ	0xFE8
 11273                           indf1	equ	0xFE7
 11274                           postinc1	equ	0xFE6
 11275                           postdec1	equ	0xFE5
 11276                           preinc1	equ	0xFE4
 11277                           plusw1	equ	0xFE3
 11278                           fsr1h	equ	0xFE2
 11279                           fsr1l	equ	0xFE1
 11280                           bsr	equ	0xFE0
 11281                           indf2	equ	0xFDF
 11282                           postinc2	equ	0xFDE
 11283                           postdec2	equ	0xFDD
 11284                           preinc2	equ	0xFDC
 11285                           plusw2	equ	0xFDB
 11286                           fsr2h	equ	0xFDA
 11287                           fsr2l	equ	0xFD9
 11288                           status	equ	0xFD8


Data Sizes:
    Strings     1676
    Constant    30
    Data        4
    BSS         1600
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     62      78
    BANK0           160     99     151
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 78
		 -> STR_113(CODE[3]), STR_112(CODE[3]), STR_111(CODE[2]), STR_110(CODE[4]), 
		 -> STR_109(CODE[6]), STR_108(CODE[3]), STR_107(CODE[3]), STR_106(CODE[2]), 
		 -> STR_105(CODE[3]), STR_104(CODE[2]), STR_103(CODE[4]), STR_102(CODE[27]), 
		 -> STR_101(CODE[29]), STR_100(CODE[35]), STR_99(CODE[23]), STR_98(CODE[22]), 
		 -> STR_97(CODE[21]), STR_96(CODE[3]), STR_95(CODE[3]), STR_94(CODE[28]), 
		 -> STR_93(CODE[26]), STR_92(CODE[17]), STR_91(CODE[10]), STR_90(CODE[10]), 
		 -> STR_89(CODE[14]), STR_88(CODE[58]), STR_87(CODE[16]), STR_86(CODE[24]), 
		 -> STR_85(CODE[18]), STR_84(CODE[29]), STR_83(CODE[58]), STR_82(CODE[3]), 
		 -> STR_81(CODE[47]), STR_80(CODE[35]), STR_79(CODE[5]), STR_78(CODE[25]), 
		 -> STR_77(CODE[16]), STR_76(CODE[71]), STR_75(CODE[46]), STR_74(CODE[18]), 
		 -> STR_73(CODE[29]), STR_72(CODE[58]), STR_71(CODE[3]), STR_70(CODE[68]), 
		 -> STR_69(CODE[57]), STR_68(CODE[17]), STR_67(CODE[3]), STR_66(CODE[5]), 
		 -> STR_65(CODE[2]), STR_64(CODE[5]), STR_63(CODE[17]), STR_62(CODE[15]), 
		 -> STR_61(CODE[3]), STR_60(CODE[5]), STR_59(CODE[2]), STR_58(CODE[5]), 
		 -> STR_57(CODE[17]), STR_56(CODE[15]), STR_55(CODE[20]), STR_54(CODE[78]), 
		 -> STR_53(CODE[46]), STR_52(CODE[3]), STR_51(CODE[5]), STR_50(CODE[2]), 
		 -> STR_49(CODE[5]), STR_48(CODE[17]), STR_47(CODE[15]), STR_46(CODE[3]), 
		 -> STR_45(CODE[5]), STR_44(CODE[2]), STR_43(CODE[5]), STR_42(CODE[17]), 
		 -> STR_41(CODE[15]), STR_40(CODE[3]), STR_39(CODE[5]), STR_38(CODE[2]), 
		 -> STR_37(CODE[5]), STR_36(CODE[19]), STR_35(CODE[11]), STR_34(CODE[11]), 
		 -> STR_33(CODE[29]), STR_32(CODE[42]), STR_31(CODE[2]), STR_30(CODE[2]), 
		 -> STR_29(CODE[8]), STR_28(CODE[52]), STR_27(CODE[46]), STR_26(CODE[42]), 
		 -> STR_25(CODE[50]), STR_24(CODE[52]), STR_23(CODE[32]), STR_22(CODE[52]), 
		 -> STR_21(CODE[55]), STR_20(CODE[43]), STR_19(CODE[37]), STR_18(CODE[52]), 
		 -> STR_17(CODE[24]), STR_16(CODE[52]), STR_15(CODE[24]), STR_14(CODE[21]), 
		 -> STR_13(CODE[7]), STR_12(CODE[15]), STR_11(CODE[52]), STR_10(CODE[3]), 
		 -> STR_9(CODE[5]), STR_8(CODE[2]), STR_7(CODE[5]), STR_6(CODE[19]), 
		 -> STR_5(CODE[54]), STR_4(CODE[5]), STR_3(CODE[31]), STR_2(CODE[18]), 
		 -> STR_1(CODE[20]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2044_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 78
		 -> STR_113(CODE[3]), STR_112(CODE[3]), STR_111(CODE[2]), STR_110(CODE[4]), 
		 -> STR_109(CODE[6]), STR_108(CODE[3]), STR_107(CODE[3]), STR_106(CODE[2]), 
		 -> STR_105(CODE[3]), STR_104(CODE[2]), STR_103(CODE[4]), STR_102(CODE[27]), 
		 -> STR_101(CODE[29]), STR_100(CODE[35]), STR_99(CODE[23]), STR_98(CODE[22]), 
		 -> STR_97(CODE[21]), STR_96(CODE[3]), STR_95(CODE[3]), STR_94(CODE[28]), 
		 -> STR_93(CODE[26]), STR_92(CODE[17]), STR_91(CODE[10]), STR_90(CODE[10]), 
		 -> STR_89(CODE[14]), STR_88(CODE[58]), STR_87(CODE[16]), STR_86(CODE[24]), 
		 -> STR_85(CODE[18]), STR_84(CODE[29]), STR_83(CODE[58]), STR_82(CODE[3]), 
		 -> STR_81(CODE[47]), STR_80(CODE[35]), STR_79(CODE[5]), STR_78(CODE[25]), 
		 -> STR_77(CODE[16]), STR_76(CODE[71]), STR_75(CODE[46]), STR_74(CODE[18]), 
		 -> STR_73(CODE[29]), STR_72(CODE[58]), STR_71(CODE[3]), STR_70(CODE[68]), 
		 -> STR_69(CODE[57]), STR_68(CODE[17]), STR_67(CODE[3]), STR_66(CODE[5]), 
		 -> STR_65(CODE[2]), STR_64(CODE[5]), STR_63(CODE[17]), STR_62(CODE[15]), 
		 -> STR_61(CODE[3]), STR_60(CODE[5]), STR_59(CODE[2]), STR_58(CODE[5]), 
		 -> STR_57(CODE[17]), STR_56(CODE[15]), STR_55(CODE[20]), STR_54(CODE[78]), 
		 -> STR_53(CODE[46]), STR_52(CODE[3]), STR_51(CODE[5]), STR_50(CODE[2]), 
		 -> STR_49(CODE[5]), STR_48(CODE[17]), STR_47(CODE[15]), STR_46(CODE[3]), 
		 -> STR_45(CODE[5]), STR_44(CODE[2]), STR_43(CODE[5]), STR_42(CODE[17]), 
		 -> STR_41(CODE[15]), STR_40(CODE[3]), STR_39(CODE[5]), STR_38(CODE[2]), 
		 -> STR_37(CODE[5]), STR_36(CODE[19]), STR_35(CODE[11]), STR_34(CODE[11]), 
		 -> STR_33(CODE[29]), STR_32(CODE[42]), STR_31(CODE[2]), STR_30(CODE[2]), 
		 -> STR_29(CODE[8]), STR_28(CODE[52]), STR_27(CODE[46]), STR_26(CODE[42]), 
		 -> STR_25(CODE[50]), STR_24(CODE[52]), STR_23(CODE[32]), STR_22(CODE[52]), 
		 -> STR_21(CODE[55]), STR_20(CODE[43]), STR_19(CODE[37]), STR_18(CODE[52]), 
		 -> STR_17(CODE[24]), STR_16(CODE[52]), STR_15(CODE[24]), STR_14(CODE[21]), 
		 -> STR_13(CODE[7]), STR_12(CODE[15]), STR_11(CODE[52]), STR_10(CODE[3]), 
		 -> STR_9(CODE[5]), STR_8(CODE[2]), STR_7(CODE[5]), STR_6(CODE[19]), 
		 -> STR_5(CODE[54]), STR_4(CODE[5]), STR_3(CODE[31]), STR_2(CODE[18]), 
		 -> STR_1(CODE[20]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 78
		 -> STR_113(CODE[3]), STR_112(CODE[3]), STR_111(CODE[2]), STR_110(CODE[4]), 
		 -> STR_109(CODE[6]), STR_108(CODE[3]), STR_107(CODE[3]), STR_106(CODE[2]), 
		 -> STR_105(CODE[3]), STR_104(CODE[2]), STR_103(CODE[4]), STR_102(CODE[27]), 
		 -> STR_101(CODE[29]), STR_100(CODE[35]), STR_99(CODE[23]), STR_98(CODE[22]), 
		 -> STR_97(CODE[21]), STR_96(CODE[3]), STR_95(CODE[3]), STR_94(CODE[28]), 
		 -> STR_93(CODE[26]), STR_92(CODE[17]), STR_91(CODE[10]), STR_90(CODE[10]), 
		 -> STR_89(CODE[14]), STR_88(CODE[58]), STR_87(CODE[16]), STR_86(CODE[24]), 
		 -> STR_85(CODE[18]), STR_84(CODE[29]), STR_83(CODE[58]), STR_82(CODE[3]), 
		 -> STR_81(CODE[47]), STR_80(CODE[35]), STR_79(CODE[5]), STR_78(CODE[25]), 
		 -> STR_77(CODE[16]), STR_76(CODE[71]), STR_75(CODE[46]), STR_74(CODE[18]), 
		 -> STR_73(CODE[29]), STR_72(CODE[58]), STR_71(CODE[3]), STR_70(CODE[68]), 
		 -> STR_69(CODE[57]), STR_68(CODE[17]), STR_67(CODE[3]), STR_66(CODE[5]), 
		 -> STR_65(CODE[2]), STR_64(CODE[5]), STR_63(CODE[17]), STR_62(CODE[15]), 
		 -> STR_61(CODE[3]), STR_60(CODE[5]), STR_59(CODE[2]), STR_58(CODE[5]), 
		 -> STR_57(CODE[17]), STR_56(CODE[15]), STR_55(CODE[20]), STR_54(CODE[78]), 
		 -> STR_53(CODE[46]), STR_52(CODE[3]), STR_51(CODE[5]), STR_50(CODE[2]), 
		 -> STR_49(CODE[5]), STR_48(CODE[17]), STR_47(CODE[15]), STR_46(CODE[3]), 
		 -> STR_45(CODE[5]), STR_44(CODE[2]), STR_43(CODE[5]), STR_42(CODE[17]), 
		 -> STR_41(CODE[15]), STR_40(CODE[3]), STR_39(CODE[5]), STR_38(CODE[2]), 
		 -> STR_37(CODE[5]), STR_36(CODE[19]), STR_35(CODE[11]), STR_34(CODE[11]), 
		 -> STR_33(CODE[29]), STR_32(CODE[42]), STR_31(CODE[2]), STR_30(CODE[2]), 
		 -> STR_29(CODE[8]), STR_28(CODE[52]), STR_27(CODE[46]), STR_26(CODE[42]), 
		 -> STR_25(CODE[50]), STR_24(CODE[52]), STR_23(CODE[32]), STR_22(CODE[52]), 
		 -> STR_21(CODE[55]), STR_20(CODE[43]), STR_19(CODE[37]), STR_18(CODE[52]), 
		 -> STR_17(CODE[24]), STR_16(CODE[52]), STR_15(CODE[24]), STR_14(CODE[21]), 
		 -> STR_13(CODE[7]), STR_12(CODE[15]), STR_11(CODE[52]), STR_10(CODE[3]), 
		 -> STR_9(CODE[5]), STR_8(CODE[2]), STR_7(CODE[5]), STR_6(CODE[19]), 
		 -> STR_5(CODE[54]), STR_4(CODE[5]), STR_3(CODE[31]), STR_2(CODE[18]), 
		 -> STR_1(CODE[20]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 78
		 -> STR_113(CODE[3]), STR_112(CODE[3]), STR_111(CODE[2]), STR_110(CODE[4]), 
		 -> STR_109(CODE[6]), STR_108(CODE[3]), STR_107(CODE[3]), STR_106(CODE[2]), 
		 -> STR_105(CODE[3]), STR_104(CODE[2]), STR_103(CODE[4]), STR_102(CODE[27]), 
		 -> STR_101(CODE[29]), STR_100(CODE[35]), STR_99(CODE[23]), STR_98(CODE[22]), 
		 -> STR_97(CODE[21]), STR_96(CODE[3]), STR_95(CODE[3]), STR_94(CODE[28]), 
		 -> STR_93(CODE[26]), STR_92(CODE[17]), STR_91(CODE[10]), STR_90(CODE[10]), 
		 -> STR_89(CODE[14]), STR_88(CODE[58]), STR_87(CODE[16]), STR_86(CODE[24]), 
		 -> STR_85(CODE[18]), STR_84(CODE[29]), STR_83(CODE[58]), STR_82(CODE[3]), 
		 -> STR_81(CODE[47]), STR_80(CODE[35]), STR_79(CODE[5]), STR_78(CODE[25]), 
		 -> STR_77(CODE[16]), STR_76(CODE[71]), STR_75(CODE[46]), STR_74(CODE[18]), 
		 -> STR_73(CODE[29]), STR_72(CODE[58]), STR_71(CODE[3]), STR_70(CODE[68]), 
		 -> STR_69(CODE[57]), STR_68(CODE[17]), STR_67(CODE[3]), STR_66(CODE[5]), 
		 -> STR_65(CODE[2]), STR_64(CODE[5]), STR_63(CODE[17]), STR_62(CODE[15]), 
		 -> STR_61(CODE[3]), STR_60(CODE[5]), STR_59(CODE[2]), STR_58(CODE[5]), 
		 -> STR_57(CODE[17]), STR_56(CODE[15]), STR_55(CODE[20]), STR_54(CODE[78]), 
		 -> STR_53(CODE[46]), STR_52(CODE[3]), STR_51(CODE[5]), STR_50(CODE[2]), 
		 -> STR_49(CODE[5]), STR_48(CODE[17]), STR_47(CODE[15]), STR_46(CODE[3]), 
		 -> STR_45(CODE[5]), STR_44(CODE[2]), STR_43(CODE[5]), STR_42(CODE[17]), 
		 -> STR_41(CODE[15]), STR_40(CODE[3]), STR_39(CODE[5]), STR_38(CODE[2]), 
		 -> STR_37(CODE[5]), STR_36(CODE[19]), STR_35(CODE[11]), STR_34(CODE[11]), 
		 -> STR_33(CODE[29]), STR_32(CODE[42]), STR_31(CODE[2]), STR_30(CODE[2]), 
		 -> STR_29(CODE[8]), STR_28(CODE[52]), STR_27(CODE[46]), STR_26(CODE[42]), 
		 -> STR_25(CODE[50]), STR_24(CODE[52]), STR_23(CODE[32]), STR_22(CODE[52]), 
		 -> STR_21(CODE[55]), STR_20(CODE[43]), STR_19(CODE[37]), STR_18(CODE[52]), 
		 -> STR_17(CODE[24]), STR_16(CODE[52]), STR_15(CODE[24]), STR_14(CODE[21]), 
		 -> STR_13(CODE[7]), STR_12(CODE[15]), STR_11(CODE[52]), STR_10(CODE[3]), 
		 -> STR_9(CODE[5]), STR_8(CODE[2]), STR_7(CODE[5]), STR_6(CODE[19]), 
		 -> STR_5(CODE[54]), STR_4(CODE[5]), STR_3(CODE[31]), STR_2(CODE[18]), 
		 -> STR_1(CODE[20]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), myTMR0ISR(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), myTMR0ISR(), 

    hexDumpBuffer@sdCardBuffer	PTR unsigned char  size(2) Largest target is 512
		 -> sdCardBuffer(BIGRAM[512]), 

    SDCARD_WriteBlock@sdCardBuffer	PTR unsigned char  size(2) Largest target is 512
		 -> sdCardBufferBlue(BIGRAM[512]), sdCardBufferRed(BIGRAM[512]), 

    SDCARD_ReadBlock@sdCardBuffer	PTR unsigned char  size(2) Largest target is 512
		 -> sdCardBufferBlue(BIGRAM[512]), sdCardBufferRed(BIGRAM[512]), sdCardBuffer(BIGRAM[512]), 


Critical Paths under _main in COMRAM

    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _SDCARD_WriteBlock->_SPI2_ExchangeByte
    _SDCARD_ReadBlock->_SPI2_ExchangeByte
    _SDCARD_PollWriteComplete->_SPI2_ExchangeByte
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->_isspace

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_ISR->_myTMR0ISR
    _myTMR0ISR->i2_TMR0_WriteTimer
    i2_TMR0_WriteTimer->_TMR0_ReadTimer

Critical Paths under _main in BANK0

    _main->_hexDumpBuffer
    _hexDumpBuffer->_printf
    _SDCARD_HCInitialize->_SDCARD_SetIdle
    _SDCARD_SetIdle->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0  132394
                                             81 BANK0     18    18      0
                _EPWM1_LoadDutyValue
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                _SDCARD_HCInitialize
           _SDCARD_PollWriteComplete
                   _SDCARD_ReadBlock
                  _SDCARD_WriteBlock
                         _SPI2_Close
                          _SPI2_Open
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_WriteTimer
                      _hexDumpBuffer
                             _printf
 ---------------------------------------------------------------------------------
 (1) _hexDumpBuffer                                       10     8      2   32552
                                             71 BANK0     10     8      2
                             _printf
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     170
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                     _ADC_Initialize
                   _EPWM1_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                             18 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI2_Open                                            2     2      0      88
                                             16 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SPI2_Close                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SDCARD_WriteBlock                                    8     2      6     657
                                             17 COMRAM     8     2      6
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _SDCARD_ReadBlock                                     8     2      6     961
                                             17 COMRAM     8     2      6
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _SDCARD_PollWriteComplete                             1     1      0      67
                                             17 COMRAM     1     1      0
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _SDCARD_HCInitialize                                  5     5      0   63964
                                             75 BANK0      5     5      0
                     _SDCARD_SetIdle
                  _SPI2_ExchangeByte
                             _printf
 ---------------------------------------------------------------------------------
 (2) _SDCARD_SetIdle                                       4     4      0   31917
                                             71 BANK0      4     4      0
                  _SPI2_ExchangeByte
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   31762
                                             61 BANK0     10     4      6
                  _SPI2_ExchangeByte (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   21493
                                             53 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6   20939
                                             56 COMRAM     6     0      6
                                             28 BANK0     25    25      0
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    5925
                                             45 COMRAM    11     0     11
                                              0 BANK0     28    28      0
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             22 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                             16 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                             16 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                             16 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    6161
                                             45 COMRAM    10     0     10
                                              0 BANK0     26    26      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             34 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             16 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                             16 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    4174
                                             45 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3895
                                             34 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             16 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1506
                                             27 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1006
                                             18 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      62
                                             17 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Write                                        1     1      0      31
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1765
                                             23 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                             16 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                             16 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     662
                                             16 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _SPI2_ExchangeByte                                    1     1      0      22
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EPWM1_LoadDutyValue                                  4     2      2     220
                                             16 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          4     4      0     235
                                             12 COMRAM     4     4      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (13) _TMR0_ISR                                            0     0      0     235
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                          _myTMR0ISR *
 ---------------------------------------------------------------------------------
 (14) _myTMR0ISR                                           2     2      0     235
                                             10 COMRAM     2     2      0
                     _TMR0_ReadTimer
              i2_EPWM1_LoadDutyValue
                  i2_TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (15) i2_TMR0_WriteTimer                                   2     0      2      70
                                              8 COMRAM     2     0      2
                     _TMR0_ReadTimer (ARG)
 ---------------------------------------------------------------------------------
 (15) i2_EPWM1_LoadDutyValue                               4     2      2      96
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) _TMR0_ReadTimer                                      8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (14) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EPWM1_LoadDutyValue
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SDCARD_HCInitialize
     _SDCARD_SetIdle
       _SPI2_ExchangeByte
       _printf
         _SPI2_ExchangeByte (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _EUSART1_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART1_Write
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART1_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART1_Write
                 _strlen
             _fputc
               _putch
                 _EUSART1_Write
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART1_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART1_Write
                 _strlen
               _toupper
                 _islower
     _SPI2_ExchangeByte
     _printf
       _SPI2_ExchangeByte (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower
   _SDCARD_PollWriteComplete
     _SPI2_ExchangeByte
   _SDCARD_ReadBlock
     _SPI2_ExchangeByte
   _SDCARD_WriteBlock
     _SPI2_ExchangeByte
   _SPI2_Close
   _SPI2_Open
   _SYSTEM_Initialize
     _ADC_Initialize
     _EPWM1_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI2_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
   _TMR0_SetInterruptHandler
   _TMR0_WriteTimer
   _hexDumpBuffer
     _printf
       _SPI2_ExchangeByte (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower
   _printf
     _SPI2_ExchangeByte (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write
         _isdigit
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
           _toupper
             _islower

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _myTMR0ISR *
       _TMR0_ReadTimer
       i2_EPWM1_LoadDutyValue
       i2_TMR0_WriteTimer
         _TMR0_ReadTimer (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     600      37       39.4%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     63      97       5       94.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3E      4E       1       83.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E5      12        0.0%
DATA                 0      0     6E5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Apr 02 07:57:11 2020

                                            l71 0078                                              l82 02B4  
                          SDCARD_ReadBlock@addr 0012                             ___wmul@multiplicand 0013  
                     myTMR0ISR@activeBufferpull 004D                                 _timer0ReloadVal 0045  
                                  __CFG_CP0$OFF 000000                                    __CFG_CP1$OFF 000000  
                                  __CFG_CP2$OFF 000000                                    __CFG_CP3$OFF 000000  
                                   __CFG_LVP$ON 000000                                  hexDumpBuffer@i 00AF  
                                hexDumpBuffer@j 00AB                                             l101 04F8  
                                           l210 29B0                                             l204 2930  
                                           l207 29A2                                             l305 1DC6  
                                           l314 1EAE                                             l324 22B2  
                                           l237 28B8                                             l350 185A  
                                           l319 2252                                             l512 28E2  
                                           l280 26AC                                             l265 221A  
                                           l409 2A2C                                             l515 29E4  
                                           l275 23D4                                             l371 282C  
                                           l339 178A                                             l508 28BA  
                                           l524 2A68                                             l701 20D4  
                                           l285 26E2                                             l277 23D6  
                                           l445 2976                                             l518 29F6  
                                           l542 2A5E                                             l551 2A76  
                                           l383 2A36                                             l448 285C  
                                           l536 2A54                                             l393 2A40  
                                           l714 1154                                             l803 2498  
                                           l539 2A4A                                             l491 262E  
                                           l708 2558                                             l716 115C  
                                           l804 24A0                                             l741 13D6  
                                           l734 1394                                             l638 29E0  
                                           l591 29C6                                             l807 2956  
                                           l583 2180                                             l592 29CA  
                                           l921 1D28                                             l762 160C  
                                           l586 2A7A                                             l499 2A0A  
                                           l739 13CE                                             l579 2A1C  
                                           l764 166E                                             l748 146E  
                                           l589 29B8                                             l934 2012  
                                           l791 10B2                                             l696 2058  
                                           l778 0CD0                                             l699 209A  
                                  __CFG_CPB$OFF 000000                                             _PR2 000FBB  
                                  __CFG_CPD$OFF 000000                                             _abs 2630  
                                           _pad 2014                                             _sin F955  
                               _TMR2_Initialize 2A1E                                             tosl 000FFD  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                          ?_abs 0023                                            l1513 1B98  
                                          l4010 234A                                            l1516 1BA0  
                                          l4020 235E                                            l4012 234A  
                                          l1525 278A                                            l1533 25AA  
                                          l4030 238C                                            l4022 2364  
                                          l4014 234C                                            l1519 26AA  
                                          l5000 0DD0                                            l4040 23BE  
                                          l4032 23A4                                            l4024 236A  
                                          l4016 2352                                            l1554 2348  
                                          l1562 25EE                                            l1482 2666  
                                          l5010 0E56                                            l5002 0DE2  
                                          l4050 26C8                                            l4042 23C2  
                                          l4026 2370                                            l4018 2358  
                                          l1539 2752                                            l1580 24F6  
                                          l5020 0F22                                            l5012 0E7C  
                                          l5004 0E08                                            l5100 1D2E  
                                          l4044 26AE                                            l4028 2376  
                                          l1485 266E                                            l4062 282E  
                                          l5030 0FD0                                            l5022 0F48  
                                          l5014 0EA2                                            l5006 0E3A  
                                          l5110 1D4A                                            l5102 1D36  
                                          l4046 26B6                                            l4038 23AC  
                                          l1575 27F8                                            l1591 271A  
                                          l5040 1054                                            l5024 0F6E  
                                          l5016 0EEA                                            l5120 1D68  
                                          l5112 1D50                                            l5104 1D38  
                                          l4056 26CE                                            l4048 26B8  
                                          l5200 1762                                            l1585 24FE  
                                          l1569 290A                                            l5026 0F86  
                                          l5034 100C                                            l5050 107A  
                                          l5130 1D96                                            l5122 1D72  
                                          l5114 1D56                                            l5106 1D3E  
                                          l4058 26E0                                            l5210 17C6  
                                          l5202 1768                                            l5052 10A0  
                                          l5036 1032                                            l5044 1060  
                                          l5028 0F94                                            l5140 1DDC  
                                          l5132 1D9C                                            l5116 1D5C  
                                          l5108 1D44                                            l5220 1832  
                                          l5212 17D2                                            l5204 177E  
                                          l5300 0366                                            l5046 106E  
                                          l5038 1040                                            l5070 2454  
                                          l5150 1DFA                                            l5142 1DE2  
                                          l5134 1DB8                                            l5118 1D62  
                                          l5214 17E4                                            l5222 1838  
                                          l5206 17AE                                            l5310 03B8  
                                          l5302 0376                                            l5230 0068  
                                          l4600 27C4                                            l5072 247A  
                                          l5080 2220                                            l5160 1E5C  
                                          l5152 1E00                                            l5144 1DE8  
                                          l5136 1DC4                                            l5128 1D7A  
                                          l3800 291C                                            l5224 184E  
                                          l5216 1800                                            l5208 17B4  
                                          l5400 078A                                            l5320 0428  
                                          l5312 03DE                                            l5304 0382  
                                          l5240 0094                                            l5232 006A  
                                          l3650 29B4                                            l4602 27D0  
                                          l4610 26E4                                            l5066 243E  
                                          l5074 28E4                                            l5090 2236  
                                          l5170 1EA2                                            l5162 1E5E  
                                          l5154 1E06                                            l5146 1DEE  
                                          l5138 1DDA                                            l3730 2A1A  
                                          l3634 2A38                                            l3802 2920  
                                          l3810 2A2E                                            l5218 1810  
                                          l5410 082E                                            l5402 0800  
                                          l5330 0496                                            l5322 0442  
                                          l5314 03F0                                            l5306 0390  
                                          l5250 00CE                                            l5242 0096  
                                          l5234 0076                                            l5226 0052  
                                          l3820 28C8                                            l4604 27D4  
                                          l4620 2044                                            l4700 1CC0  
                                          l5068 2446                                            l5076 28EE  
                                          l5092 2254                                            l5164 1E70  
                                          l5156 1E0C                                            l5148 1DF4  
                                          l3740 29CC                                            l3652 2A4C  
                                          l3724 2A74                                            l3732 288E  
                                          l3804 2924                                            l3812 2A32  
                                          l5180 1688                                            l5172 1670  
                                          l5500 0AF4                                            l5420 0862  
                                          l5412 0834                                            l5404 0812  
                                          l5340 04D4                                            l5332 04A6  
                                          l5324 0450                                            l5316 040C  
                                          l5308 03AA                                            l5252 00E2  
                                          l5244 00A4                                            l5236 0086  
                                          l5228 0064                                            l3822 28CE  
                                          l3814 29F8                                            l4606 27EC  
                                          l4630 20A8                                            l4622 2050  
                                          l4614 2014                                            l4702 1CD2  
                                          l5094 228E                                            l5086 222A  
                                          l5166 1E82                                            l5158 1E16  
                                          l3830 2A78                                            l3742 2958  
                                          l3654 2A42                                            l3734 289A  
                                          l3726 2A0C                                            l3750 27FE  
                                          l3806 2928                                            l5190 16F6  
                                          l5182 169A                                            l5174 167E  
                                          l5510 0B2E                                            l5502 0B06  
                                          l5430 08A8                                            l5422 0870  
                                          l5414 0844                                            l5406 0816  
                                          l5350 052A                                            l5342 04E8  
                                          l5326 0476                                            l5318 041A  
                                          l5270 02BA                                            l5254 00EE  
                                          l5246 00B2                                            l5238 0092  
                                          ?_pad 0023                                            l3824 28DC  
                                          l4632 20BC                                            l4624 2064  
                                          l4616 2022                                            l4704 1CD8  
                                          l4720 1EE6                                            l4712 1EB0  
                                          l4800 11A0                                            l4640 271C  
                                          l5096 2290                                            l5088 2230  
                                          l5168 1E92                                            l3920 2182  
                                          l3840 214E                                            l3832 20D8  
                                          l3656 2A56                                            l3736 28B6  
                                          l3728 2A18                                            l3760 2828  
                                          l3752 2802                                            l3744 2A1E  
                                          l3808 292C                                            l5192 1702  
                                          l5184 16B8                                            l5512 0B36  
                                          l5504 0B0A                                            l5440 08EA  
                                          l5432 08B6                                            l5424 087E  
                                          l5416 0848                                            l5408 082A  
                                          l5360 05E0                                            l5352 0542  
                                          l5344 04F4                                            l5328 0484  
                                          l5280 02D4                                            l5264 028C  
                                          l5256 0274                                            l5248 00C0  
                                          l3826 28E0                                            l3818 28BA  
                                          l4626 2078                                            l4618 2036  
                                          l4706 1CE8                                            l4730 1F4E  
                                          l4722 1EF4                                            l4714 1EB4  
                                          l4810 12B0                                            l4802 1222  
                                          l5098 22A0                                            l3930 219C  
                                          l3922 2184                                            l3842 217E  
                                          l3834 20E6                                            l3770 2628  
                                          l3762 25F0                                            l3738 2996  
                                          l3754 2818                                            l3746 2A26  
                                          l5194 1714                                            l5186 16C4  
                                          l5506 0B0C                                            l5450 0918  
                                          l5442 08F2                                            l5434 08C4  
                                          l5426 088C                                            l5418 0854  
                                          l5370 062A                                            l5362 05E4  
                                          l5354 05B8                                            l5346 04FC  
                                          l5338 04B0                                            l5290 0326  
                                          l5282 02EE                                            l5266 0298  
                                          l5258 0284                                            l4572 29E4  
                                          l4580 22C6                                            l4628 207C  
                                          l4708 1D08                                            l4732 1F5C  
                                          l4740 1FC2                                            l4724 1F14  
                                          l4716 1EC2                                            l4636 2630  
                                          l4820 1322                                            l4812 12CE  
                                          l4804 122A                                            l4644 2670  
                                          l4652 24D8                                            l3940 21DA  
                                          l3932 21A2                                            l3924 218A  
                                          l3836 2126                                            l3764 2604  
                                          l3756 281A                                            l3748 27FA  
                                          l5196 1730                                            l5188 16D8  
                                          l5508 0B22                                            l5460 0968  
                                          l5452 093A                                            l5444 090E  
                                          l5436 08D2                                            l5428 089A  
                                          l5380 065E                                            l5372 0636  
                                          l5364 05FC                                            l5356 05CA  
                                          l5348 050E                                            l5292 032A  
                                          l5284 0308                                            l5276 02C2  
                                          l5268 029E                                            l5516 0B4C  
                                          l4662 2932                                            l4750 255E  
                                          l4910 1A42                                            l4902 1A08  
                                          l4574 29F2                                            l4582 22D8  
                                          l4670 1BA6                                            l4742 1FD2  
                                          l4734 1F8A                                            l4726 1F32  
                                          l4718 1EE2                                            l4638 264A  
                                          l4830 135C                                            l4822 1330  
                                          l4814 12E8                                            l4806 1230  
                                          l4654 24EA                                            l3950 21FA  
                                          l3934 21A8                                            l3926 2190  
                                          l3918 2182                                            l3838 212A  
                                          l3766 2610                                            l3758 281C  
                                          l5198 1740                                            l5470 0A22  
                                          l5462 09EA                                            l5454 0940  
                                          l5438 08D6                                            l5390 072C  
                                          l5382 0670                                            l5374 0642  
                                          l5366 0608                                            l5358 05CC  
                                          l5294 0334                                            l5286 030C  
                                          l5278 02CE                                            l4664 294E  
                                          l4752 2572                                            l4920 1A9A  
                                          l4912 1A7A                                            l4904 1A1C  
                                          l4576 2A62                                            l4584 22E2  
                                          l4592 25AC                                            l4760 2500  
                                          l4680 1C06                                            l4672 1BB4  
                                          l4744 1FF2                                            l4736 1FAA  
                                          l4728 1F3A                                            l4824 1336  
                                          l4832 136C                                            l4816 1302  
                                          l4808 1294                                            l4648 24A2  
                                          l4840 13A6                                            l3952 220C  
                                          l3936 21AE                                            l3928 2196  
                                          l3768 261C                                            l3792 290C  
                                          l5480 0A5E                                            l5472 0A3E  
                                          l5464 09FE                                            l5456 0952  
                                          l5392 073E                                            l5384 0682  
                                          l5376 0656                                            l5368 061E  
                                          l5296 0346                                            l5288 0312  
                                          l4658 2754                                            l4754 25A0  
                                          l4930 1B18                                            l4922 1AA2  
                                          l4914 1A7E                                            l4906 1A20  
                                          l4586 2300                                            l4578 22B4  
                                          l4594 25B8                                            l4770 2534  
                                          l4762 2512                                            l4690 1C50  
                                          l4682 1C0A                                            l4674 1BD4  
                                          l4738 1FBC                                            l4826 1348  
                                          l4818 1310                                            l4850 1420  
                                          l4842 13C0                                            l3954 2218  
                                          l3946 21E2                                            l3938 21C4  
                                          l3794 2910                                            l5490 0AB6  
                                          l5482 0A6A                                            l5474 0A42  
                                          l5466 0A0A                                            l5458 0954  
                                          l5386 069E                                            l5394 0746  
                                          l5378 065A                                            l5298 0356  
                                          l4756 25A4                                            l4748 255A  
                                          l4924 1AAA                                            l4908 1A24  
                                          l4588 2336                                            l4596 25CA  
                                          l4764 251E                                            l4692 1C5E  
                                          l4684 1C16                                            l4676 1BD8  
                                          l4668 1BA2                                            l4828 1354  
                                          l4780 111E                                            l4860 1462  
                                          l4852 1428                                            l4844 13EC  
                                          l4836 1396                                            l3948 21F6  
                                          l3796 2914                                            l5492 0ABA  
                                          l5484 0A7C                                            l5476 0A54  
                                          l5468 0A1E                                            l5396 0756  
                                          l5388 06B6                                            l4934 1B58  
                                          l4926 1AE0                                            l4918 1A84  
                                          l4598 25CE                                            l4766 252A  
                                          l4694 1C70                                            l4686 1C34  
                                          l4678 1BE6                                            l4790 1176  
                                          l4782 112C                                            l4774 10B4  
                                          l4870 14EE                                            l4854 142E  
                                          l4846 13F6                                            l4838 13A4  
                                          l4950 0C1E                                            l3798 2918  
                                          l5486 0A88                                            l5494 0ABC  
                                          l5478 0A56                                            l5398 0772  
                                          l4936 1B6A                                            l4768 252E  
                                          l4696 1C9E                                            l4688 1C3C  
                                          l4792 1184                                            l4784 112E  
                                          l4776 10D4                                            l4880 1532  
                                          l4872 1500                                            l4864 14A2  
                                          l4856 1436                                            l4848 1416  
                                          l5680 0C90                                            l4952 0C22  
                                          l4944 0BDA                                            l5496 0ACC  
                                          l5488 0AA4                                            l4938 1B7C  
                                          l5682 1ACA                                            l4698 1CBE  
                                          l4794 118A                                            l4786 1148  
                                          l4778 10FE                                            l4890 15FE  
                                          l4866 14B4                                            l4874 1514  
                                          l4858 1452                                            l4882 1590  
                                          l4970 0C56                                            l4962 0C4A  
                                          l4954 0C30                                            l4946 0C00  
                                          l5498 0AD8                                            l4796 1192  
                                          l4788 1164                                            l4892 161A  
                                          l4884 15AC                                            l4876 1526  
                                          l4956 0C32                                            l4980 0CBE  
                                          l4948 0C0E                                            l4798 119A  
                                          l4894 1620                                            l4886 15CA  
                                          l4878 152C                                            l4990 0D4A  
                                          l4982 0CDE                                            l4974 0C5C  
                                          l4966 0C50                                            l4958 0C44  
                                          l5678 0B60                                            l4896 1630  
                                          l4888 15E4                                            l4992 0D58  
                                          l4984 0CE0                                            l4898 1646  
                                          l4994 0D78                                            l4986 0D06  
                                          l4978 0C68                                            l4996 0D86  
                                          l4988 0D3C                                            STR_1 FEEE  
                                          STR_2 FF27                                            STR_3 FD5B  
                                          STR_4 FFE7                                            STR_5 FB30  
                                          STR_6 FF02                                            STR_7 FFEC  
                                          STR_8 FFFD                                            STR_9 FFEC  
                                          _LATA 000F89                                            _LATB 000F8A  
                                          _LATC 000F8B                                            u4000 161A  
                                          u4001 1616                                            u4010 1A42  
                                          u4011 1A3E                                            u4020 1A7A  
                                          u3300 29F2                                            u4100 0CDE  
                                          u4021 1A76                                            u3301 29EE  
                                          u4101 0CDA                                            u4030 1A96  
                                          u3310 22C6                                            u4110 0D06  
                                          u4031 1A92                                            u3311 22C2  
                                          u4111 0D02                                            u4040 1B52  
                                          u3320 22D8                                            u3400 2044  
                                          u4200 0F6E                                            u4120 0D4A  
                                          u4041 1B4C                                            u3321 22D4  
                                          u3401 2040                                            u4201 0F6A  
                                          u4121 0D46                                            u4050 1B54  
                                          u3330 2300                                            u3410 209A  
                                          u4210 1032                                            u4130 0DCA  
                                          u3331 22FC                                            u3411 2096  
                                          u4211 102E                                            u4131 0DC4  
                                          u2620 29C6                                            u4060 1B6A  
                                          u3340 2336                                            u3420 20A8  
                                          u3500 24EA                                            u4140 0DCC  
                                          u4220 2498                                            u4300 16D8  
                                          u2621 29C2                                            u4061 1B66  
                                          u3341 2332                                            u3421 20A4  
                                          u3501 24E6                                            u4221 2494  
                                          u4301 16D4                                            u3510 2784  
                                          u4070 1B7C                                            u3350 25EE  
                                          u3430 264A                                            u4150 0DE2  
                                          u4230 2252                                            u2710 29B0  
                                          u4310 16F6                                            u3511 277E  
                                          u4071 1B78                                            u3351 25EA  
                                          u3431 2646                                            u4151 0DDE  
                                          u4231 224E                                            u2711 29AC  
                                          u4311 16F2                                            u3520 2786  
                                          u3360 27EC                                            u3600 1EC2  
                                          u3440 274C                                            u4160 0E08  
                                          u4080 0C00                                            u4240 22A0  
                                          u4320 1730                                            u4400 02EA  
                                          u3361 27E8                                            u3601 1EBE  
                                          u3441 2746                                            u4161 0E04  
                                          u4081 0BFC                                            u4241 229C  
                                          u4321 172C                                            u4401 02E6  
                                          u3530 1BB4                                            u3610 1EF4  
                                          u3450 274E                                            u3370 2714  
                                          u4170 0E7C                                            u4090 0CD0  
                                          u4250 1DB8                                            u2810 21C4  
                                          u4330 177E                                            u4410 0326  
                                          u3531 1BB0                                            u3611 1EF0  
                                          u3371 270E                                            u4171 0E78  
                                          u4091 0CCC                                            u4251 1DB4  
                                          u2811 21C0                                            u4331 177A  
                                          u4411 0322                                            u2740 2A08  
                                          u3540 1BE6                                            u3620 1F32  
                                          u3700 10E8                                            u3460 26A4  
                                          u3380 2716                                            u4180 0EA2  
                                          u4260 1E82                                            u2820 21DA  
                                          u4340 17C6                                            u4500 06B6  
                                          u4420 0346                                            u2741 2A02  
                                          u3541 1BE2                                            u3621 1F2E  
                                          u3461 269E                                            u4181 0E9E  
                                          u4261 1E7E                                            u2821 21D6  
                                          u4341 17C2                                            u4501 06B2  
                                          u4421 0342                                            u2750 28C8  
                                          u3390 2022                                            u3630 1F5C  
                                          u3710 10FE                                            u3470 26A6  
                                          u4190 0F48                                            u4270 1E92  
                                          u2830 220C                                            u4350 1800  
                                          u4510 0756                                            u4430 04E8  
                                          u2751 28C4                                            u3391 201E  
                                          u3551 1C10                                            u3631 1F58  
                                          u3711 10FA                                            u4191 0F44  
                                          u4271 1E8E                                            u2831 2208  
                                          u4351 17FC                                            u4511 0752  
                                          u4431 04E4                                            u2760 28DC  
                                          u3560 1C34                                            u3640 1F8A  
                                          u3800 1310                                            u3720 112C  
                                          u3480 24D2                                            u4360 184E  
                                          u4280 169A                                            u4600 0B22  
                                          u4520 078A                                            u4440 050E  
                                          u2761 28D8                                            u3561 1C30  
                                          u3641 1F86                                            u3801 130C  
                                          u3721 1128                                            u3481 24CC  
                                          u4361 184A                                            u4281 1696  
                                          u4601 0B1E                                            u4521 0786  
                                          u4441 050A                                            u2746 2A0A  
                                          u3570 1C5E                                            u3650 1FD2  
                                          u3810 1322                                            u3730 1148  
                                          u3490 24D4                                            u2930 238C  
                                          u2770 20E6                                            u4290 16B8  
                                          u4530 082A                                            u4450 0542  
                                          u4370 0086                                            u3571 1C5A  
                                          u3651 1FCE                                            u3811 131E  
                                          u3731 1144                                            u2931 2388  
                                          u2771 20E2                                            u4291 16B4  
                                          u4531 0826                                            u4451 053E  
                                          u4371 0082                                            u3660 2572  
                                          u3580 1C9E                                            u3820 1330  
                                          u3740 1176                                            u3900 14B4  
                                          u2940 23D4                                            u4540 08EA  
                                          u4460 05E0                                            u4380 00E2  
                                          u3661 256E                                            u3581 1C9A  
                                          u3821 132C                                            u3741 1172  
                                          u3901 14B0                                            u2941 23D0  
                                          u4541 08E6                                            u4461 05DC  
                                          u4381 00DE                                            u3670 25A0  
                                          u3590 1CE8                                            u3830 1348  
                                          u3750 1184                                            u3910 14E8  
                                          u2950 26C8                                            u4550 0952  
                                          u4470 061E                                            u4390 02B4  
                                          u3671 259C                                            u3591 1CE4  
                                          u3831 1344                                            u3751 1180  
                                          u3911 14E2                                            u2951 26C4  
                                          u4551 094E                                            u4471 061A  
                                          u4391 02B0                                            u3680 2512  
                                          u3760 12B0                                            u3920 14EA  
                                          u3840 13A4                                            u4560 0968  
                                          u4480 0656                                            u3681 250E  
                                          u3761 12AC                                            u3841 13A0  
                                          u4561 0964                                            u4481 0652  
                                          u3770 12CE                                            u3690 10E6  
                                          u3930 1500                                            u3850 13C0  
                                          u4570 0A1E                                            u4490 0682  
                                          u3771 12CA                                            u3691 10E0  
                                          u3931 14FC                                            u3851 13BC  
                                          u4571 0A1A                                            u4491 067E  
                                          u3780 12E8                                            u3940 156A  
                                          u3860 13EC                                            u4580 0A7C  
                                          u3781 12E4                                            u3861 13E8  
                                          u4581 0A78                                            u3790 1302  
                                          u3950 15AC                                            u3870 1452  
                                          u4590 0ACC                                            u3791 12FE  
                                          u3951 15A8                                            u3871 144E  
                                          u4591 0AC8                                            u3960 15CA  
                                          u3880 149C                                            u3961 15C6  
                                          u3945 1558                                            u3881 1496  
                                          u3970 15E4                                            u3890 149E  
                                          u3971 15E0                                            u3980 15FE  
                                          u3981 15FA                                            u3990 160C  
                                          u3991 1608                                            _TMR2 000FBC  
                                          _WPUB 000F61                                   _EUSART1_Write 29E2  
                                          abs@a 0023                                            _dbuf 00D5  
                                          _atoi 1A08                                            _ctoa 2500  
                                          _main 0052                                            _dtoa 10B4  
                                 ?_EUSART1_Read 0001                                            _prec 0041  
                                          _nout 00C3                                            pad@i 002A  
                                          pad@p 0027                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 002C  
                                          fsr2l 000FD9                                            btemp 004F  
                                 __CFG_BORV$190 000000                                            _xtoa 1396  
                                          prodh 000FF4                                            prodl 000FF3  
                               ??_hexDumpBuffer 00A9                                            start 004E  
                                 __CFG_IESO$OFF 000000                           ??_EPWM1_LoadDutyValue 0013  
                     __size_of_SDCARD_ReadBlock 009A                                    ___param_bank 000000  
                                         ??_abs 0025                                           ??_pad 0029  
                          SDCARD_HCInitialize@i 00AD                         __end_of_TMR0_Initialize 282E  
                ??_TMR0_DefaultInterruptHandler 0001                  __size_of_OSCILLATOR_Initialize 001C  
                 __end_of_OSCILLATOR_Initialize 29B2                                 __end_of___aodiv 1D2A  
                                         ?_atoi 0018                                     ?_SPI2_Close 0001  
                                         ?_ctoa 002E                                           ?_main 0001  
                                         ?_dtoa 002E                                 __end_of___aomod 2014  
                                         STR_10 FF88                                           STR_11 FB32  
                                         STR_12 FF9A                                           STR_20 FC51  
                                         STR_13 FFD5                                           STR_21 FAF9  
                                         STR_30 FFF3                                           STR_22 FB32  
                                         STR_14 FEC5                                           STR_31 FFF3  
                                         STR_15 FE6B                                           STR_23 FD3B  
                                         STR_40 FF88                                           STR_24 FB32  
                                         STR_16 FB32                                           STR_32 FC7C  
                                         STR_41 FF7C                                           STR_17 FE3B  
                                         STR_33 FDB4                                           STR_25 FB66  
                                         STR_18 FB32                                           STR_50 FFFD  
                                         STR_34 FFB7                                           STR_42 FF5B  
                                         STR_26 FCA6                                           STR_51 FFEC  
                                         STR_43 FFEC                                           STR_35 FFC2  
                                         STR_19 FCD0                                           STR_27 FBF5  
                                         STR_52 FF88                                           STR_28 FB32  
                                         STR_36 FF02                                           STR_44 FFFD  
                                         STR_60 FFEC                                           STR_61 FF88  
                                         STR_45 FFEC                                           STR_37 FFEC  
                                         STR_29 FFCD                                           STR_53 FBC7  
                                         STR_46 FF88                                           STR_62 FF8B  
                                         STR_38 FFFD                                           STR_70 FA08  
                                         STR_54 F973                                           STR_71 FF88  
                                         STR_63 FF5B                                           STR_39 FFEC  
                                         STR_47 FF8B                                           STR_55 FEDA  
                                         STR_56 FF8B                                           STR_48 FF5B  
                                         STR_64 FFEC                                           STR_80 FD18  
                                         STR_72 FA86                                           STR_57 FF5B  
                                         STR_65 FFFD                                           STR_49 FFEC  
                                         STR_73 FD97                                           STR_81 FB98  
                                         STR_82 FF88                                           STR_90 FFAD  
                                         STR_66 FFEC                                           STR_58 FFEC  
                                         STR_74 FF15                                           STR_67 FF88  
                                         STR_91 FFAD                                           STR_83 FA86  
                                         STR_59 FFFD                                           STR_75 FC23  
                                         STR_84 FD97                                           STR_68 FF4A  
                                         STR_92 FF39                                           STR_76 F9C1  
                                         STR_85 FF15                                           STR_77 FF6C  
                                         STR_93 FE08                                           STR_69 FAC0  
                                         STR_86 FE53                                           STR_78 FE22  
                                         STR_94 FDD1                                           STR_87 FF6C  
                                         STR_95 FFF8                                           STR_79 FFE2  
                                         STR_96 FF88                                           STR_88 FA4C  
                                         STR_89 FFA9                                           STR_97 FEB0  
                                         STR_98 FE9A                                           STR_99 FE83  
                     TMR0_ReadTimer@readValHigh 0008                                           _T0CON 000FD5  
                                         ?_xtoa 002E                                           _T2CON 000FBA  
                                __CFG_DEBUG$OFF 000000                                           i2l164 1912  
                                         i2l173 19E4                                           i2l157 191A  
                               _TMR0_WriteTimer 2A2E                                           i2l175 1A06  
                                         i2l380 2994                                           i2l390 27C2  
                                         i2l383 2A72                                           i2l448 288C  
                                         i2l396 2A80                                           i2l558 003A  
                                  vfpfcnvrt@fmt 003B                                           _TMR0H 000FD7  
                                  vfpfcnvrt@llu 0088                                           _TMR0L 000FD6  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94               __size_of_TMR0_SetInterruptHandler 000A  
                                 __CFG_WRT0$OFF 000000                              __size_of_SPI2_Open 00AC  
                                 __CFG_WRT1$OFF 000000                                   __CFG_WRT2$OFF 000000  
                     ?_TMR0_SetInterruptHandler 0011                                   __CFG_WRT3$OFF 000000  
                                __CFG_EBTR0$OFF 000000                                  __CFG_FCMEN$OFF 000000  
                                __CFG_EBTR1$OFF 000000                                  __CFG_EBTR2$OFF 000000  
                                __CFG_EBTR3$OFF 000000                                __end_of_TMR0_ISR 27C4  
                                 __CFG_WRTB$OFF 000000                                   __CFG_WRTC$OFF 000000  
                                 __CFG_WRTD$OFF 000000                                  __CFG_EBTRB$OFF 000000  
                                         _flags 0043                                           _fputc 22B4  
                               __end_of_isalpha 26AC                                           _fputs 25AC  
                               __end_of_isdigit 278C                              __CFG_MCLRE$EXTMCLR 000000  
                                         atoi@n 0025                                           pad@fp 0023  
                                         atoi@s 0018                                           _width 003F  
                                         ctoa@c 0030                                           _putch 2A60  
                                         ctoa@w 0031                                           main@i 00BD  
                                         main@j 00BA                                           dtoa@d 0030  
                                         dtoa@i 0078                                           dtoa@n 0070  
                                         dtoa@p 006A                                           dtoa@s 006E  
                                         dtoa@w 006C                                 __end_of_islower 271C  
                               __end_of_isspace 25AC                                  ?_EUSART1_Write 0001  
                               __end_of_isupper 2754                                           pclath 000FFA  
                                         tablat 000FF5                      SDCARD_HCInitialize@verbose 00AC  
                                ??_EUSART1_Read 0011                                           ttemp5 0050  
                                         ttemp6 0053                                           ttemp7 0057  
                                         status 000FD8                                           wtemp8 0050  
                                         xtoa@c 007A                                           xtoa@d 0030  
                                         xtoa@i 0078                                           xtoa@n 0070  
                                         xtoa@p 006C                                           xtoa@w 006E  
                                         xtoa@x 0038                                  __CFG_HFOFST$ON 000000  
                               __end_of_toupper 2500                         __size_of_SDCARD_SetIdle 0098  
            _EUSART1_DefaultFramingErrorHandler 000000                                  __CFG_PBADEN$ON 000000  
                           _SDCARD_HCInitialize 1D2A                                    _toupper$2096 001D  
                               __initialization 23D8                    SDCARD_ReadBlock@sdCardBuffer 0016  
                                  __end_of_atoi 1BA2                                    __end_of_ctoa 255A  
                    __end_of_EUSART1_Initialize 2630                                    __end_of_main 0BDA  
                                  __end_of_dtoa 1396                               _SPI2_ExchangeByte 29B2  
                                  __end_of_xtoa 1670               __size_of_SDCARD_PollWriteComplete 0038  
                     ?_SDCARD_PollWriteComplete 0001                        myTMR0ISR@pullBufferIndex 0047  
                       __end_of_TMR2_Initialize 2A2E                     ?_INTERRUPT_InterruptManager 0001  
                            ?_SPI2_ExchangeByte 0001                         ??i2_EPWM1_LoadDutyValue 0003  
                                        ??_atoi 001A                                          ??_ctoa 0031  
                                        ??_main 00B1                                          ??_dtoa 0060  
                                        ??_xtoa 0060                                   __activetblptr 000003  
                          ?_SDCARD_HCInitialize 0001                        __size_of_SPI2_Initialize 0012  
                           ??_SPI2_ExchangeByte 0011                           SDCARD_SetIdle@verbose 00A7  
                                        _ADCON0 000FC2                                          _ADCON1 000FC1  
                                        _ADCON2 000FC0                                          ?_fputc 0013  
                                        STR_100 FCF5                                          STR_101 FD7A  
                                        STR_110 FF68                                          STR_102 FDED  
                                        ?_fputs 001C                                          STR_111 FFFB  
                                        STR_103 FFF1                                          STR_104 FF6A  
                                        STR_112 FFF5                                          STR_113 FF88  
                                        STR_105 FF69                                          STR_106 FFFB  
                                        _ADRESH 000FC4                                          STR_107 FFF5  
                                        STR_108 FF88                                          STR_109 FFDC  
                                        _ADRESL 000FC3                                          _CCPR1H 000FBF  
                                        _CCPR1L 000FBE                                          _ANSELA 000F38  
                                        ?_putch 0001                                          _ANSELB 000F39  
                                        _ANSELC 000F3A                    __size_of_EUSART1_is_rx_ready 0014  
                                        i2l4070 2796                                  __CFG_WDTEN$OFF 000000  
                                        i2l4072 27AA                                          i2l4064 278C  
                                        i2l4066 278E                                          i2l3700 1998  
                                        i2l4068 2792                                          i2l4420 001A  
                                        i2l3702 19AC                                          i2l3710 19EC  
                                        i2l4422 0028                                          i2l3712 1A02  
                                        i2l3704 19BC                                          i2l4424 0036  
                                        i2l3642 2978                                          i2l3714 1A04  
                                        i2l3706 19CA                                          i2l3644 2980  
                                        i2l3660 2A6E                                          i2l3708 19DA  
                                        i2l3646 298C                                          i2l3662 285E  
                                        i2l3670 1884                                          i2l3680 18DA  
                                        i2l3664 185C                                          i2l3658 2A6A  
                                        i2l3690 192E                                          i2l3682 18EA  
                                        i2l3674 1898                                          i2l3692 194C  
                                        i2l3684 18F8                                          i2l3676 18C2  
                                        i2l3668 1870                                          i2l3686 1908  
                                        i2l3678 18C6                                          i2l3696 196A  
                                        i2l3698 1994                                          i2l5684 18AC  
                                        i2l5686 197E                                   _redBufferFull 00D4  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                                 vfpfcnvrt@done 0090                                          _SPBRG1 000FAF  
                                        _TXREG1 000FAD                                          _TXSTA1 000FAC  
                           __size_of_SPI2_Close 0004                                  __CFG_XINST$OFF 000000  
                             __end_of_SPI2_Open 2182                       __end_of_SPI2_ExchangeByte 29CC  
                                  _CCPTMRS0bits 000F49                                    vfprintf@cfmt 009B  
                                     ??___aodiv 0021                                       ??___aomod 0021  
                                        ___wmul 2932                                  __CFG_STVREN$ON 000000  
                       __end_of_TMR0_WriteTimer 2A38                       i2TMR0_WriteTimer@timerVal 0009  
                      ?_EUSART1_SetErrorHandler 0011                                ?_TMR0_Initialize 0001  
                                        clear_0 2410                                          clear_1 2422  
                                        clear_2 242E                                          _printf 28E4  
                                        pad@buf 0025                ??_EUSART1_SetOverrunErrorHandler 0013  
               ?_EUSART1_SetOverrunErrorHandler 0011                                          ctoa@fp 002E  
                                        dtoa@fp 002E                                          _strlen 27C4  
                         ??_SDCARD_HCInitialize 00AB                                          fputc@c 0013  
                   SDCARD_HCInitialize@response 00AF                                          fputs@c 0020  
                                        fputs@i 0021                                    __pdataCOMRAM 004D  
                                        fputs@s 001C                                       ??_isalpha 0013  
                                     ??_isdigit 0013                                       ??_islower 0013  
                                  __mediumconst F954                                       ??_isspace 0013  
                                        tblptrh 000FF7                                       ??_isupper 0013  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                              __end_of_vfprintf 24A2                                 ??_EUSART1_Write 0011  
      TMR0_SetInterruptHandler@InterruptHandler 0011                                          xtoa@fp 002E  
                                     ??_toupper 0019                   __size_of_INTERRUPT_Initialize 0004  
                   myTMR0ISR@activeBuffersample 004E                               _SYSTEM_Initialize 290C  
                                    __accesstop 0060                         __end_of__initialization 2434  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                              _SDCARD_ReadBlock 2182                               ?_EPWM1_Initialize 0001  
                    __end_of_spi2_configuration F973                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 2A7E                             ??_SYSTEM_Initialize 0015  
                                     ?_TMR0_ISR 0001                              ??_EPWM1_Initialize 0011  
                                 __end_of_fputc 234A                                   __end_of_fputs 25F0  
                                 __end_of_putch 2A6A                         __size_of_TMR0_ReadTimer 001E  
                              ?_TMR2_Initialize 0001                  i2EPWM1_LoadDutyValue@dutyValue 0001  
                          __end_of_EUSART1_Read 28E4                                         ??_fputc 0017  
                     __end_of_SYSTEM_Initialize 2932                                         ??_fputs 0020  
                            __size_of_myTMR0ISR 01AC                                         ??_putch 0012  
                            SDCARD_WriteBlock@i 0018                               ??_SPI2_Initialize 0011  
                                main@blocksRead 00B9                                      __pbssBANK0 00C3  
                               __CFG_PLLCFG$OFF 000000                              hexDumpBuffer@j_621 00AD  
                                _SDCARD_SetIdle 221C                          SDCARD_SetIdle@response 00A8  
                    __size_of_SPI2_ExchangeByte 001A                 __end_of_EUSART1_SetErrorHandler 2A60  
                            __CFG_CCP2MX$PORTC1 000000                __end_of_TMR0_SetInterruptHandler 2A42  
                                       ?___wmul 0011                                      ??_TMR0_ISR 000D  
                            __CFG_CCP3MX$PORTB5 000000                                ?_TMR0_WriteTimer 0011  
                                       _CCP1CON 000FBD                                         _ECCP1AS 000FB6  
                                    _fillBuffer 004C                                         ?_printf 009D  
                                  ??_SPI2_Close 0011                         __size_of_ADC_Initialize 0016  
                                       ?_strlen 0011          __end_of_EUSART1_SetFramingErrorHandler 2A56  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 2A4C  
                               SDCARD_SetIdle@i 00A9                                  _redBufferEmpty 00D2  
                                       _OSCCON2 000FD2                              __size_of_vfpfcnvrt 04DA  
                                       _OSCTUNE 000F9B                                         _PWM1CON 000FB7  
                                       _SPBRGH1 000FB0                                  main@readBlocks 00B8  
                                       _SSP2ADD 000F6E                                         _SSP2BUF 000F6F  
                             SDCARD_ReadBlock@i 0018                          __end_of_SDCARD_SetIdle 22B4  
                   __end_of_EPWM1_LoadDutyValue 285E                __end_of_SDCARD_PollWriteComplete 26E4  
                               __CFG_PWRTEN$OFF 000000                              __end_of_SPI2_Close 2A7C  
                          _ADC_InterruptHandler 00C5                                         __Hparam 0000  
                                       __Lparam 0000                           __end_of_hexDumpBuffer 185C  
                    myTMR0ISR@sampleBufferIndex 0049                                         ___aodiv 1BA2  
                                       ___aomod 1EB0                                 __size_of___wmul 0026  
                             __end_of_myTMR0ISR 1A08                                       ?_vfprintf 0095  
                           _EUSART1_is_rx_ready 29F8                                         __pcinit 23D8  
                                       __ramtop 1000                                         __ptext0 0052  
                                       __ptext1 1670                                         __ptext2 2A2E  
                                       __ptext3 290C                                         __ptext4 2A1E  
                                       __ptext5 27FA                                         __ptext6 2A38  
                                       __ptext7 2A0C                                         __ptext8 288E  
                                       __ptext9 2996                                 __size_of_printf 0028  
                                     _T0CONbits 000FD5                  __size_ofi2_EPWM1_LoadDutyValue 0030  
                               __size_of_strlen 0036                   __end_ofi2_EPWM1_LoadDutyValue 288E  
                         _OSCILLATOR_Initialize 2996                                       _T2CONbits 000FBA  
                                  __size_of_abs 0040                                    __size_of_pad 00C2  
                                       _isalpha 2670                                         _isdigit 2754  
                            _EUSART1_Initialize 25F0                                         _islower 26E4  
                      ??_PIN_MANAGER_Initialize 0011                                         _isspace 255A  
                                       _isupper 271C                                    _sdCardBuffer 04F7  
                                       atoi@neg 001E                                         main@cmd 00BC  
                    __size_of_SYSTEM_Initialize 0026                                         _toupper 24A2  
                          end_of_initialization 2434                            ?_EUSART1_is_rx_ready 0001  
                               ?_SDCARD_SetIdle 0001                             ?_EUSART1_Initialize 0001  
                                    _sampleRate 00F5                                         fputc@fp 0015  
                   _EUSART1_OverrunErrorHandler 00C9                                         fputs@fp 001E  
                 SDCARD_WriteBlock@sdCardBuffer 0016                               __end_of_vfpfcnvrt 10B4  
                         TMR0_ReadTimer@readVal 0005                                  _blueBufferFull 00D3  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                           __size_of_EUSART1_Read 002A  
                                    ??_vfprintf 003F                                       _SPI2_Open 20D6  
                                _TMR0_ReadTimer 2978                            ??_EUSART1_Initialize 0013  
                         SDCARD_WriteBlock@addr 0012                                         strlen@a 0013  
                                       strlen@s 0011                        _TMR0_SetInterruptHandler 2A38  
                                    _pullBuffer 004B                                 _sdCardBufferRed 02F7  
                      __end_of_SDCARD_ReadBlock 221C                              main@recordedBlocks 00B7  
                                     _TRISBbits 000F93                __size_of_EUSART1_SetErrorHandler 000A  
                SDCARD_PollWriteComplete@status 0012                             EUSART1_Write@txData 0011  
                         ??_EUSART1_is_rx_ready 0011                                    _EUSART1_Read 28BA  
                                    main@status 00B6                        _SDCARD_PollWriteComplete 26AC  
                        __end_of_TMR0_ReadTimer 2996                            main@numBlocksSampled 00B4  
                  __end_of_INTERRUPT_Initialize 2A78                     __end_of_SDCARD_HCInitialize 1EB0  
                                    ?_SPI2_Open 0001                                     vfpfcnvrt@ap 003D  
                                   vfpfcnvrt@fp 0039                                     vfpfcnvrt@ll 0080  
                                __end_of___wmul 2958                                   __pidataCOMRAM 2A7C  
                             __size_of_TMR0_ISR 0038                                  _ADC_Initialize 29CC  
                        ?_OSCILLATOR_Initialize 0001                                 _SPI2_Initialize 2A0C  
                                __end_of_printf 290C                                  __end_of_strlen 27FA  
                            _spi2_configuration F96F                             start_initialization 23D8  
                     __size_of_EPWM1_Initialize 0020                        __size_of_TMR0_Initialize 0034  
               __size_of_PIN_MANAGER_Initialize 002C                                     __end_of_abs 2670  
                                   __end_of_pad 20D6                                     __end_of_sin F96F  
                                   putch@txData 0012                    EPWM1_LoadDutyValue@dutyValue 0011  
                         __end_of_EUSART1_Write 29F8                               main@sdCardAddress 00BF  
                                   vfprintf@fmt 0097                                 ?_TMR0_ReadTimer 0001  
                                      ??___wmul 0015                          __end_of_ADC_Initialize 29E2  
                                   __pdataBANK0 00F5                                        ??_printf 003F  
                         SPI2_ExchangeByte@data 0011                                        ??_strlen 0013  
                                   __pbssBIGRAM 00F7                                     __pbssCOMRAM 003F  
                                 __pcstackBANK0 0060                                ___aodiv@dividend 0011  
                      __size_of_TMR2_Initialize 0010                ??_EUSART1_SetFramingErrorHandler 0013  
               ?_EUSART1_SetFramingErrorHandler 0011                                       _atoi$2004 0020  
                                     _atoi$2005 0024                                       _atoi$2006 0022  
                         _TMR0_InterruptHandler 00CD                          _PIN_MANAGER_Initialize 288E  
                                     _dtoa$1520 0068                               _SDCARD_WriteBlock 234A  
                                     __pintcode 0008                                   __pmediumconst F954  
                       __end_of_SPI2_Initialize 2A1E                                        ?___aodiv 0011  
                                      ?___aomod 0011                                ___aodiv@quotient 0023  
                            ?_SDCARD_WriteBlock 0012                                 ?_ADC_Initialize 0001  
                                   ??_SPI2_Open 0011                SPI2_Open@spi2UniqueConfiguration 0012  
                  ??_INTERRUPT_InterruptManager 000D                                __CFG_PRICLKEN$ON 000000  
                             __size_of_vfprintf 0064                                       _myTMR0ISR 185C  
                           ??_SDCARD_WriteBlock 0018                                        _BAUDCON1 000FB8  
            _EUSART1_DefaultOverrunErrorHandler 000000                                        ?_isalpha 0011  
                                      ?_isdigit 0011                        __size_of_TMR0_WriteTimer 000A  
                          _EUSART1_ErrorHandler 00C7                                        ?_islower 0011  
                                      ?_isspace 0011                                ??_SDCARD_SetIdle 003F  
                                      ?_isupper 0011                         _EUSART1_SetErrorHandler 2A56  
                                __size_of_fputc 0096                                  __size_of_fputs 0044  
                                      ?_toupper 0017                                  __size_of_putch 000A  
                          _INTERRUPT_Initialize 2A74                               ??_TMR0_Initialize 0013  
                                ___wmul@product 0015         EUSART1_SetErrorHandler@interruptHandler 0011  
                                      _LATBbits 000F8A                       __end_of_SDCARD_WriteBlock 23D8  
           __size_of_INTERRUPT_InterruptManager 0046                      ??_TMR0_SetInterruptHandler 0013  
                                      i2u270_40 19DA                                        i2u326_40 0028  
                                      i2u270_41 19D6                                        i2u326_41 0024  
                                      i2u263_40 186C                                        i2u327_40 0036  
                                      i2u263_41 1868                                        i2u327_41 0032  
                                      i2u264_40 18DA                                        i2u264_41 18D6  
                                      i2u265_40 18EA                                        i2u265_41 18E6  
                                      _PIR1bits 000F9E                                        i2u266_40 1908  
                                      i2u266_41 1904                                        i2u267_40 192A  
                                      i2u267_41 1926                                        i2u268_40 19AC  
                                      i2u268_41 19A8                                        i2u269_40 19BC  
                                      i2u269_41 19B8                                        _PIR3bits 000FA4  
                                      i2u296_40 27AA                                        i2u296_41 27A6  
                                      i2u297_48 27B0                                        i2u297_49 27C2  
                  __size_of_EPWM1_LoadDutyValue 0030                                        _RCONbits 000FD0  
                              __CFG_WDTPS$32768 000000                                        _SSP2CON1 000F6C  
                                      _SSP2CON2 000F6B                                        _TMR0_ISR 278C  
                                      _PSTR1CON 000FB9                                        _SSP2STAT 000F6D  
                                     _vfpfcnvrt 0BDA                        TMR0_ReadTimer@readValLow 0007  
                                     _xtoa$1530 0068                                       _xtoa$1531 006A  
                                    _ADCON0bits 000FC2                               ___wmul@multiplier 0011  
                                    ?_myTMR0ISR 0001                                _EPWM1_Initialize 2958  
                             i2_TMR0_WriteTimer 2A6A                           i2_EPWM1_LoadDutyValue 285E  
                                  _isspace$2031 0017                               ?_SDCARD_ReadBlock 0012  
                        __size_of_hexDumpBuffer 01EC                                      vfpfcnvrt@c 0094  
                            ?i2_TMR0_WriteTimer 0009                                     _INTCON2bits 000FF1  
                         ?_INTERRUPT_Initialize 0001                              ??_SDCARD_ReadBlock 0018  
                    ??_SDCARD_PollWriteComplete 0012                               ??_TMR2_Initialize 0011  
                           ??i2_TMR0_WriteTimer 000B                                        __Hrparam 0000  
                                    vfprintf@ap 0099                                        __Lrparam 0000  
                                    vfprintf@fp 0095                              __CFG_BOREN$SBORDIS 000000  
                             __CFG_P2BMX$PORTB5 000000                                ?_SPI2_Initialize 0001  
                       ??_OSCILLATOR_Initialize 0011                                __size_of___aodiv 0188  
                              __size_of___aomod 0164                     __size_of_EUSART1_Initialize 0040  
                                    ?_vfpfcnvrt 0039                                 ___aodiv@divisor 0019  
                               ___aodiv@counter 0021                       __end_ofi2_TMR0_WriteTimer 2A74  
                     ??_EUSART1_SetErrorHandler 0013                     _EUSART1_DefaultErrorHandler 000000  
                   __end_of_EUSART1_is_rx_ready 2A0C                                __size_of_isalpha 003C  
                              __size_of_isdigit 0038                                __size_of_islower 0038  
                              __size_of_isspace 0052                                        __ptext10 2A74  
                                      __ptext11 25F0                                        __ptext20 2182  
                                      __ptext12 2A42                                        __ptext21 26AC  
                                      __ptext13 2A4C                                        __ptext30 271C  
                                      __ptext22 1D2A                                        __ptext14 2A56  
                                      __ptext31 2670                                        __ptext23 221C  
                                      __ptext15 2958                                        __ptext40 22B4  
                                      __ptext32 10B4                                        __ptext24 28E4  
                                      __ptext16 29CC                                        __ptext41 2A60  
                                      __ptext33 2630                                        __ptext25 243E  
                                      __ptext17 20D6                                        __ptext50 282E  
                                      __ptext42 29E2                                        __ptext34 1EB0  
                                      __ptext26 0BDA                                        __ptext18 2A78  
                                      __ptext43 1A08                                        __ptext35 1BA2  
                                      __ptext27 1396                                        __ptext19 234A  
                                      __ptext52 278C                                        __ptext44 255A  
                                      __ptext36 2500                                        __ptext28 24A2  
                                      __ptext53 2A80                                        __ptext45 2754  
                                      __ptext37 2014                                        __ptext29 26E4  
                                      __ptext54 185C                                        __ptext46 2932  
                                      __ptext38 27C4                                        __ptext55 2A6A  
                                      __ptext47 29B2                                        __ptext39 25AC  
                                      __ptext56 285E                                        __ptext48 29F8  
                                      __ptext57 2978                                        __ptext49 28BA  
                                      __ptext58 0000                                __size_of_isupper 0038  
                                  _SSP2CON1bits 000F6C                         TMR0_WriteTimer@timerVal 0011  
                             ??_TMR0_WriteTimer 0013                                __size_of_toupper 005E  
                                _collectSamples 00D0                                   __size_of_atoi 019A  
                                 __size_of_ctoa 005A                                   __size_of_main 0B88  
                                 __size_of_dtoa 02E2                                ??_TMR0_ReadTimer 0003  
                                 __size_of_xtoa 02DA                      __size_of_SDCARD_WriteBlock 008E  
          __end_of_TMR0_DefaultInterruptHandler 2A82           __size_of_TMR0_DefaultInterruptHandler 0002  
                  _TMR0_DefaultInterruptHandler 2A80  EUSART1_SetOverrunErrorHandler@interruptHandler 0011  
                                 _hexDumpBuffer 1670                                        int$flags 004F  
                                      _vfprintf 243E              __end_of_INTERRUPT_InterruptManager 004E  
                    _INTERRUPT_InterruptManager 0008                                       printf@fmt 009D  
                   _EUSART1_FramingErrorHandler 00CB                                ___aomod@dividend 0011  
                                   ??_myTMR0ISR 000B                                  _vfpfcnvrt$1545 0092  
                  __size_of_SDCARD_HCInitialize 0186                          ?i2_EPWM1_LoadDutyValue 0001  
                                    _INTCONbits 000FF2                                        isalpha@c 0011  
                                      isdigit@c 0011                          ??_INTERRUPT_Initialize 0011  
                                      intlevel2 0000                                        islower@c 0011  
                                      isspace@c 0011                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 2A4C         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 2A42                                      _RCSTA1bits 000FAB  
                                      isupper@c 0011                                ??_ADC_Initialize 0011  
               fp__TMR0_DefaultInterruptHandler 0000                   ?_TMR0_DefaultInterruptHandler 0001  
                                ?_hexDumpBuffer 00A7                                 _blueBufferEmpty 00D1  
                                      printf@ap 00A5  EUSART1_SetFramingErrorHandler@interruptHandler 0011  
                               ___aomod@divisor 0019                                     ??_vfpfcnvrt 007C  
                               ___aomod@counter 0021                          __size_of_EUSART1_Write 0016  
                            _eusart1RxLastError 00CF                                      _SPI2_Close 2A78  
                    __size_ofi2_TMR0_WriteTimer 000A                                 _TMR0_Initialize 27FA  
                                      toupper@c 0017                               __CFG_T3CMX$PORTC0 000000  
                           _EPWM1_LoadDutyValue 282E                                _sdCardBufferBlue 00F7  
                                  ___aodiv@sign 0022                  __end_of_PIN_MANAGER_Initialize 28BA  
                             __CFG_FOSC$INTIO67 000000                       hexDumpBuffer@sdCardBuffer 00A7  
                                  ___aomod@sign 0022                                    fp__myTMR0ISR 0000  
                      __end_of_EPWM1_Initialize 2978                            ?_EPWM1_LoadDutyValue 0011  
